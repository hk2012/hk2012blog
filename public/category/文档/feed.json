{
    "version": "https://jsonfeed.org/version/1",
    "title": "流年印记 • All posts by \"文档\" category",
    "description": "数学 & 软件工程",
    "home_page_url": "https://hk2012.github.io",
    "items": [
        {
            "id": "https://hk2012.github.io/2024/04/24/doc/%E4%BB%8B%E7%BB%8D%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E7%8A%B6%E6%80%81/",
            "url": "https://hk2012.github.io/2024/04/24/doc/%E4%BB%8B%E7%BB%8D%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E7%8A%B6%E6%80%81/",
            "title": "介绍线程的生命周期和状态",
            "date_published": "2024-04-24T01:05:00.000Z",
            "content_html": "<h2 id=\"介绍线程的生命周期和状态\"><a class=\"anchor\" href=\"#介绍线程的生命周期和状态\">#</a> 介绍线程的生命周期和状态？</h2>\n<p><img data-src=\"/img/life.jpg\" alt=\"未命名文件.jpg\" /></p>\n<p><strong>1. 创建</strong><br />\n当程序使用 new 关键字创建了一个线程之后，该线程就处于一个新建状态（初始状态），此时它和其他 Java 对象一样，仅仅由 Java 虚拟机为其分配了内存，并初始化了其成员变量值。此时的线程对象没有表现出任何线程的动态特征，程序也不会执行线程的线程执行体。<br />\n<strong>2. 就绪</strong><br />\n当线程对象调用了 Thread.start () 方法之后，该线程处于就绪状态。Java 虚拟机会为其创建方法调用栈和程序计数器，处于这个状态的线程并没有开始运行，它只是表示该线程可以运行了。从 start () 源码中看出，start 后添加到了线程列表中，接着在 native 层添加到 VM 中，至于该线程何时开始运行，取决于 JVM 里线程调度器的调度 (如果 OS 调度选中了，就会进入到运行状态)。<br />\n<strong>3. 运行</strong><br />\n当线程对象调用了 Thread.start () 方法之后，该线程处于就绪状态。添加到了线程列表中，如果 OS 调度选中了，就会进入到运行状态<br />\n<strong> 4. 阻塞</strong><br />\n阻塞状态是线程因为某种原因放弃 CPU 使用权，暂时停止运行。直到线程进入就绪状态，才有机会转到运行状态。阻塞的情况大概三种：</p>\n<ul>\n<li>1、<strong>等待阻塞</strong>：运行的线程执行 wait () 方法，JVM 会把该线程放入等待池中。(wait 会释放持有的锁)</li>\n<li>2、<strong>同步阻塞</strong>：运行的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则 JVM 会把该线程放入锁池中。</li>\n<li>3、<strong>其他阻塞</strong>：运行的线程执行 sleep () 或 join () 方法，或者发出了 I/O 请求时，JVM 会把该线程置为阻塞状态。当 sleep () 状态超时、join () 等待线程终止或者超时、或者 I/O 处理完毕时，线程重新转入就绪状态。（注意，sleep 是不会释放持有的锁）。</li>\n<li>线程睡眠：Thread.sleep (long millis) 方法，使线程转到阻塞状态。millis 参数设定睡眠的时间，以毫秒为单位。当睡眠结束后，就转为就绪（Runnable）状态。sleep () 平台移植性好。</li>\n<li>线程等待：Object 类中的 wait () 方法，导致当前的线程等待，直到其他线程调用此对象的 notify () 方法或 notifyAll () 唤醒方法。这个两个唤醒方法也是 Object 类中的方法，行为等价于调用 wait (0) 一样。唤醒线程后，就转为就绪（Runnable）状态。</li>\n<li>线程让步：Thread.yield () 方法，暂停当前正在执行的线程对象，把执行机会让给相同或者更高优先级的线程。</li>\n<li>线程加入：join () 方法，等待其他线程终止。在当前线程中调用另一个线程的 join () 方法，则当前线程转入阻塞状态，直到另一个进程运行结束，当前线程再由阻塞转为就绪状态。</li>\n<li>线程 I/O：线程执行某些 IO 操作，因为等待相关的资源而进入了阻塞状态。<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zeXN0ZW0tOW42anA2NmE4cTViMDd3dXI1Yy5pbg==\">比如说监听 system.in</span>，但是尚且没有收到键盘的输入，则进入阻塞状态。</li>\n<li>线程唤醒：Object 类中的 notify () 方法，唤醒在此对象监视器上等待的单个线程。如果所有线程都在此对象上等待，则会选择唤醒其中一个线程，选择是任意性的，并在对实现做出决定时发生。类似的方法还有一个 notifyAll ()，唤醒在此对象监视器上等待的所有线程。</li>\n</ul>\n<p><strong>5. 死亡</strong><br />\n线程会以以下三种方式之一结束，结束后就处于死亡状态:</p>\n<ul>\n<li>run () 方法执行完成，线程正常结束。</li>\n<li>线程抛出一个未捕获的 Exception 或 Error。</li>\n<li>直接调用该线程的 stop () 方法来结束该线程 —— 该方法容易导致死锁，通常不推荐使用</li>\n</ul>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/17/doc/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6%E6%98%AF%E4%BB%80%E4%B9%88/",
            "url": "https://hk2012.github.io/2024/02/17/doc/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6%E6%98%AF%E4%BB%80%E4%B9%88/",
            "title": "双亲委派机制是什么",
            "date_published": "2024-02-17T08:30:00.000Z",
            "content_html": "<h1 id=\"双亲委派机制是什么\"><a class=\"anchor\" href=\"#双亲委派机制是什么\">#</a> 双亲委派机制是什么</h1>\n<h2 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h2>\n<p>双亲委派模式是在 Java 1.2 后引入的，其工作原理的是，如果一个类加载器收到了类加载请求，它并不会自己先去加载，而是把这个<strong>请求委托给父类的加载器去执行</strong>，如果父类加载器还存在其父类加载器，则<strong>进一步向上委托，依次递归</strong>，<strong>请求最终将到达顶层的启动类加载器</strong>，如果父类加载器可以完成类加载任务，就成功返回，倘若父类加载器无法完成此加载任务，子加载器才会尝试自己去加载，这就是双亲委派模式</p>\n<h2 id=\"双亲委派的好处\"><a class=\"anchor\" href=\"#双亲委派的好处\">#</a> 双亲委派的好处</h2>\n<ul>\n<li>每一个类都只会被加载一次，避免了重复加载</li>\n<li>每一个类都会被尽可能的加载（从引导类加载器往下，每个加载器都可能会根据优先次序尝试加载它）</li>\n<li>有效避免了某些恶意类的加载（比如自定义了 Java.lang.Object 类，一般而言在双亲委派模型下会加载系统的 Object 类而不是自定义的 Object 类）</li>\n</ul>\n<h2 id=\"如何破坏双亲委派模型\"><a class=\"anchor\" href=\"#如何破坏双亲委派模型\">#</a> 如何破坏双亲委派模型</h2>\n<ol>\n<li>在 jdk 1.2 之前，那时候还没有双亲委派模型，不过已经有了 ClassLoader 这个抽象类，所以已经有人继承这个抽象类，重写 loadClass 方法来实现用户自定义类加载器。而在 1.2 的时候要引入双亲委派模型，为了向前兼容， loadClass 这个方法还得保留着使之得以重写，新搞了个 findClass 方法让用户去重写，并呼吁大家不要重写 loadClass 只要重写 findClass。<strong>这就是第一次对双亲委派模型的破坏，因为双亲委派的逻辑在 loadClass 上，但是又允许重写 loadClass，重写了之后就可以破坏委派逻辑了。</strong></li>\n<li>双亲委派模型的第二次 “被破坏” 是 ServiceLoader 和 Thread.setContextClassLoader ()。即<strong>线程上下文类加载器（contextClassLoader）</strong>。双亲委派模型很好地解决了各个类加载器的基础类统一问题 (越基础的类由越上层的加载器进行加载)，基础类之所以被称为 “基础”，是因为它们总是作为被调用代码调用的 API。但是，如果基础类又要调用用户的代码，那该怎么办呢？线程上下文类加载器就出现了。\n<ol>\n<li>SPI。这个类加载器可以通过 java.lang.Thread 类的 setContextClassLoader () 方法进行设置，如果创建线程时还未设置，它将会从父线程中继承一个；如果在应用程序的全局范围内都没有设置过，那么这个类加载器默认就是应用程序类加载器。了有线程上下文类加载器，JNDI 服务使用这个线程上下文类加载器去加载所需要的 SPI 代码，也就是父类加载器请求子类加载器去完成类加载动作，这种行为实际上就是打通了双亲委派模型的层次结构来逆向使用类加载器，已经违背了双亲委派模型，但这也是无可奈何的事情。Java 中所有涉及 SPI 的加载动作基本上都采用这种方式，例如 JNDI,JDBC,JCE,JAXB 和 JBI 等。</li>\n<li>线程上下文类加载器默认情况下就是 AppClassLoader，那为什么不直接通过 getSystemClassLoader () 获取类加载器来加载 classpath 路径下的类的呢？其实是可行的，但这种直接使用 getSystemClassLoader () 方法获取 AppClassLoader 加载类有一个缺点，那就是代码部署到不同服务时会出现问题，如把代码部署到 Java Web 应用服务或者 EJB 之类的服务将会出问题，因为这些服务使用的线程上下文类加载器并非 AppClassLoader，而是 Java Web 应用服自家的类加载器，类加载器不同。，所以我们应用该少用 getSystemClassLoader ()。总之不同的服务使用的可能默认 ClassLoader 是不同的，但使用线程上下文类加载器总能获取到与当前程序执行相同的 ClassLoader，从而避免不必要的问题</li>\n</ol>\n</li>\n<li>双亲委派模型的第三次 “被破坏” 是由于用户对程序动态性的追求导致的，这里所说的 “动态性” 指的是当前一些非常 “热门” 的名词：代码热替换、模块热部署等，简单的说就是机器不用重启，只要部署上就能用</li>\n<li>在 JDK9 引入模块系统之后，类加载器的实现其实做了一波更新。当收到类加载请求，会先判断该类在具体模块中是否有定义，如果有定义就自己加载了，没的话再委派给父类。关于 JDK9 相关的知识点就不展开了，有兴趣的自行查阅。所以这就是第四次破坏。</li>\n</ol>\n<h2 id=\"破坏双亲委派模型的案例\"><a class=\"anchor\" href=\"#破坏双亲委派模型的案例\">#</a> 破坏双亲委派模型的案例</h2>\n<ul>\n<li>JDBC</li>\n<li>Tomcat</li>\n</ul>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/17/doc/%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%97%E8%8A%82%E7%A0%81%E4%BB%A5%E5%8F%8A%E5%AE%83%E7%9A%84%E7%BB%84%E6%88%90/",
            "url": "https://hk2012.github.io/2024/02/17/doc/%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%97%E8%8A%82%E7%A0%81%E4%BB%A5%E5%8F%8A%E5%AE%83%E7%9A%84%E7%BB%84%E6%88%90/",
            "title": "什么是字节码以及它的组成",
            "date_published": "2024-02-17T05:30:00.000Z",
            "content_html": "<h1 id=\"什么是字节码以及它的组成\"><a class=\"anchor\" href=\"#什么是字节码以及它的组成\">#</a> 什么是字节码以及它的组成</h1>\n<h2 id=\"字节码概念\"><a class=\"anchor\" href=\"#字节码概念\">#</a> 字节码概念</h2>\n<p><strong>Java 字节码（英语：Java bytecode）是 Java 虚拟机执行的一种指令格式</strong>。</p>\n<p>大多数操作码都是一个字节长，而有些操作需要参数，导致了有一些多字节的操作码。</p>\n<p>因为 JVM 针对各种操作系统和平台都进行了定制，无论在什么平台，都可以通过 javac 命令将一个.java 文件编译成固定格式的字节码（.class 文件）供 JVM 使用。之所以被称为字节码，是因为 **.class 文件是由十六进制值组成的，JVM 以两个十六进制值为一组，就是以字节为单位进行读取 **</p>\n<p>格式如下</p>\n<p><img data-src=\"/img/images/bytecode.png\" alt=\"bytecode\" /></p>\n<h2 id=\"字节码的组成\"><a class=\"anchor\" href=\"#字节码的组成\">#</a> 字节码的组成</h2>\n<p>JVM 对字节码的规范是有要求的，要求每一个字节码文件都要有 10 部分固定的顺序组成：</p>\n<p>魔术、版本号、常量池、访问标志、当前类索引、父类索引、接口索引、字段表、方法表、附件属性</p>\n<p><img data-src=\"/img/images/bytecode2.png\" alt=\"bytecode2\" /></p>\n<p>详细如下：</p>\n<ol>\n<li>魔数</li>\n</ol>\n<p>所有的.class 文件的前 4 个字节都是魔数，魔数以一个固定值：0xCAFEBABE，放在文件的开头，JVM 就可以根据这个文件的开头来判断这个文件是否可能是一个.class 文件，如果是以这个开头，才会往后执行下面的操作，这个魔数的固定值是 Java 之父 James Gosling 指定的，意为 CafeBabe（咖啡宝贝）</p>\n<ol start=\"2\">\n<li>版本号</li>\n</ol>\n<p>版本号是魔术之后的 4 个字节，前两个字节表示次版本号（Minor Version），后两个字节表示主版本号（Major Version），上面的 0000 0032，次版本号 0000 转为十进制是 0，主版本号 0032 转为十进制 50，对应下图的版本映射关系，可以看到对应的 java 版本号是 1.6</p>\n<p><img data-src=\"/img/images/bytecodeversion.png\" alt=\"image.png\" /></p>\n<ol start=\"3\">\n<li>常量池</li>\n</ol>\n<p>紧接着主版本号之后的字节为常量池入口，常量池中有两类常量：字面量和符号引用，字面量是代码中申明为 Final 的常量值，符号引用是如类和接口的全局限定名、字段的名称和描述符、方法的名称和描述符。常量池整体分为两个部分：常量池计数器以及常量池数据区<br />\n<img data-src=\"/img/images/changlangchi.png\" alt=\"\" /></p>\n<ol start=\"4\">\n<li>访问标志</li>\n</ol>\n<p>常量池结束后的两个字节，描述的是类还是接口，以及是否被 Public、Abstract、Final 等修饰符修饰，JVM 规范规定了 9 种访问标示（Access_Flag）JVM 是通过按位或操作来描述所有的访问标示的，比如类的修饰符是 Public Final，则对应的访问修饰符的值为 ACC_PUBLIC | ACC_FINAL，即 0x0001 | 0x0010=0x0011<br />\n<img data-src=\"/img/images/access_flag.png\" alt=\"\" /></p>\n<ol start=\"5\">\n<li>当前类索引</li>\n</ol>\n<p>访问标志后的两个字节，描述的是当前类的全限定名，这两个字节保存的值是常量池中的索引值，根据索引值就能在常量池中找到这个类的全限定名<br />\n​</p>\n<ol start=\"6\">\n<li>父类索引</li>\n</ol>\n<p>当前类名后的两个字节，描述的父类的全限定名，也是保存的常量池中的索引值</p>\n<ol start=\"7\">\n<li>接口索引</li>\n</ol>\n<p>父类名称后的两个字节，是接口计数器，描述了该类或者父类实现的接口数量，紧接着的 n 个字节是所有接口名称的字符串常量的索引值</p>\n<ol start=\"8\">\n<li>字段表</li>\n</ol>\n<p>用于描述类和接口中声明的变量，包含类级别的变量和实例变量，但是不包含方法内部声明的局部变量，字段表也分为两个部分，第一部分是两个字节，描述字段个数，第二部分是每个字段的详细信息 fields_info<br />\n<img data-src=\"/img/images/field.png\" alt=\"\" /></p>\n<ol start=\"9\">\n<li>方法表</li>\n</ol>\n<p>字段表结束后为方法表，方法表也分为两个部分，第一个部分是两个字节表述方法的个数，第二部分是每个方法的详细信息<br />\n方法的访问信息比较复杂，包括方法的访问标志、方法名、方法的描述符和方法的属性：<br />\n<img data-src=\"/img/images/method.png\" alt=\"\" /></p>\n<ol start=\"10\">\n<li>附加属性</li>\n</ol>\n<p>字节码的最后一部分，该项存放了在该文件中类或接口所定义属性的基本信息。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/16/doc/%E4%BB%80%E4%B9%88%E6%98%AF%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B/",
            "url": "https://hk2012.github.io/2024/02/16/doc/%E4%BB%80%E4%B9%88%E6%98%AF%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B/",
            "title": "什么是守护线程",
            "date_published": "2024-02-16T05:30:00.000Z",
            "content_html": "<h2 id=\"什么是守护线程\"><a class=\"anchor\" href=\"#什么是守护线程\">#</a> 什么是守护线程</h2>\n<p>在 Java 中有两类线程：User Thread (用户线程)、Daemon Thread (守护线程)</p>\n<p>任何一个守护线程都是整个 JVM 中所有非守护线程的保姆：</p>\n<p>只要当前 JVM 实例中尚存在任何一个非守护线程没有结束，守护线程就全部工作；只有当最后一个非守护线程结束时，守护线程随着 JVM 一同结束工作。Daemon 的作用是为其他线程的运行提供便利服务，守护线程最典型的应用就是 GC (垃圾回收器)，它就是一个很称职的守护者。</p>\n<p>User 和 Daemon 两者几乎没有区别，唯一的不同之处就在于虚拟机的离开：如果 User Thread 已经全部退出运行了，只剩下 Daemon Thread 存在了，虚拟机也就退出了。 因为没有了被守护者，Daemon 也就没有工作可做了，也就没有继续运行程序的必要了。</p>\n<p>注意事项:</p>\n<p>(1) thread.setDaemon (true) 必须在 thread.start () 之前设置，否则会出现一个 IllegalThreadStateException 异常。只能在线程未开始运行之前设置为守护线程。</p>\n<p>(2) 在 Daemon 线程中产生的新线程也是 Daemon 的。</p>\n<p>(3) 不要认为所有的应用都可以分配给 Daemon 来进行读写操作或者计算逻辑，因为这会可能回到数据不一致的状态。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/16/doc/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E7%BA%BF%E7%A8%8B%E6%B1%A0/",
            "url": "https://hk2012.github.io/2024/02/16/doc/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E7%BA%BF%E7%A8%8B%E6%B1%A0/",
            "title": "为什么要使用线程池",
            "date_published": "2024-02-15T23:30:00.000Z",
            "content_html": "<h2 id=\"为什么要使用线程池\"><a class=\"anchor\" href=\"#为什么要使用线程池\">#</a> 为什么要使用线程池</h2>\n<p>Java 线程的创建非常昂贵，需要 JVM 和 OS（操作系统）配合完成大量的工作：</p>\n<p>（1）必须为线程堆栈分配和初始化大量内存块，其中包含至少 1MB 的栈内存。</p>\n<p>（2）需要进行系统调用，以便在 OS（操作系统）中创建和注册本地线程。</p>\n<p>Java 高并发应用频繁创建和销毁线程的操作是非常低效的，而且是不被编程规范所允许的。如何降低 Java 线程的创建成本？必须使用到线程池。线程池主要解决了以下两个问题：</p>\n<p>（1）提升性能：线程池能独立负责线程的创建、维护和分配。在执行大量异步任务时，可以不需要自己创建线程，而是将任务交给线程池去调度。线程池能尽可能使用空闲的线程去执行异步任务，最大限度地对已经创建的线程进行复用，使得性能提升明显。</p>\n<p>（2）线程管理：每个 Java 线程池会保持一些基本的线程统计信息，例如完成的任务数量、空闲时间等，以便对线程进行有效管理，使得能对所接收到的异步任务进行高效调度。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/15/doc/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%BA%BF%E7%A8%8B%E5%A4%8D%E7%94%A8%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88/",
            "url": "https://hk2012.github.io/2024/02/15/doc/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%BA%BF%E7%A8%8B%E5%A4%8D%E7%94%A8%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88/",
            "title": "线程池线程复用的原理是什么",
            "date_published": "2024-02-15T10:30:00.000Z",
            "content_html": "<h2 id=\"线程池线程复用的原理是什么\"><a class=\"anchor\" href=\"#线程池线程复用的原理是什么\">#</a> 线程池线程复用的原理是什么</h2>\n<p>思考这么一个问题：任务结束后会不会回收线程？</p>\n<p>答案是：allowCoreThreadTimeOut 控制</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">/</span>java<span class=\"token operator\">/</span>util<span class=\"token operator\">/</span>concurrent<span class=\"token operator\">/</span><span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1127</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Worker</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Thread</span> wt <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Runnable</span> task <span class=\"token operator\">=</span> w<span class=\"token punctuation\">.</span>firstTask<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        w<span class=\"token punctuation\">.</span>firstTask <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        w<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// allow interrupts</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">boolean</span> completedAbruptly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>task <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>task <span class=\"token operator\">=</span> <span class=\"token function\">getTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>执行任务<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            completedAbruptly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">processWorkerExit</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> completedAbruptly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>首先线程池内的线程都被包装成了一个个的<span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span>ThreadPoolExecutor<span class=\"token punctuation\">.</span>Worker</span><span class=\"token punctuation\">,</span>然后这个worker会马不停蹄的执行任务<span class=\"token punctuation\">,</span>执行完任务之后就会在<span class=\"token keyword\">while</span>循环中去取任务<span class=\"token punctuation\">,</span>取到任务就继续执行<span class=\"token punctuation\">,</span>取不到任务就跳出<span class=\"token keyword\">while</span>循环<span class=\"token punctuation\">(</span>这个时候worker就不能再执行任务了<span class=\"token punctuation\">)</span>执行 processWorkerExit方法<span class=\"token punctuation\">,</span>这个方法呢就是做清场处理<span class=\"token punctuation\">,</span>将当前woker线程从线程池中移除<span class=\"token punctuation\">,</span>并且判断是否是异常的进入processWorkerExit方法<span class=\"token punctuation\">,</span>如果是非异常情况<span class=\"token punctuation\">,</span>就对当前线程池状态<span class=\"token punctuation\">(</span><span class=\"token constant\">RUNNING</span><span class=\"token punctuation\">,</span>shutdown<span class=\"token punctuation\">)</span>和当前工作线程数和当前任务数做判断<span class=\"token punctuation\">,</span>是否要加入一个新的线程去完成最后的任务<span class=\"token punctuation\">(</span>防止没有线程去做剩下的任务<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>那么什么时候会退出<span class=\"token keyword\">while</span>循环呢<span class=\"token operator\">?</span>取不到任务的时候<span class=\"token punctuation\">(</span><span class=\"token function\">getTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>下面看一下getTask方法</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Runnable</span> <span class=\"token function\">getTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">boolean</span> timedOut <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Did the last poll() time out?</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> <span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">//(rs == SHUTDOWN &amp;&amp; workQueue.isEmpty()) || rs >=STOP</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token comment\">// 若线程池状态是 SHUTDOWN 并且 任务队列为空，意味着已经不需要工作线程执行任务了，线程池即将关闭</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\">// 若线程池的状态是 STOP TIDYING TERMINATED, 则意味着线程池已经停止处理任何任务了，不在需要线程</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">>=</span> <span class=\"token constant\">SHUTDOWN</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">>=</span> <span class=\"token constant\">STOP</span> <span class=\"token operator\">||</span> workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token comment\">// 把此工作线程从线程池中删除</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token function\">decrementWorkerCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">int</span> wc <span class=\"token operator\">=</span> <span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">//allowCoreThreadTimeOut: 当没有任务的时候，核心线程数也会被剔除，默认参数是 false, 官方推荐在创建线程池并且还未使用的时候，设置此值</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// 如果当前工作线程数 大于 核心线程数，timed 为 true</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">boolean</span> timed <span class=\"token operator\">=</span> allowCoreThreadTimeOut <span class=\"token operator\">||</span> wc <span class=\"token operator\">></span> corePoolSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">//(wc> maximumPoolSize || (timed &amp;&amp; timedOut)): 当工作线程超过最大线程数，或者 允许超时并且超时过一次了</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">//(wc> 1 || workQueue.isEmpty ()): 工作线程数至少为 1 个 或者 没有任务了</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// 总的来说判断当前工作线程还有没有必要等着拿任务去执行</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">//wc > maximumPoolSize &amp;&amp; wc>1 : 就是判断当前工作线程是否超过最大值</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token comment\">// 或者 wc > maximumPoolSize &amp;&amp; workQueue.isEmpty (): 工作线程超过最大，基本上不会走到这，</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\">//      如果走到这，则意味着 wc=1 , 只有 1 个工作线程了，如果此时任务队列是空的，则把最后的线程删除</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token comment\">// 或者 (timed &amp;&amp; timedOut) &amp;&amp; wc>1: 如果允许超时并且超时过一次，并且至少有 1 个线程，则删除线程</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token comment\">// 或者 (timed &amp;&amp; timedOut) &amp;&amp; workQueue.isEmpty (): 如果允许超时并且超时过一次，并且此时工作                    队列为空，那么妥妥可以把最后一个线程（因为上面的 wc>1 不满足，则可以得出来 wc=1）删除</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wc <span class=\"token operator\">></span> maximumPoolSize  <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>timed <span class=\"token operator\">&amp;&amp;</span> timedOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>wc <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">compareAndDecrementWorkerCount</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token comment\">// 如果减去工作线程数成功，则返回 null 出去，也就是说 让工作线程停止 while 轮训，进行收尾</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token comment\">// 判断是否要阻塞获取任务</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token class-name\">Runnable</span> r <span class=\"token operator\">=</span> timed <span class=\"token operator\">?</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span>keepAliveTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NANOSECONDS</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">take</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                timedOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> retry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                timedOut <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">// 综上所述，如果 allowCoreThreadTimeOut 为 true, 并且在第 1 次阻塞获取任务失败了，那么当前 getTask 会返回 null, 不管是不是核心线程；那么 runWorker 中将推出 while 循环，也就意味着当前工作线程被销毁</span></pre></td></tr></table></figure><p>通过上面这个问题可以得出一个结论：当你的线程池参数配置合理的时候，执行完任务的线程是不会被销毁的，而是会从任务队列中取出任务继续执行！</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/15/doc/%E7%BA%BF%E7%A8%8B%E7%9A%84sleep%E3%80%81wait%E3%80%81join%E3%80%81yield%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8/",
            "url": "https://hk2012.github.io/2024/02/15/doc/%E7%BA%BF%E7%A8%8B%E7%9A%84sleep%E3%80%81wait%E3%80%81join%E3%80%81yield%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8/",
            "title": "线程的sleep、wait、join、yield如何使用",
            "date_published": "2024-02-15T01:00:00.000Z",
            "content_html": "<h2 id=\"线程的sleep-wait-join-yield如何使用\"><a class=\"anchor\" href=\"#线程的sleep-wait-join-yield如何使用\">#</a> 线程的 sleep、wait、join、yield 如何使用</h2>\n<p><strong>sleep</strong>:</p>\n<p>sleep 的作用是让目前正在执行的线程休眠，让 CPU 去执行其他的任务。从线程状态来说，就是从执行状态变成限时阻塞状态。Sleep () 方法定义在 Thread 类中，是一组静态方法，有两个重载版本：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使目前正在执行的线程休眠 millis 毫秒</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> millis<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptException</span>；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token comment\">// 使目前正在执行的线程休眠 millis 毫秒，nanos 纳秒</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> millis，<span class=\"token keyword\">int</span> nanos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptException</span>；</pre></td></tr></table></figure><p>sleep () 方法会有 InterruptException 受检异常抛出，如果调用了 sleep () 方法，就必须进行异常审查，捕获 InterruptedException 异常，或者再次通过方法声明存在 InterruptedException 异常。</p>\n<p><strong>wait</strong> (必须先获得对应的锁才能调用): 让线程进入等待状态，释放当前线程持有的锁资源线程只有在 notify 或者 notifyAll 方法调用后才会被唤醒，然后去争夺锁.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadA</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//\t使当前线阻塞 1s，确保主程序的 t1.wait (); 执行之后再执行 notify ()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" call notify()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token comment\">// 唤醒当前的 wait 线程</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WaitTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token class-name\">ThreadA</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadA</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">synchronized</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 启动 “线程 t1”</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" start t1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\tt1<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 主线程等待 t1 通过 notify () 唤醒。</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" wait()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\tt1<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  不是使 t1 线程等待，而是当前执行 wait 的线程等待</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" continue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>输出：</p>\n<blockquote>\n<p>main start t1<br />\nmain wait()<br />\nt1 call notify()<br />\nmain continue</p>\n</blockquote>\n<p><strong>join</strong>: 线程之间协同方式，使用场景：线程 C 必须等待线程 B 运行完毕后才可以执行，那么就可以在线程 B 的代码中加入 thread_c.join ();;</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">ThreadB</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadB</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"thread-b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            t1<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadB</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadB</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">Thread</span> thread_c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadC</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"thread-c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                thread_c<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                thread_c<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadC</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadC</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">// 输出</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">//thread-b</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">//thread-c</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     <span class=\"token comment\">// 重载版本 1：此方法会把当前线程变为 TIMED_WAITING，直到被合并线程执行结束</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span>：</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     <span class=\"token comment\">// 重载版本 2：此方法会把当前线程变为 TIMED_WAITING，直到被合并线程执行结束，或者等待被合并线程执行 millis 的时间</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> millis<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span>：</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     <span class=\"token comment\">// 重载版本 3：此方法会把当前线程变为 TIMED_WAITING，直到被合并线程执行结束，或者等待被合并线程执行 millis+nanos 的时间</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> synchroinzed <span class=\"token keyword\">void</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> millis<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nanos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span>：</pre></td></tr></table></figure><p><strong>yield</strong>: 让当前正在运行的线程回到可运行状态，以允许具有相同优先级的其他线程获得运行的机会。因此，使用 yield () 的目的是让具有相同优先级的线程之间能够适当的轮换执行。但是，实际中无法保证 yield () 达到让步的目的，因为，让步的线程可能被线程调度程序再次选中。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test03</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Test03</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" -> Start.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                \t<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    \t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    \t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"'s i=\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   \t\t\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"X -> End.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">Test03</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Test03</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">Thread</span> thread1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">Thread</span> thread2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            thread1<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            thread2<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>结果<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token class-name\">A</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Start<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Thread</span><span class=\"token operator\">-</span><span class=\"token number\">0</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token class-name\">Thread</span><span class=\"token operator\">-</span><span class=\"token number\">0</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>省略</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token class-name\">Thread</span><span class=\"token operator\">-</span><span class=\"token number\">0</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">99</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token class-name\">Thread</span><span class=\"token operator\">-</span><span class=\"token number\">0</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token constant\">AX</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">End<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>A</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Start<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>Thread</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token class-name\">Thread</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>省略</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token class-name\">Thread</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">99</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token class-name\">Thread</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>'s i<span class=\"token operator\">=</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token constant\">AX</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">End</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>总结起来，Thread.yeid () 方法有以下特点：</p>\n<p>（1）yield 仅能使一个线程从运行状态转到就绪状态，而不是阻塞状态。</p>\n<p>（2）yield 不能保证使得当前正在运行的线程迅速转换到就绪状态。</p>\n<p>（3）即使完成了迅速切换，系统通过线程调度机制从所有就绪线程中挑选下一个执行线程时，就绪的线程有可能被选中，也有可能不被选中，其调度的过程受到其他因素（如优先级）的影响。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/14/doc/%E5%A6%82%E4%BD%95%E9%A2%84%E9%98%B2%E6%AD%BB%E9%94%81/",
            "url": "https://hk2012.github.io/2024/02/14/doc/%E5%A6%82%E4%BD%95%E9%A2%84%E9%98%B2%E6%AD%BB%E9%94%81/",
            "title": "如何预防死锁",
            "date_published": "2024-02-14T09:00:00.000Z",
            "content_html": "<h2 id=\"如何预防死锁\"><a class=\"anchor\" href=\"#如何预防死锁\">#</a> 如何预防死锁</h2>\n<p>首先举个例子说明什么是死锁，比如，一个十字路口，东西南北四个方向分别有四列车 ABCD，A 在东向被 D 堵着，D 北被 B 堵着，B 在西被 C 堵着，C 在南被 A 堵着，这就造成了十字路口的堵死，也就是所谓的死锁。</p>\n<p>具体图示如下：</p>\n<p><img data-src=\"/img/images/deadlock.png\" alt=\"deadlock\" /></p>\n<p>那么如何预防死锁？</p>\n<ol>\n<li>死锁发生的四个必要条件:\n<ol>\n<li>互斥条件 同一时间只能有一个线程获取资源。</li>\n<li>不可剥夺条件 一个线程已经占有的资源，在释放之前不会被其它线程抢占</li>\n<li>请求和保持条件 线程等待过程中不会释放已占有的资源</li>\n<li>循环等待条件 多个线程互相等待对方释放资源</li>\n</ol>\n</li>\n<li>死锁预防，那么就是需要破坏这四个必要条件\n<ol>\n<li>由于资源互斥是资源使用的固有特性，无法改变，我们不讨论</li>\n<li>破坏不可剥夺条件\n<ol>\n<li>一个进程不能获得所需要的全部资源时便处于等待状态，等待期间他占有的资源将被隐式的释放重新加入到系统的资源列表中，可以被其他的进程使用，而等待的进程只有重新获得自己原有的资源以及新申请的资源才可以重新启动，执行</li>\n</ol>\n</li>\n<li>破坏请求与保持条件\n<ol>\n<li>第一种方法静态分配即每个进程在开始执行时就申请他所需要的全部资源</li>\n<li>第二种是动态分配即每个进程在申请所需要的资源时他本身不占用系统资源</li>\n</ol>\n</li>\n<li>破坏循环等待条件\n<ol>\n<li>采用资源有序分配其基本思想是将系统中的所有资源顺序编号，将紧缺的，稀少的采用较大的编号，在申请资源时必须按照编号的顺序进行，一个进程只有获得较小编号的进程才能申请较大编号的进程。</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/14/doc/Class%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B%E6%98%AF%E4%BB%80%E4%B9%88/",
            "url": "https://hk2012.github.io/2024/02/14/doc/Class%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B%E6%98%AF%E4%BB%80%E4%B9%88/",
            "title": "Class初始化过程是什么",
            "date_published": "2024-02-14T07:00:00.000Z",
            "content_html": "<h1 id=\"class初始化过程是什么\"><a class=\"anchor\" href=\"#class初始化过程是什么\">#</a> Class 初始化过程是什么</h1>\n<h2 id=\"类加载的过程\"><a class=\"anchor\" href=\"#类加载的过程\">#</a> 类加载的过程</h2>\n<p>我们可以先简单说下类加载的过程，大致分为：</p>\n<p>** 加载、验证、准备、解析、初始化 ** 几个阶段，使用和卸载都是已经加载完成之后，属于类的生命周期的两个阶段</p>\n<p><img data-src=\"/img/images/class-int.png\" alt=\"\" /></p>\n<h2 id=\"类的初始化过程\"><a class=\"anchor\" href=\"#类的初始化过程\">#</a> 类的初始化过程</h2>\n<p>下面我们就重点分析类的初始化的过程：</p>\n<ol>\n<li>\n<p><strong>类的初始化阶段，是真正开始执行类中定义的 java 程序代码 (字节码) 并按程序员的意图去初始化类变量的过程。更直接地说，初始化阶段就是执行类构造器 &lt; clinit&gt;() 方法的过程。</strong> &lt;clinit&gt;() 方法是由编译器自动收集类中的所有类变量的赋值动作和静态代码块 static {} 中的语句合并产生的，其中<strong>编译器收集的顺序是由语句在源文件中出现的顺序所决定</strong> ，重点就是类变量和静态代码块按源文件中定义的顺序决定执行顺序</p>\n</li>\n<li>\n<p>关于类初始化的顺序 **（静态变量、静态初始化块：决于它们在类中出现的先后顺序）&gt;（普通成员变量、初始化代码块：决于它们在类中出现的先后顺序）&gt; 构造器 **</p>\n</li>\n<li>\n<p>关于类初始化的详细过程，参见 Java 虚拟机规范一书中（有兴趣的同学可以看下英文原版的 Java 虚拟机规范：Java® Virtual Machine Specification 8），详细过程如下：</p>\n<ol>\n<li>每个类都有一个初始化锁<strong> LC</strong>，线程获取<strong> LC</strong>，这个操作会导致当前线程一直等待，直到获取到<strong> LC 锁</strong></li>\n<li>如果<strong> C</strong> 正在被其他线程初始化，当前线程会释放<strong> LC 锁</strong>进入阻塞状态，并等待 C 初始化完成。此时当前线程需要重试这一过程。执行初始化过程时，线程的中断状态不受影响</li>\n<li>如果 C 正在被本线程初始化，即递归初始化，释放 LC 并且正常返回</li>\n<li>如果 C 已经被初始化完成，释放 LC 并且正常返回</li>\n<li>如果 C 处于错误状态，表明不可能再完成初始化，释放 LC 并抛出异常 NoClassDefFoundError 异常</li>\n<li>否则，将 C 标记为正在被本线程初始化，释放 LC；然后，初始化那些 final 且为基础类型的类成员变量</li>\n<li>如果 C 是类而不是接口，且 C 的父类 Super Class（SC）和各个接口 SI_n（按照 implements 子句中的顺序来）还没有初始化，那么就在 SC 上面递归地进行完整的初始化过程，如果有必要，需要先验证和准备 SC ；如果 SC 或 SIn 初始化过程中抛出异常，则获取 LC，将 C 标记为错误状态，并通知所有正在等待的线程，然后释放 LC，然后再抛出同样的异常。</li>\n<li>从 C 的 classloader 处获取 assertion 断言机制是否被打开</li>\n<li>接下来，按照文本顺序执行类变量初始化和静态代码块，或接口的字段初始化，把它们当作是一个个单独的代码块。</li>\n<li>如果执行正常，那就获取 LC，标记 C 对象为已初始化，并通知所有正在等待的线程，然后释放 LC，正常退出整个过程</li>\n<li>否则，如果抛出了异常 E 那么会中断退出。若 E 不是 Error，则以 E 为参数创建新的异常 ExceptionInInitializerError 作为 E。如果因为 OutOfMemoryError 导致无法创建 ExceptionInInitializerError，则将 OutOfMemoryError 作为 E。</li>\n<li>获取 LC，将 C 标记为错误状态，通知所有等待的线程，释放 LC，并抛出异常 E</li>\n</ol>\n<p>可以看到 JLS 确实规定了父类先初始化、static 块和类变量赋值按照文本顺序来解析</p>\n</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/14/doc/ConcurrentHashMap%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88/",
            "url": "https://hk2012.github.io/2024/02/14/doc/ConcurrentHashMap%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88/",
            "title": "ConcurrentHashMap底层原理是什么",
            "date_published": "2024-02-14T03:00:00.000Z",
            "content_html": "<h2 id=\"concurrenthashmap底层原理是什么\"><a class=\"anchor\" href=\"#concurrenthashmap底层原理是什么\">#</a> ConcurrentHashMap 底层原理是什么</h2>\n<ul>\n<li>1.7 数据结构：<br />\n内部主要是一个 Segment 数组，而数组的每一项又是一个 HashEntry 数组，元素都存在 HashEntry 数组里。因为每次锁定的是 Segment 对象，也就是整个 HashEntry 数组，所以又叫分段锁。<br />\n<img data-src=\"/img/images/1.7ConcurrentHashMap.png\" alt=\"1.7ConcurrentHashMap.png\" /></li>\n<li>1.8 数据结构：<br />\n与 HashMap 一样采用：数组 + 链表 + 红黑树<br />\n<img data-src=\"/img/images/ConCurrentHashMap.png\" alt=\"ConCurrentHashMap.png\" /><br />\n 底层原理则是采用锁链表或者红黑树头结点，相比于 HashTable 的方法锁，力度更细，是对数组（table）中的桶（链表或者红黑树）的头结点进行锁定，这样锁定，只会影响数组（table）当前下标的数据，不会影响其他下标节点的操作，可以提高读写效率。<br />\nputVal 执行流程：</li>\n</ul>\n<ol>\n<li>判断存储的 key、value 是否为空，若为空，则抛出异常</li>\n<li>计算 key 的 hash 值，随后死循环（该循环可以确保成功插入，当满足适当条件时，会主动终止），判断 table 表为空或者长度为 0，则初始化 table 表</li>\n<li>根据 hash 值获取 table 中该下标对应的节点，如果该节点为空，则根据参数生成新的节点，并以 CAS 的方式进行更新，并终止死循环。</li>\n<li>如果该节点的 hash 值是 MOVED (-1)，表示正在扩容，则辅助对该节点进行转移。</li>\n<li>对数组（table）中的节点，即桶的头结点进行<strong>锁定</strong>，如果该节点的 hash 大于等于 0，表示此桶是链表，然后对该桶进行遍历（死循环），寻找链表中与 put 的 key 的 hash 值相等，并且 key 相等的元素，然后进行值的替换，如果到链表尾部都没有符合条件的，就新建一个 node，然后插入到该桶的尾部，并终止该循环遍历。</li>\n<li>如果该节点的 hash 小于 0，并且节点类型是 TreeBin，则走红黑树的插入方式。</li>\n<li>判断是否达到转化红黑树的阈值，如果达到阈值，则链表转化为红黑树。</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/14/doc/GC%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E8%A2%AB%E5%9B%9E%E6%94%B6/",
            "url": "https://hk2012.github.io/2024/02/14/doc/GC%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E8%A2%AB%E5%9B%9E%E6%94%B6/",
            "title": "GC如何判断对象可以被回收",
            "date_published": "2024-02-13T23:00:00.000Z",
            "content_html": "<h1 id=\"gc如何判断对象可以被回收\"><a class=\"anchor\" href=\"#gc如何判断对象可以被回收\">#</a> GC 如何判断对象可以被回收</h1>\n<h2 id=\"引用计数法已被淘汰的算法\"><a class=\"anchor\" href=\"#引用计数法已被淘汰的算法\">#</a> 引用计数法（已被淘汰的算法）</h2>\n<ol>\n<li>每一个对象有一个引用属性，新增一个引用时加一，引用释放时减一，计数为 0 的时候可以回收。但是这种计算方法，有一个致命的问题，无法解决循环引用的问题</li>\n</ol>\n<h2 id=\"可达性分析算法根引用\"><a class=\"anchor\" href=\"#可达性分析算法根引用\">#</a> 可达性分析算法（根引用）</h2>\n<ol>\n<li>从 GcRoot 开始向下搜索，搜索所走过的路径被称为引用链，当一个对象到 GcRoot 没有任何引用链相连时，则证明此对象是不可用的，那么虚拟机就可以判定回收。</li>\n<li>那么 GcRoot 有哪些？\n<ol>\n<li>虚拟机栈中引用的对象</li>\n<li>方法区中静态属性引用的对象</li>\n<li>方法区中常量引用的对象</li>\n<li>本地方法栈中（即一般说的 native 方法）引用的对象</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"不同的引用类型\"><a class=\"anchor\" href=\"#不同的引用类型\">#</a> 不同的引用类型</h2>\n<ol>\n<li>不同的引用类型的回收机制是不一样的\n<ol>\n<li>强引用：通过关键字 new 的对象就是强引用对象，强引用指向的对象任何时候都不会被回收，宁愿 OOM 也不会回收</li>\n<li>软引用：如果一个对象持有软引用，那么当 JVM 堆空间不足时，会被回收。一个类的软引用可以通过 java.lang.ref.SoftReference 持有</li>\n<li>弱引用：如果一个对象持有弱引用，那么在 GC 时，只要发现弱引用对象，就会被回收。一个类的弱引用可以通过 java.lang.ref.WeakReference 持有</li>\n<li>虚引用：几乎和没有一样，随时可以被回收。通过 ava.lang.ref.PhantomReference 持有</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/13/doc/JVM8%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%A2%9E%E5%8A%A0%E5%85%83%E7%A9%BA%E9%97%B4%20/",
            "url": "https://hk2012.github.io/2024/02/13/doc/JVM8%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%A2%9E%E5%8A%A0%E5%85%83%E7%A9%BA%E9%97%B4%20/",
            "title": "JVM 8为什么要增加元空间",
            "date_published": "2024-02-13T10:00:00.000Z",
            "content_html": "<h2 id=\"jvm-8为什么要增加元空间\"><a class=\"anchor\" href=\"#jvm-8为什么要增加元空间\">#</a> JVM 8 为什么要增加元空间？</h2>\n<h3 id=\"持久代\"><a class=\"anchor\" href=\"#持久代\">#</a> 持久代</h3>\n<p>持久代中包含了虚拟机中所有可通过反射获取到的数据，比如 Class 和 Method 对象。不同的 Java 虚拟机之间可能会进行类共享，因此持久代又分为只读区和读写区。</p>\n<p>JVM 用于描述应用程序中用到的类和方法的元数据也存储在持久代中。JVM 运行时会用到多少持久代的空间取决于应用程序用到了多少类。除此之外，Java SE 库中的类和方法也都存储在这里。</p>\n<p>如果 JVM 发现有的类已经不再需要了，它会去回收（卸载）这些类，将它们的空间释放出来给其它类使用。Full GC 会进行持久代的回收。</p>\n<p>JVM 中类的元数据在 Java 堆中的存储区域。<br />\nJava 类对应的 HotSpot 虚拟机中的内部表示也存储在这里。<br />\n类的层级信息，字段，名字。<br />\n方法的编译信息及字节码。<br />\n变量<br />\n常量池和符号解析<br />\n<strong>持久代的大小</strong><br />\n它的上限是 MaxPermSize，默认是 64M<br />\nJava 堆中的连续区域：如果存储在非连续的堆空间中的话，要定位出持久代到新对象的引用非常复杂并且耗时。卡表（card table），是一种记忆集（Remembered Set），它用来记录某个内存代中普通对象指针（oops）的修改。<br />\n持久代用完后，会抛出 OutOfMemoryError &quot;PermGen space&quot; 异常。解决方案：应用程序清理引用来触发类卸载；增加 MaxPermSize 的大小。<br />\n需要多大的持久代空间取决于类的数量，方法的大小，以及常量池的大小。<br />\n<strong>为什么移除持久代 ？</strong></p>\n<p>1、它的大小是在启动时固定好的 —— 很难进行调优。-XX:MaxPermSize，设置成多少好呢？ 2、HotSpot 的内部类型也是 Java 对象：它可能会在 Full GC 中被移动，同时它对应用不透明，且是非强类型的，难以跟踪调试，还需要存储元数据的元数据信息（meta-metadata）。<br />\n3、简化 Full GC：每一个回收器有专门的元数据迭代器。<br />\n4、可以在 GC 不进行暂停的情况下并发地释放类数据。<br />\n5、使得原来受限于持久代的一些改进未来有可能实现</p>\n<h3 id=\"元空间\"><a class=\"anchor\" href=\"#元空间\">#</a> 元空间</h3>\n<p>持久代的空间被彻底地删除了，它被一个叫元空间的区域所替代了。持久代删除了之后，很明显，JVM 会忽略 PermSize 和 MaxPermSize 这两个参数，还有就是你再也看不到 java.lang.OutOfMemoryError: PermGen error 的异常了。原来类的静态变量和 Interned Strings 都被转移到了 java 堆区，</p>\n<p>只有 class 元数据才在元空间。</p>\n<p>JDK 8 的 HotSpot JVM 现在使用的是本地内存来表示类的元数据，这个区域就叫做元空间。</p>\n<p><strong>元空间的特点：</strong></p>\n<ul>\n<li>\n<p>充分利用了 Java 语言规范中的好处：类及相关的元数据的生命周期与类加载器的一致。</p>\n</li>\n<li>\n<p>每个加载器有专门的存储空间</p>\n</li>\n<li>\n<p>只进行线性分配</p>\n</li>\n<li>\n<p>不会单独回收某个类</p>\n</li>\n<li>\n<p>省掉了 GC 扫描及压缩的时间</p>\n</li>\n<li>\n<p>元空间里的对象的位置是固定的</p>\n</li>\n<li>\n<p>如果 GC 发现某个类加载器不再存活了，会把相关的空间整个回收掉</p>\n</li>\n</ul>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/13/doc/JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%A6%82%E4%BD%95%E5%88%86%E9%85%8D%E7%9A%84/",
            "url": "https://hk2012.github.io/2024/02/13/doc/JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%A6%82%E4%BD%95%E5%88%86%E9%85%8D%E7%9A%84/",
            "title": "JVM内存模型如何分配的",
            "date_published": "2024-02-13T03:00:00.000Z",
            "content_html": "<h1 id=\"jvm内存模型如何分配的\"><a class=\"anchor\" href=\"#jvm内存模型如何分配的\">#</a> JVM 内存模型如何分配的</h1>\n<h2 id=\"jvm内存模型的划分\"><a class=\"anchor\" href=\"#jvm内存模型的划分\">#</a> JVM 内存模型的划分</h2>\n<blockquote>\n<p>由于我们生产环境使用的虚拟机 HotSpot 居多，所以下面的描述都是基于 HotSpot 虚拟机而言的，对于其他类型的虚拟机，如 JRockit（Oracle）、J9（IBM） 可能并不太一样</p>\n</blockquote>\n<p>根据虚拟机规范，JVM 的内存分为 堆、虚拟机栈、本地方法栈、程序计数器、本地方法栈 5 部分</p>\n<p>JDK 1.8 同 JDK 1.7 比，最大的差别就是：元数据区取代了永久代。元空间的本质和永久代类似，都是对 JVM 规范中方法区的实现。不过元空间与永久代之间最大的区别在于：元数据空间并不在虚拟机中，而是使用本地内存</p>\n<p><img data-src=\"/img/images/20190706155611749.PNG\" alt=\"在这里插入图片描述\" /></p>\n<ol>\n<li>虚拟机栈\n<ol>\n<li>每个线程有一个私有的栈，随着线程的创建而创建。栈里面存着的是一种叫 “栈帧” 的东西，每个方法会创建一个栈帧，栈帧中存放了局部变量表（基本数据类型和对象引用）、操作数栈、方法出口等信息。栈的大小可以固定也可以动态扩展。当栈调用深度大于 JVM 所允许的范围，会抛出 StackOverflowError 的错误</li>\n<li>虚拟机栈的特点\n<ol>\n<li>局部变量表随着栈帧的创建而创建，它的大小在编译时确定，创建时只需分配事先规定的大小即可。在方法运行过程中，局部变量表的大小不会发生改变</li>\n<li>Java 虚拟机栈也是线程私有，随着线程创建而创建，随着线程的结束而销毁</li>\n<li>Java 虚拟机栈会出现两种异常：StackOverFlowError （若 Java 虚拟机栈的大小不允许动态扩展，那么当线程请求栈的深度超过当前 Java 虚拟机栈的最大深度时，抛出 StackOverFlowError 异常）和 OutOfMemoryError（若允许动态扩展，那么当线程请求栈时内存用完了，无法再动态扩展时，抛出 OutOfMemoryError 异常）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p><img data-src=\"/img/images/1460000015398968\" alt=\"jvm-stack\" /></p>\n<ol>\n<li>本地方法栈\n<ol>\n<li>本地方法栈是为 JVM 运行 Native 方法准备的空间，由于很多 Native 方法都是用 C 语言实现的，所以它通常又叫 C 栈。它与 Java 虚拟机栈实现的功能类似，只不过本地方法栈是描述本地方法运行过程的内存模型。本地方法被执行时，在本地方法栈也会创建一块栈帧，用于存放该方法的局部变量表、操作数栈、动态链接、方法出口信息等。方法执行结束后，相应的栈帧也会出栈，并释放内存空间。也会抛出 StackOverFlowError 和 OutOfMemoryError 异常。</li>\n</ol>\n</li>\n<li>PC 寄存器计数器\n<ol>\n<li>PC 寄存器，也叫程序计数器。JVM 支持多个线程同时运行，每个线程都有自己的程序计数器。倘若当前执行的是 JVM 的方法，则该寄存器中保存当前执行指令的地址；倘若执行的是 native 方法，则 PC 寄存器中为空</li>\n</ol>\n</li>\n<li>堆\n<ol>\n<li>堆内存是 JVM 所有线程共享的部分，在虚拟机启动的时候就已经创建。所有的对象和数组都在堆上进行分配。这部分空间可通过 GC 进行回收。当申请不到空间时会抛出 OutOfMemoryError</li>\n<li>堆的特点：\n<ol>\n<li>线程共享，整个 Java 虚拟机只有一个堆，所有的线程都访问同一个堆。而程序计数器、Java 虚拟机栈、本地方法栈都是一个线程对应一个</li>\n<li>在虚拟机启动时创建</li>\n<li>垃圾回收的主要场所</li>\n<li>可分为：新生代 (Eden 区 From Survior To Survivor)、老年代</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>方法区\n<ol>\n<li>Java 虚拟机规范中定义方法区是堆的一个逻辑部分。</li>\n<li>方法区也是所有线程共享。主要用于存储已经被虚拟机加载的类的信息、常量池、方法数据、方法代码等。方法区逻辑上属于堆的一部分，但是为了与堆进行区分，通常又叫 非堆 。需要注意的是，方法区只是规范上面的一个逻辑概念，并不是真实的物理存储的命名</li>\n</ol>\n</li>\n<li>直接内存（堆外内存）\n<ol>\n<li>直接内存是除 Java 虚拟机之外的内存，但也可能被 Java 使用，直接内存的大小不受 Java 虚拟机控制，但既然是内存，当内存不足时就会抛出 OutOfMemoryError 异常</li>\n<li>直接内存与堆内存比较：\n<ol>\n<li>直接内存申请空间耗费更高的性能</li>\n<li>直接内存读取 IO 的性能要优于普通的堆内存</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"jvm内存模型各部分的存储信息\"><a class=\"anchor\" href=\"#jvm内存模型各部分的存储信息\">#</a> JVM 内存模型各部分的存储信息</h2>\n<p><img data-src=\"/img/images/javammode.png\" alt=\"\" /></p>\n<h2 id=\"针对jdk6-jdk7-jdk8三个版本的jvm内存模型调整说明\"><a class=\"anchor\" href=\"#针对jdk6-jdk7-jdk8三个版本的jvm内存模型调整说明\">#</a> 针对 JDK6、JDK7、JDK8 三个版本的 JVM 内存模型调整说明</h2>\n<h3 id=\"对永久代permgen的说明\"><a class=\"anchor\" href=\"#对永久代permgen的说明\">#</a> 对永久代 PermGen 的说明</h3>\n<ul>\n<li>永久代是方法区在 hotspot 的一个具体实现。通过在<strong>运行时数据区域开辟空间</strong>实现方法区。</li>\n<li>hotspot jdk7 之前的永久代，比较完整</li>\n<li>从 jdk7 以后方法区就 “四分五裂了”，不再是在单一的一个去区域内进行存储</li>\n<li>在 jdk8，移除了永久代，被 Metsspace 取代了，且 Metsspace 不在 JVM 堆内，放入了本地内存，元空间也就成了方法区的主要存放位置</li>\n</ul>\n<p>绝大部分 Java 程序员应该都见过 **java.lang.OutOfMemoryError: PermGen space ** 这个异常</p>\n<p>这里的 “PermGen space” 其实指的就是方法区。不过方法区和 “PermGen space” 又有着本质的区别。前者是 JVM 的规范，而后者则是 JVM 规范的一种实现，并且<strong>只有 HotSpot 才有 “PermGen space”，而对于其他类型的虚拟机，如 JRockit（Oracle）、J9（IBM） 并没有 “PermGen space”</strong>。由于方法区主要存储类的相关信息，所以对于动态生成类的情况比较容易出现永久代的内存溢出。最典型的场景就是，在 jsp 页面比较多的情况，容易出现永久代内存溢出</p>\n<h3 id=\"对metaspace元空间的说明\"><a class=\"anchor\" href=\"#对metaspace元空间的说明\">#</a> 对 Metaspace 元空间的说明</h3>\n<ol>\n<li>元空间的本质和永久代类似，都是对 JVM 规范中方法区的实现。元空间通过<strong>在本地内存区域开辟空间实现方法区</strong>。<strong>元空间并不在虚拟机中，而是使用本地内存，所以默认情况下，元空间的大小仅受本地内存限制</strong>，但可以通过以下参数来指定元空间的大小：</li>\n</ol>\n<pre><code>-XX:MetaspaceSize，初始空间大小，达到该值就会触发垃圾收集进行类型卸载，同时GC会对该值进行调整：如果释放了大量的空间，就适当降低该值；如果释放了很少的空间，那么在不超过MaxMetaspaceSize时，适当提高该值。\n-XX:MaxMetaspaceSize，最大空间，默认是没有限制的。\n除了上面两个指定大小的选项以外，还有两个与 GC 相关的属性：\n-XX:MinMetaspaceFreeRatio，在GC之后，最小的Metaspace剩余空间容量的百分比，减少为分配空间所导致的垃圾收集\n-XX:MaxMetaspaceFreeRatio，在GC之后，最大的Metaspace剩余空间容量的百分比，减少为释放空间所导致的垃圾收集\n</code></pre>\n<p>其实，移除永久代的工作从 JDK1.7 就开始了，JDK1.7 中，存储在永久代的部分数据就已经转移到了 Java Heap 或者是 Native Heap。但永久代仍存在于 JDK1.7 中，并没完全移除。</p>\n<p>譬如：</p>\n<p>符号引用 (Symbols) 转移到了 native heap；</p>\n<p>字面量 (interned strings) 转移到了 java heap；</p>\n<p>类的静态变量 (class statics) 转移到了 java heap</p>\n<h3 id=\"元空间特点\"><a class=\"anchor\" href=\"#元空间特点\">#</a> 元空间特点</h3>\n<ol>\n<li><strong>类及相关的元数据的生命周期与类加载器的一致</strong>，如果 GC 发现某个类加载器不再存活了，才会把相关的空间整个回收掉</li>\n<li>每个类加载器有专门的存储空间</li>\n<li>只进行线性分配，省掉了 GC 扫描及压缩的时间</li>\n<li>元空间里的对象的位置是固定的</li>\n</ol>\n<h2 id=\"jvm内存划分调整的几个原因点分析\"><a class=\"anchor\" href=\"#jvm内存划分调整的几个原因点分析\">#</a> JVM 内存划分调整的几个原因点分析</h2>\n<ol>\n<li>字符串存在永久代中，容易出现性能问题和内存溢出</li>\n<li>类及方法的信息等比较难确定其大小，因此对于永久代的大小指定比较困难，太小容易出现永久代溢出，太大则容易导致老年代溢出</li>\n<li>永久代会为 GC 带来不必要的复杂度，并且回收效率偏低</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/12/doc/JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98/",
            "url": "https://hk2012.github.io/2024/02/12/doc/JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98/",
            "title": "JVM性能调优实战",
            "date_published": "2024-02-12T08:00:00.000Z",
            "content_html": "<h1 id=\"jvm性能调优实战\"><a class=\"anchor\" href=\"#jvm性能调优实战\">#</a> JVM 性能调优实战</h1>\n<h3 id=\"调优的一些原则\"><a class=\"anchor\" href=\"#调优的一些原则\">#</a> 调优的一些原则</h3>\n<ol>\n<li>多数的 Java 应用不需要在服务器上进行 GC 优化，虚拟机内部已有很多优化来保证应用的稳定运行，所以不要为了调优而调优，不当的调优可能适得其反</li>\n<li>在应用上线之前，先考虑将机器的 JVM 参数设置到最优（适合）</li>\n<li>在进行 GC 优化之前，需要确认项目的架构和代码等已经没有优化空间。我们不能指望一个系统架构有缺陷或者代码层次优化没有穷尽的应用，通过 GC 优化令其性能达到一个质的飞跃</li>\n<li>GC 优化是一个系统而复杂的工作，没有万能的调优策略可以满足所有的性能指标。GC 优化必须建立在我们深入理解各种垃圾回收器的基础上，才能有事半功倍的效果</li>\n<li>处理吞吐量和延迟问题时，垃圾处理器能使用的内存越大，即 java 堆空间越大垃圾收集效果越好，应用运行也越流畅。这称之为 GC 内存最大化原则</li>\n<li>在这三个属性（吞吐量、延迟、内存）中选择其中两个进行 jvm 调优，称之为 GC 调优 3 选 2</li>\n</ol>\n<h3 id=\"什么情况下需要调优\"><a class=\"anchor\" href=\"#什么情况下需要调优\">#</a> 什么情况下需要调优</h3>\n<ul>\n<li>Heap 内存（老年代）持续上涨达到设置的最大内存值</li>\n<li>Full GC 次数频繁</li>\n<li>GC 停顿（Stop World）时间过长（超过 1 秒，具体值按应用场景而定）</li>\n<li>应用出现 OutOfMemory 等内存异常</li>\n<li>应用出现 OutOfDirectMemoryError 等内存异常（ failed to allocate 16777216 byte (s) of direct memory (used: 1056964615, max: 1073741824)）</li>\n<li>应用中有使用本地缓存且占用大量内存空间</li>\n<li>系统吞吐量与响应性能不高或下降</li>\n<li>应用的 CPU 占用过高不下或内存占用过高不下</li>\n</ul>\n<h3 id=\"调优前需知的一些概念\"><a class=\"anchor\" href=\"#调优前需知的一些概念\">#</a> 调优前需知的一些概念</h3>\n<ol>\n<li>** 吞吐量：** 用户代码时间 / （用户代码执行时间 + 垃圾回收时间）。是评价垃圾收集器能力的重要指标之一，是不考虑垃圾收集引起的停顿时间或内存消耗，垃圾收集器能支撑应用程序达到的最高性能指标。吞吐量越高算法越好。</li>\n<li>** 低延迟：**STW 越短，响应时间越好。评价垃圾收集器能力的重要指标，度量标准是缩短由于垃圾收集引起的停顿时间或完全消除因垃圾收集所引起的停顿，避免应用程序运行时发生抖动。暂停时间越短算法越好</li>\n<li>在设计（或使用）GC 算法时，我们必须确定我们的目标：一个 GC 算法只可能针对两个目标之一（即只专注于最大吞吐量或最小暂停时间），或尝试找到一个二者的折中</li>\n<li>MinorGC 尽可能多的收集垃圾对象。我们把这个称作 MinorGC 原则，遵守这一原则可以降低应用程序 FullGC 的发生频率。FullGC 较耗时，是应用程序无法达到延迟要求或吞吐量的罪魁祸首</li>\n<li>堆大小调整的着手点、分析点：\n<ol>\n<li>统计 Minor GC 持续时间</li>\n<li>统计 Minor GC 的次数</li>\n<li>统计 Full GC 的最长持续时间</li>\n<li>统计最差情况下 Full GC 频率</li>\n<li>统计 GC 持续时间和频率对优化堆的大小是主要着手点</li>\n<li>我们按照业务系统对延迟和吞吐量的需求，在按照这些分析我们可以进行各个区大小的调整</li>\n</ol>\n</li>\n<li>一般来说吞吐量优先的垃圾回收器：-XX:+UseParallelGC  -XX:+UseParallelOldGC，即常规的（PS/PO）</li>\n<li>响应时间优先的垃圾回收器：CMS、G1</li>\n</ol>\n<h3 id=\"jvm常用参数解读\"><a class=\"anchor\" href=\"#jvm常用参数解读\">#</a> JVM 常用参数解读</h3>\n<ol>\n<li><strong>Xms</strong> 是指设定程序启动时占用内存大小。一般来讲，大点，程序会启动的快一点，但是也可能会导致机器暂时变慢</li>\n<li><strong>Xmx</strong> 是指设定程序运行期间最大可占用的内存大小。如果程序运行需要占用更多的内存，超出了这个设置值，就会抛出 OutOfMemory 异常</li>\n<li><strong>Xss</strong> 是指设定每个线程的堆栈大小。这个就要依据你的程序，看一个线程大约需要占用多少内存，可能会有多少线程同时运行等</li>\n<li>**-Xmn、-XX:NewSize/-XX:MaxNewSize、-XX:NewRatio **\n<ol>\n<li>高优先级：-XX:NewSize/-XX:MaxNewSize</li>\n<li>中优先级：-Xmn（默认等效 -Xmn=-XX:NewSize=-XX:MaxNewSize=?）</li>\n<li>低优先级：-XX:NewRatio</li>\n</ol>\n</li>\n<li>如果想在日志中追踪类加载与类卸载的情况，可以使用启动参数  **-XX:TraceClassLoading -XX:TraceClassUnloading **</li>\n</ol>\n<h3 id=\"常用性能调优工具\"><a class=\"anchor\" href=\"#常用性能调优工具\">#</a> 常用性能调优工具</h3>\n<ol>\n<li>MAT\n<ul>\n<li>提示可能的内存泄露的点</li>\n</ul>\n</li>\n<li>jvisualvm</li>\n<li>jconsole</li>\n<li>Arthas</li>\n<li>show-busy-java-threads\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZHJhdGxlZS91c2VmdWwtc2NyaXB0cy9ibG9iL21hc3Rlci9kb2NzL2phdmEubWQjLXNob3ctYnVzeS1qYXZhLXRocmVhZHM=\">https://github.com/oldratlee/useful-scripts/blob/master/docs/java.md#-show-busy-java-threads</span>​\n<h4 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h4>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"线上排查问题的一般流程\"><a class=\"anchor\" href=\"#线上排查问题的一般流程\">#</a> 线上排查问题的一般流程</h3>\n<ol>\n<li>CPU 占用过高排查流程\n<ol>\n<li>利用 top 命令可以查出占 CPU 最高的的进程 pid ，如果 pid 为 9876</li>\n<li>然后查看该进程下占用最高的线程 id【top -Hp 9876】</li>\n<li>假设占用率最高的线程 ID 为 6900，将其转换为 16 进制形式 (因为 java native 线程以 16 进制形式输出) 【printf '% x\\n' 6900】</li>\n<li>利用 jstack 打印出 java 线程调用栈信息【jstack 9876 | grep '0x1af4' -A 50 --color】，这样就可以更好定位问题</li>\n</ol>\n</li>\n<li>内存占用过高排查流程\n<ol>\n<li>查找进程 id: 【top -d 2 -c】</li>\n<li>查看 JVM 堆内存分配情况：jmap -heap pid</li>\n<li>查看占用内存比较多的对象 jmap -histo pid | head -n 100</li>\n<li>查看占用内存比较多的存活对象 jmap -histo:live pid | head -n 100</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"oom内存泄露分析\"><a class=\"anchor\" href=\"#oom内存泄露分析\">#</a> OOM 内存泄露分析</h3>\n<h3 id=\"什么情况下会抛出oom呢\"><a class=\"anchor\" href=\"#什么情况下会抛出oom呢\">#</a> <strong>什么情况下，会抛出 OOM 呢？</strong></h3>\n<ul>\n<li>JVM98% 的时间都花费在内存回收</li>\n<li>每次回收的内存小于 2%</li>\n</ul>\n<p>满足这两个条件将触发 OutOfMemoryException，这将会留给系统一个微小的间隙以做一些 Down 之前的操作，比如手动打印 Heap Dump。并不是内存被耗空的时候才抛出<br />\n<strong>​</strong></p>\n<h3 id=\"系统oom之前的一些现象\"><a class=\"anchor\" href=\"#系统oom之前的一些现象\">#</a> <strong>系统 OOM 之前的一些现象</strong></h3>\n<ul>\n<li>每次垃圾回收的时间越来越长，由之前的 10ms 延长到 50ms 左右，FullGC 的时间也有之前的 0.5s 延长到 4、5s</li>\n<li>FullGC 的次数越来越多，最频繁时隔不到 1 分钟就进行一次 FullGC</li>\n<li>老年代的内存越来越大并且每次 FullGC 后，老年代只有少量的内存被释放掉</li>\n</ul>\n<h3 id=\"堆dump文件分析\"><a class=\"anchor\" href=\"#堆dump文件分析\">#</a> <strong>堆 Dump 文件分析</strong></h3>\n<p>可以通过指定启动参数 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/app/data/dump/heapdump.hpro 在发生 OOM 的时候自动导出 Dump 文件<br />\n​</p>\n<h3 id=\"gc日志分析\"><a class=\"anchor\" href=\"#gc日志分析\">#</a> <strong>GC 日志分析</strong></h3>\n<p>为了方便分析 GC 日志信息，可以指定启动参数 【-Xloggc: app-gc.log  -XX:+PrintGCDetails -XX:+PrintGCDateStamps】, 方便详细地查看 GC 日志信息</p>\n<ol>\n<li>使用 【jinfo pid】查看当前 JVM 堆的相关参数</li>\n<li>继续使用 【jstat -gcutil 2315 1s 10】查看 10s 内当前堆的占用情况</li>\n<li>也可以使用【jmap -heap pid】查看当前 JVM 堆的情况</li>\n<li>我们可以继续使用 【jmap -F -histo pid | head -n 20】，查看前 20 行打印，即查看当前 top20 的大对象，一般从这里可以发现一些异常的大对象，如果没有，那么可以继续排名前 50 的大对象，分析</li>\n<li>最后使用【jmap -F -dump:file=a.bin pid】，如果 dump 文件很大，可以压缩一下【tar -czvf a.tar.gz a.bin】</li>\n<li>再之后，就是对 dump 文件进行分析了，使用 MAT 分析内存泄露</li>\n<li>参考案例： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFnb3UuY29tL2xnZWR1YXJ0aWNsZS8xNDIzNzIuaHRtbA==\">https://www.lagou.com/lgeduarticle/142372.html</span></li>\n</ol>\n<h3 id=\"线上死锁排查\"><a class=\"anchor\" href=\"#线上死锁排查\">#</a> 线上死锁排查</h3>\n<ol>\n<li>jps 查找一个可能有问题的<strong>进程 id</strong></li>\n<li>然后执行 【jstack -F <strong>进程 id</strong>】</li>\n<li>如果环境允许远程连接 JVM，可以使用 jconsole 或者 jvisualvm，图形化界面检测是否存在死锁</li>\n</ol>\n<h3 id=\"线上ygc耗时过长优化\"><a class=\"anchor\" href=\"#线上ygc耗时过长优化\">#</a> 线上 YGC 耗时过长优化</h3>\n<ol>\n<li>如果生命周期过长的对象越来越多（比如全局变量或者静态变量等），会导致标注和复制过程的耗时增加</li>\n<li>对存活对象标注时间过长：比如重载了 Object 类的 Finalize 方法，导致标注 Final Reference 耗时过长；或者 String.intern 方法使用不当，导致 YGC 扫描 StringTable 时间过长。可以通过以下参数显示 GC 处理 Reference 的耗时 - XX:+PrintReferenceGC</li>\n<li>长周期对象积累过多：比如本地缓存使用不当，积累了太多存活对象；或者锁竞争严重导致线程阻塞，局部变量的生命周期变长</li>\n<li>案例参考： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC9saXNoYW5nemhpL2Jsb2cvNDcwMzk0Mg==\">https://my.oschina.net/lishangzhi/blog/4703942</span></li>\n</ol>\n<h3 id=\"线上频繁fullgc优化\"><a class=\"anchor\" href=\"#线上频繁fullgc优化\">#</a> 线上频繁 FullGC 优化</h3>\n<ol>\n<li>线上频繁 FullGC 一般会有这么几个特征：\n<ol>\n<li>线上多个线程的 CPU 都超过了 100%，通过 jstack 命令可以看到这些线程主要是垃圾回收线程</li>\n<li>通过 jstat 命令监控 GC 情况，可以看到 Full GC 次数非常多，并且次数在不断增加</li>\n</ol>\n</li>\n<li>排查流程：\n<ol>\n<li>top 找到 cpu 占用最高的一个 <strong>进程 id</strong></li>\n<li>然后 【top -Hp 进程 id】，找到 cpu 占用最高的 <strong>线程 id</strong></li>\n<li>【printf &quot;%x\\n&quot; <strong>线程 id 】</strong>，假设 16 进制结果为 a</li>\n<li>jstack 线程 id | grep '0xa' -A 50 --color</li>\n<li>如果是正常的用户线程， 则通过该线程的堆栈信息查看其具体是在哪处用户代码处运行比较消耗 CPU</li>\n<li>如果该线程是 VMThread，则通过 jstat-gcutil 命令监控当前系统的 GC 状况，然后通过 jmapdump:format=b,file = 导出系统当前的内存数据。导出之后将内存情况放到 eclipse 的 mat 工具中进行分析即可得出内存中主要是什么对象比较消耗内存，进而可以处理相关代码；正常情况下会发现 VM Thread 指的就是垃圾回收的线程</li>\n<li>再执行【jstat -gcutil  ** 进程 id】, ** 看到结果，如果 FGC 的数量很高，且在不断增长，那么可以定位是由于内存溢出导致 FullGC 频繁，系统缓慢</li>\n<li>然后就可以 Dump 出内存日志，然后使用 MAT 的工具分析哪些对象占用内存较大，然后找到对象的创建位置，处理即可</li>\n</ol>\n</li>\n<li>参考案例：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvZzhLSmhPdGlCSFdiNndORnJDY0xWZw==\">https://mp.weixin.qq.com/s/g8KJhOtiBHWb6wNFrCcLVg</span>\n<h4 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> </h4>\n</li>\n</ol>\n<h3 id=\"线上堆外内存泄漏分析netty尤其居多\"><a class=\"anchor\" href=\"#线上堆外内存泄漏分析netty尤其居多\">#</a> 线上堆外内存泄漏分析（Netty 尤其居多）</h3>\n<ol>\n<li>JVM 的堆外内存泄露的定位一直是个比较棘手的问题</li>\n<li>对外内存的泄漏分析一般都是先从堆内内存分析的过程中衍生出来的。有可能我们分析堆内内存泄露过程中发现，我们计算出来的 JVM 堆内存竟然大于了整个 JVM 的<strong> Xmx</strong> 的大小，那说明多出来的是堆外内存</li>\n<li>如果使用了 Netty 堆外内存，那么可以自行监控堆外内存的使用情况，不需要借助第三方工具，我们是使用的 “反射” 拿到的堆外内存的情况</li>\n<li>逐渐缩小范围，直到 Bug 被找到。当我们确认某个线程的执行带来 Bug 时，可单步执行，可二分执行，定位到某行代码之后，跟到这段代码，然后继续单步执行或者二分的方式来定位最终出 Bug 的代码。这个方法屡试不爽，最后总能找到想要的 Bug</li>\n<li>熟练掌握 idea 的调试，让我们的 “捉虫” 速度快如闪电（“闪电侠” 就是这么来的）。这里，最常见的调试方式是<strong>预执行表达式</strong>，以及通过<strong>线程调用栈</strong>，死盯某个对象，就能够掌握这个对象的定义、赋值之类</li>\n<li>在使用直接内存的项目中，最好建议配置 -XX:MaxDirectMemorySize，设定一个系统实际可达的最大的直接内存的值，默认的最大直接内存大小等于 -Xmx 的值</li>\n<li>排查堆外泄露，建议指定启动参数： -XX:NativeMemoryTracking=summary - Dio.netty.leakDetection.targetRecords=100-Dio.netty.leakDetection.level=PARANOID，后面两个参数是 Netty 的相关内存泄露检测的级别与采样级别</li>\n<li>参考案例： <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoLm1laXR1YW4uY29tLzIwMTgvMTAvMTgvbmV0dHktZGlyZWN0LW1lbW9yeS1zY3JlZW5pbmcuaHRtbA==\">https://tech.meituan.com/2018/10/18/netty-direct-memory-screening.html</span></li>\n</ol>\n<h3 id=\"线上元空间内存泄露优化\"><a class=\"anchor\" href=\"#线上元空间内存泄露优化\">#</a> 线上元空间内存泄露优化</h3>\n<ol>\n<li>需要注意的一点是 Java8 以及 Java8 + 的 JVM 已经将永久代废弃了，取而代之的是元空间，且元空间是不是在 JVM 堆中的，而属于堆外内存，受最大物理内存限制。最佳实践就是我们在启动参数中最好设置上 -XX:MetaspaceSize=1024m -XX:MaxMetaspaceSize=1024m。具体的值根据情况设置。为避免动态申请，可以直接都设置为最大值</li>\n<li>元空间主要存放的是类元数据，而且 metaspace 判断类元数据是否可以回收，是根据加载这些类元数据的 Classloader 是否可以回收来判断的，只要 Classloader 不能回收，通过其加载的类元数据就不会被回收。所以线上有时候会出现一种问题，由于框架中，往往大量采用类似 ASM、javassist 等工具进行字节码增强，生成代理类。如果项目中由主线程频繁生成动态代理类，那么就会导致元空间迅速占满，无法回收</li>\n<li>具体案例可以参见： [<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yMDA4MDI5MTA=\">https://zhuanlan.zhihu.com/p/200802910</span>](</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/12/doc/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%BA%BF%E4%B8%8Agc%E9%A2%91%E7%B9%81%E7%9A%84%E9%97%AE%E9%A2%98/",
            "url": "https://hk2012.github.io/2024/02/12/doc/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%BA%BF%E4%B8%8Agc%E9%A2%91%E7%B9%81%E7%9A%84%E9%97%AE%E9%A2%98/",
            "title": "如何解决线上gc频繁的问题",
            "date_published": "2024-02-12T05:00:00.000Z",
            "content_html": "<h2 id=\"如何解决线上gc频繁的问题\"><a class=\"anchor\" href=\"#如何解决线上gc频繁的问题\">#</a> 如何解决线上 gc 频繁的问题</h2>\n<p>对于线上系统突然产生的运行缓慢问题，如果该问题导致线上系统不可用，那么首先需要做的就是，导出 jstack 和内存信息，然后重启系统，尽快保证系统的可用性。这种情况可能的原因主要有两种：</p>\n<ul>\n<li>代码中某个位置读取数据量较大，导致系统内存耗尽，从而导致 Full GC 次数过多，系统缓慢；</li>\n<li>代码中有比较耗 CPU 的操作，导致 CPU 过高，系统运行缓慢；</li>\n</ul>\n<p>相对来说，这是出现频率最高的两种线上问题，而且它们会直接导致系统不可用。另外有几种情况也会导致某个功能运行缓慢，但是不至于导致系统不可用：</p>\n<ul>\n<li>代码某个位置有阻塞性的操作，导致该功能调用整体比较耗时，但出现是比较随机的；</li>\n<li>某个线程由于某种原因而进入 WAITING 状态，此时该功能整体不可用，但是无法复现；</li>\n<li>由于锁使用不当，导致多个线程进入死锁状态，从而导致系统整体比较缓慢。</li>\n</ul>\n<p>对于这三种情况，通过查看 CPU 和系统内存情况是无法查看出具体问题的，因为相对来说都是具有一定阻塞性操作，CPU 和系统内存使用情况都不高，但是功能却很慢。就需要通过查看系统日志来一步一步甄别上述几种问题。</p>\n<p>1、Full GC 次数过多</p>\n<p>相对来说，这种情况是最容易出现的，尤其是新功能上线时。对于 Full GC 较多的情况，其主要有如下两个特征：</p>\n<ul>\n<li>线上多个线程的 CPU 都超过了 100%，通过 jstack 命令可以看到这些线程主要是垃圾回收线程</li>\n<li>通过 jstat 命令监控 GC 情况，可以看到 Full GC 次数非常多，并且次数在不断增加。</li>\n</ul>\n<p>对应的排查操作</p>\n<ul>\n<li>使用 top 命令查看系统 CPU 的占用情况</li>\n<li>找到 cpu 占用量最高的 java 程序，并用 top 命令查看该进程的各个线程运行情况</li>\n<li>之后 通过 jstack 命令查看具体某个线程为什么耗费 CPU 最高</li>\n<li>然后根据具体的信息，来继续一步步排查问题所在</li>\n</ul>\n<p>2、cpu 过高<br />\n首先我们通过 top 命令查看当前 CPU 消耗过高的进程是哪个，从而得到进程 id；然后通过 top -Hp 来查看该进程中有哪些线程 CPU 过高，一般超过 80% 就是比较高的，80% 左右是合理情况。这样我们就能得到 CPU 消耗比较高的线程 id。接着通过该线程 id 的十六进制表示在 jstack 日志中查看当前线程具体的堆栈信息。</p>\n<p>在这里我们就可以区分导致 CPU 过高的原因具体是 Full GC 次数过多还是代码中有比较耗时的计算了。如果是 Full GC 次数过多，那么通过 jstack 得到的线程信息会是类似于 VM Thread 之类的线程，而如果是代码中有比较耗时的计算，那么我们得到的就是一个线程的具体堆栈信息。</p>\n<p>最后，根据堆栈信息，定位问题，查看代码中具体是什么原因导致计算量如此高。</p>\n<p>3、不定期出现的接口耗时现象<br />\n对于这种情况，比较典型的例子就是，我们某个接口访问经常需要 2~3s 才能返回。这是比较麻烦的一种情况，因为一般来说，其消耗的 CPU 不多，而且占用的内存也不高，也就是说，我们通过上述两种方式进行排查是无法解决这种问题的。</p>\n<p>而且由于这样的接口耗时比较大的问题是不定时出现的，这就导致了我们在通过 jstack 命令即使得到了线程访问的堆栈信息，我们也没法判断具体哪个线程是正在执行比较耗时操作的线程。</p>\n<p>对于不定时出现的接口耗时比较严重的问题，我们的定位思路基本如下：首先找到该接口，通过压测工具不断加大访问力度，如果说该接口中有某个位置是比较耗时的，由于我们的访问的频率非常高，那么大多数的线程最终都将阻塞于该阻塞点，这样通过多个线程具有相同的堆栈日志，我们基本上就可以定位到该接口中比较耗时的代码的位置。</p>\n<p><strong>总结</strong></p>\n<ul>\n<li>\n<p>通过 top 命令查看 CPU 情况，如果 CPU 比较高，则通过</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">top</span> <span class=\"token parameter variable\">-Hp</span> <span class=\"token operator\">&lt;</span>pid<span class=\"token operator\">></span></pre></td></tr></table></figure><p>命令查看当前进程的各个线程运行情况，找出 CPU 过高的线程之后，将其线程 id 转换为十六进制的表现形式，然后在 jstack 日志中查看该线程主要在进行的工作。这里又分为两种情况</p>\n</li>\n<li>\n<p>如果是正常的用户线程，则通过该线程的堆栈信息查看其具体是在哪处用户代码处运行比较消耗 CPU；</p>\n</li>\n<li>\n<p>如果该线程是 VMThread，则通过</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>jstat <span class=\"token parameter variable\">-gcutil</span> <span class=\"token operator\">&lt;</span>pid<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>period<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>times<span class=\"token operator\">></span></pre></td></tr></table></figure><p>命令监控当前系统的 GC 状况，然后通过</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>jmap dump:format<span class=\"token operator\">=</span>b,file<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>filepath<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>pid<span class=\"token operator\">></span></pre></td></tr></table></figure><p>导出系统当前的内存数据。导出之后将内存情况放到 eclipse 的 mat 工具中进行分析即可得出内存中主要是什么对象比较消耗内存，进而可以处理相关代码；</p>\n</li>\n<li>\n<p>如果通过 top 命令看到 CPU 并不高，并且系统内存占用率也比较低。此时就可以考虑是否是由于另外三种情况导致的问题。具体的可以根据具体情况分析：</p>\n</li>\n<li>\n<p>如果是接口调用比较耗时，并且是不定时出现，则可以通过压测的方式加大阻塞点出现的频率，从而通过 jstack 查看堆栈信息，找到阻塞点；</p>\n</li>\n<li>\n<p>如果是某个功能突然出现停滞的状况，这种情况也无法复现，此时可以通过多次导出 jstack 日志的方式对比哪些用户线程是一直都处于等待状态，这些线程就是可能存在问题的线程；</p>\n</li>\n<li>\n<p>如果通过 jstack 可以查看到死锁状态，则可以检查产生死锁的两个线程的具体阻塞点，从而处理相应的问题。</p>\n</li>\n</ul>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/12/doc/%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%93%AA%E4%BA%9B,%E5%A6%82%E4%BD%95%E6%8E%92%E6%9F%A5%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98/",
            "url": "https://hk2012.github.io/2024/02/12/doc/%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%93%AA%E4%BA%9B,%E5%A6%82%E4%BD%95%E6%8E%92%E6%9F%A5%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98/",
            "title": "内存溢出的原因有哪些, 如何排查线上问题",
            "date_published": "2024-02-12T00:00:00.000Z",
            "content_html": "<h2 id=\"内存溢出的原因有哪些-如何排查线上问题\"><a class=\"anchor\" href=\"#内存溢出的原因有哪些-如何排查线上问题\">#</a> 内存溢出的原因有哪些，如何排查线上问题？</h2>\n<p>java 内存溢出的几种原因和解决办法是：</p>\n<p>第一类内存溢出，也是大家认为最多，第一反应认为是的内存溢出，就是堆栈溢出：</p>\n<p>那什么样的情况就是堆栈溢出呢？当你看到下面的关键字的时候它就是堆栈溢出了：</p>\n<blockquote>\n<p>java.lang.OutOfMemoryError: ......java heap space.....</p>\n</blockquote>\n<p>也就是当你看到 heap 相关的时候就肯定是堆栈溢出了，此时如果代码没有问题的情况下，适当调整 - Xmx 和 - Xms 是可以避免的，不过一定是代码没有问题的前提，为什么会溢出呢，要么代码有问题，要么访问量太多并且每个访问的时间太长或者数据太多，导致数据释放不掉，因为垃圾回收器是要找到那些是垃圾才能回收，这里它不会认为这些东西是垃圾，自然不会去回收了；主意这个溢出之前，可能系统会提前先报错关键字为：</p>\n<blockquote>\n<p>java.lang.OutOfMemoryError:GC over head limit exceeded</p>\n</blockquote>\n<p>这种情况是当系统处于高频的 GC 状态，而且回收的效果依然不佳的情况，就会开始报这个错误，这种情况一般是产生了很多不可以被释放的对象，有可能是引用使用不当导致，或申请大对象导致，但是 java heap space 的内存溢出有可能提前不会报这个错误，也就是可能内存就直接不够导致，而不是高频 GC.</p>\n<p>第二类内存溢出，PermGen 的溢出，或者 PermGen 满了的提示，你会看到这样的关键字：</p>\n<p>关键信息为:</p>\n<blockquote>\n<p>java.lang.OutOfMemoryError: PermGen space</p>\n</blockquote>\n<p>原因：系统的代码非常多或引用的第三方包非常多、或代码中使用了大量的常量、或通过 intern 注入常量、或者通过动态代码加载等方法，导致常量池的膨胀，虽然 JDK 1.5 以后可以通过设置对永久带进行回收，但是我们希望的是这个地方是不做 GC 的，它够用就行，所以一般情况下今年少做类似的操作，所以在面对这种情况常用的手段是：PermGen 的溢出和 - XX:MaxPermSize 的大小。</p>\n<p>第三类内存溢出：在使用 ByteBuffer 中的 allocateDirect () 的时候会用到，很多 javaNIO 的框架中被封装为其他的方法</p>\n<p>溢出关键字：</p>\n<blockquote>\n<p>java.lang.OutOfMemoryError: Direct buffer memory<br />\n 如果你在直接或间接使用了 ByteBuffer 中的 allocateDirect 方法的时候，而不做 clear 的时候就会出现类似的问题，常规的引用程序 IO 输出存在一个内核态与用户态的转换过程，也就是对应直接内存与非直接内存，如果常规的应用程序你要将一个文件的内容输出到客户端需要通过 OS 的直接内存转换拷贝到程序的非直接内存（也就是 heap 中），然后再输出到直接内存由操作系统发送出去，而直接内存就是由 OS 和应用程序共同管理的，而非直接内存可以直接由应用程序自己控制的内存，jvm 垃圾回收不会回收掉直接内存这部分的内存，所以要注意了哦。</p>\n</blockquote>\n<p>如果经常有类似的操作，可以考虑设置参数：-XX:MaxDirectMemorySize</p>\n<p>第四类内存溢出错误：</p>\n<p>溢出关键字：</p>\n<blockquote>\n<p>java.lang.StackOverflowError</p>\n</blockquote>\n<p>这个参数直接说明一个内容，就是 - Xss 太小了，我们申请很多局部调用的栈针等内容是存放在用户当前所持有的线程中的，线程在 jdk 1.4 以前默认是 256K，1.5 以后是 1M，如果报这个错，只能说明 - Xss 设置得太小，当然有些厂商的 JVM 不是这个参数，本文仅仅针对 Hotspot VM 而已；不过在有必要的情况下可以对系统做一些优化，使得 - Xss 的值是可用的。</p>\n<p>第五类内存溢出错误：</p>\n<p>溢出关键字：</p>\n<blockquote>\n<p>java.lang.OutOfMemoryError: unable to create new native thread</p>\n</blockquote>\n<p>上面第四种溢出错误，已经说明了线程的内存空间，其实线程基本只占用 heap 以外的内存区域，也就是这个错误说明除了 heap 以外的区域，无法为线程分配一块内存区域了，这个要么是内存本身就不够，要么 heap 的空间设置得太大了，导致了剩余的内存已经不多了，而由于线程本身要占用内存，所以就不够用了，说明了原因，如何去修改，不用我多说，你懂的。</p>\n<p>第六类内存溢出：</p>\n<p>溢出关键字</p>\n<blockquote>\n<p>java.lang.OutOfMemoryError: request {} byte for {}out of swap</p>\n</blockquote>\n<p>这类错误一般是由于地址空间不够而导致。</p>\n<p>六大类常见溢出已经说明 JVM 中 99% 的溢出情况，要逃出这些溢出情况非常困难，除非一些很怪异的故障问题会发生，比如由于物理内存的硬件问题，导致了 code cache 的错误（在由 byte code 转换为 native code 的过程中出现，但是概率极低），这种情况内存 会被直接 crash 掉，类似还有 swap 的频繁交互在部分系统中会导致系统直接被 crash 掉，OS 地址空间不够的话，系统根本无法启动，呵呵；JNI 的滥用也会导致一些本地内存无法释放的问题，所以尽量避开 JNI；socket 连接数据打开过多的 socket 也会报类似：IOException: Too many open files 等错误信息。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/11/doc/%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95/",
            "url": "https://hk2012.github.io/2024/02/11/doc/%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95/",
            "title": "有哪些垃圾回收算法",
            "date_published": "2024-02-11T07:00:00.000Z",
            "content_html": "<h2 id=\"有哪些垃圾回收算法\"><a class=\"anchor\" href=\"#有哪些垃圾回收算法\">#</a> 有哪些垃圾回收算法？</h2>\n<h3 id=\"1标记-清除mark-sweep算法\"><a class=\"anchor\" href=\"#1标记-清除mark-sweep算法\">#</a> <strong>1. 标记 - 清除（Mark-Sweep）算法</strong></h3>\n<p>分为标记和清除两个阶段：首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象。<img data-src=\"/img/images/before.png\" alt=\"\" /></p>\n<p>它的主要不足有两个：</p>\n<ul>\n<li>效率问题，标记和清除两个过程的效率都不高。</li>\n<li>空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致以后在程序运行过程中需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</li>\n</ul>\n<h3 id=\"2复制算法\"><a class=\"anchor\" href=\"#2复制算法\">#</a> <strong>2. 复制算法</strong></h3>\n<p>为了解决效率问题，一种称为复制（Copying）的收集算法出现了，它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。这样使得每次都是对整个半区进行内存回收，内存分配时也就不用考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。<br />\n<img data-src=\"/img/images/copy.png\" alt=\"\" /><br />\n<strong>复制算法的代价</strong>是将内存缩小为了原来的一半，减少了实际可用的内存。现在的商业虚拟机都采用这种收集算法来回收新生代，IBM 公司的专门研究表明，新生代中的对象 98% 是 “朝生夕死” 的，所以并不需要按照 1:1 的比例来划分内存空间，而是将内存分为一块较大的 Eden 空间和两块较小的 Survivor 空间，每次使用 Eden 和其中一块 Survivor。当回收时，将 Eden 和 Survivor 中还存活着的对象一次性地复制到另外一块 Survivor 空间上，最后清理掉 Eden 和刚才用过的 Survivor 空间。HotSpot 虚拟机默认 Eden 和 Survivor 的大小比例是 8:1，也就是每次新生代中可用内存空间为整个新生代容量的 90%（80%+10%），只有 10% 的内存会被 “浪费”。当然，98% 的对象可回收只是一般场景下的数据，我们没有办法保证每次回收都只有不多于 10% 的对象存活，当 Survivor 空间不够用时，需要依赖其他内存（这里指老年代）进行分配担保（Handle Promotion）。</p>\n<h3 id=\"3标记-整理算法\"><a class=\"anchor\" href=\"#3标记-整理算法\">#</a> 3.<strong> 标记 - 整理算法</strong></h3>\n<p>复制收集算法在对象存活率较高时就要进行较多的复制操作，效率将会变低。更关键的是，如果不想浪费 50% 的空间，就需要有额外的空间进行分配担保，以应对被使用的内存中所有对象都 100% 存活的极端情况，所以在老年代一般不能直接选用这种算法。根据老年代的特点，有人提出了另外一种标记 - 整理（Mark-Compact）算法，标记过程仍然与标记 - 清除算法一样，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。<br />\n<img data-src=\"/img/images/3.png\" alt=\"\" /></p>\n<h3 id=\"4分代收集算法\"><a class=\"anchor\" href=\"#4分代收集算法\">#</a> 4.<strong> 分代收集算法</strong></h3>\n<p>当前商业虚拟机的垃圾收集都采用分代收集（Generational Collection）算法，这种算法并没有什么新的思想，只是根据对象存活周期的不同将内存划分为几块。一般是把 Java 堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集时都发现有大批对象死去，只有少量存活，那就选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须使用标记 — 清理或者标记 — 整理算法来进行回收。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/11/doc/ABA%E9%97%AE%E9%A2%98%E9%81%87%E5%88%B0%E8%BF%87%E5%90%97%EF%BC%8C%E8%AF%A6%E7%BB%86%E8%AF%B4%E4%B8%80%E4%B8%8B/",
            "url": "https://hk2012.github.io/2024/02/11/doc/ABA%E9%97%AE%E9%A2%98%E9%81%87%E5%88%B0%E8%BF%87%E5%90%97%EF%BC%8C%E8%AF%A6%E7%BB%86%E8%AF%B4%E4%B8%80%E4%B8%8B/",
            "title": "ABA问题遇到过吗，详细说一下",
            "date_published": "2024-02-11T01:00:00.000Z",
            "content_html": "<h2 id=\"aba问题遇到过吗详细说一下\"><a class=\"anchor\" href=\"#aba问题遇到过吗详细说一下\">#</a> ABA 问题遇到过吗，详细说一下</h2>\n<ol>\n<li>有两个线程同时去修改一个变量的值，比如线程 1、线程 2，都更新变量值，将变量值从 A 更新成 B。</li>\n<li>首先线程 1 获取到 CPU 的时间片，线程 2 由于某些原因发生阻塞进行等待，此时线程 1 进行比较更新（CompareAndSwap），成功将变量的值从 A 更新成 B。</li>\n<li>更新完毕之后，恰好又有线程 3 进来想要把变量的值从 B 更新成 A，线程 3 进行比较更新，成功将变量的值从 B 更新成 A。</li>\n<li>线程 2 获取到 CPU 的时间片，然后进行比较更新，发现值是预期的 A，然后有更新成了 B。但是线程 1 并不知道，该值已经有了 A-&gt;B-&gt;A 这个过程，这也就是我们常说的 ABA 问题。</li>\n</ol>\n<p>举个具体的例子：</p>\n<p>小明在提款机，提取了 50 元，因为提款机问题，<br />\n有两个线程，同时把余额从 100 变为 50</p>\n<p>线程 1（提款机）：获取当前值 100，期望更新为 50，</p>\n<p>线程 2（提款机）：获取当前值 100，期望更新为 50，</p>\n<p>线程 1 成功执行，线程 2 某种原因 block 了，这时，某人给小明汇款 50</p>\n<p>线程 3（默认）：获取当前值 50，期望更新为 100，</p>\n<p>这时候线程 3 成功执行，余额变为 100，</p>\n<p>线程 2 从 Block 中恢复，获取到的也是 100，compare 之后，继续更新余额为 50！！！</p>\n<p>此时可以看到，实际余额应该为 100（100-50+50），但是实际上变为了 50（100-50+50-50）</p>\n<h4 id=\"如何避免aba问题\"><a class=\"anchor\" href=\"#如何避免aba问题\">#</a> 如何避免 ABA 问题：</h4>\n<p>可以通过加版本号或者加时间戳解决，或者保证单向递增或者递减就不会存在此类问题。</p>\n<p>atomic 包下的<strong> AtomicStampedReference 类</strong>：其 compareAndSet 方法首先检查当前引用<strong>是否等于预期引用</strong>，并且当前标志<strong>是否等于预期标志</strong>，如果全部相等，则以原子方式将该引用的该标志的值设置为给定的更新值。</p>\n<h4 id=\"cas导致的其他问题\"><a class=\"anchor\" href=\"#cas导致的其他问题\">#</a> CAS 导致的其他问题</h4>\n<p>1、只能保证一个共享变量的原子操作</p>\n<p>当对一个共享变量执行操作时，我们可以使用循环 CAS 的方式来保证原子操作，但是对多个共享变量操作时，循环 CAS 就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量 i＝2,j=a，合并一下 ij=2a，然后用 CAS 来操作 ij。从 Java1.5 开始 JDK 提供了 AtomicReference 类来保证引用对象之间的原子性，可以把多个变量放在一个对象里来进行 CAS 操作。</p>\n<p>2、循环时间长开销大</p>\n<p>自旋 CAS 如果长时间不成功，会给 CPU 带来非常大的执行开销。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/02/10/doc/%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%8B%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E6%B4%BB%E8%B7%83%E6%80%81%E9%97%AE%E9%A2%98%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%AB%9E%E6%80%81%E6%9D%A1%E4%BB%B6%20/",
            "url": "https://hk2012.github.io/2024/02/10/doc/%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%8B%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E6%B4%BB%E8%B7%83%E6%80%81%E9%97%AE%E9%A2%98%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%AB%9E%E6%80%81%E6%9D%A1%E4%BB%B6%20/",
            "title": "描述一下线程安全活跃态问题，以及竞态条件",
            "date_published": "2024-02-10T09:20:00.000Z",
            "content_html": "<h2 id=\"描述一下线程安全活跃态问题以及竞态条件\"><a class=\"anchor\" href=\"#描述一下线程安全活跃态问题以及竞态条件\">#</a> 描述一下线程安全活跃态问题，以及竞态条件</h2>\n<ol>\n<li>线程安全的活跃性问题可以分为 死锁、活锁、饥饿\n<ol>\n<li>活锁 就是有时线程虽然没有发生阻塞，但是仍然会存在执行不下去的情况，活锁不会阻塞线程，线程会一直重复执行某个相同的操作，并且一直失败重试\n<ol>\n<li>我们开发中使用的异步消息队列就有可能造成活锁的问题，在消息队列的消费端如果没有正确的 ack 消息，并且执行过程中报错了，就会再次放回消息头，然后再拿出来执行，一直循环往复的失败。这个问题除了正确的 ack 之外，往往是通过将失败的消息放入到延时队列中，等到一定的延时再进行重试来解决。</li>\n<li>解决活锁的方案很简单，尝试等待一个随机的时间就可以，会按时间轮去重试</li>\n</ol>\n</li>\n<li>饥饿  就是 线程因无法访问所需资源而无法执行下去的情况\n<ol>\n<li>饥饿 分为两种情况：\n<ol>\n<li>一种是其他的线程在临界区做了无限循环或无限制等待资源的操作，让其他的线程一直不能拿到锁进入临界区，对其他线程来说，就进入了饥饿状态</li>\n<li>另一种是因为线程优先级不合理的分配，导致部分线程始终无法获取到 CPU 资源而一直无法执行</li>\n</ol>\n</li>\n<li>解决饥饿的问题有几种方案:\n<ol>\n<li>保证资源充足，很多场景下，资源的稀缺性无法解决</li>\n<li>公平分配资源，在并发编程里使用公平锁，例如 FIFO 策略，线程等待是有顺序的，排在等待队列前面的线程会优先获得资源</li>\n<li>避免持有锁的线程长时间执行，很多场景下，持有锁的线程的执行时间也很难缩短</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>死锁  线程在对同一把锁进行竞争的时候，未抢占到锁的线程会等待持有锁的线程释放锁后继续抢占，如果两个或两个以上的线程互相持有对方将要抢占的锁，互相等待对方先行释放锁就会进入到一个循环等待的过程，这个过程就叫做死锁</li>\n</ol>\n</li>\n<li>线程安全的竞态条件问题\n<ol>\n<li>同一个程序多线程访问同一个资源，如果对资源的访问顺序敏感，就称存在竞态条件，代码区成为临界区。 大多数并发错误一样，竞态条件不总是会产生问题，还需要不恰当的执行时序</li>\n<li>最常见的竞态条件为\n<ol>\n<li>先检测后执行执行依赖于检测的结果，而检测结果依赖于多个线程的执行时序，而多个线程的执行时序通常情况下是不固定不可判断的，从而导致执行结果出现各种问题，见一种可能 的解决办法就是：在一个线程修改访问一个状态时，要防止其他线程访问修改，也就是加锁机制，保证原子性</li>\n<li>延迟初始化（典型为单例）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/04/doc/Happens-Before%E8%A7%84%E5%88%99%E6%98%AF%E4%BB%80%E4%B9%88/",
            "url": "https://hk2012.github.io/2024/01/04/doc/Happens-Before%E8%A7%84%E5%88%99%E6%98%AF%E4%BB%80%E4%B9%88/",
            "title": "Happens-Before规则是什么",
            "date_published": "2024-01-04T09:20:00.000Z",
            "content_html": "<h2 id=\"happens-before规则是什么\"><a class=\"anchor\" href=\"#happens-before规则是什么\">#</a> Happens-Before 规则是什么？</h2>\n<ol>\n<li>\n<p>程序顺序规则：一个线程中的每一个操作，happens-before 于该线程中的任意后续操作。</p>\n<pre><code>double pi = 3.14; // A\ndouble r = 1.0; // B\ndouble area = pi * r * r; // C\n</code></pre>\n<p><strong>一个线程中，按照程序顺序，前面的操作 Happens-Before 于后续的任意操作</strong>。这个还是非常好理解的，比如上面那三行代码，第一行的 &quot;double pi = 3.14;&quot; happens-before 于 “double r = 1.0;”，这就是规则 1 的内容，比较符合单线程里面的逻辑思维，很好理解。</p>\n</li>\n<li>\n<p>监视器规则：对一个锁的解锁，happens-before 于随后对这个锁的加锁。</p>\n<p>这个规则中说的锁其实就是 Java 里的 synchronized。例如下面的代码，在进入同步块之前，会自动加锁，而在代码块执行完会自动释放锁，加锁以及释放锁都是编译器帮我们实现的。</p>\n<pre><code>synchronized (this) &#123; //此处自动加锁\n  // x是共享变量,初始值=10\n  if (this.x &lt; 12) &#123;\n    this.x = 12; \n  &#125;  \n&#125; //此处自动解锁\n</code></pre>\n<p>所以结合锁规则，可以理解为：假设 x 的初始值是 10，线程 A 执行完代码块后 x 的值会变成 12（执行完自动释放锁），线程 B 进入代码块时，能够看到线程 A 对 x 的写操作，也就是线程 B 能够看到 x==12。这个也是符合我们直觉的，非常好理解。</p>\n</li>\n<li>\n<p>volatile 规则：对一个 volatile 变量的写，happens-before 于任意后续对一个 volatile 变量的读。</p>\n</li>\n<li>\n<p>传递性：若果 A happens-before B，B happens-before C，那么 A happens-before C。</p>\n<pre><code>class VolatileExample &#123;\n  int x = 0;\n  volatile boolean v = false;\n  public void writer() &#123;\n    x = 42;\n    v = true;\n  &#125;\n  public void reader() &#123;\n    if (v == true) &#123;\n      // 这里x会是多少呢？\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol>\n<li>“x=42” Happens-Before 写变量 “v=true” ，这是规则 1 的内容；</li>\n<li>写变量 “v=true” Happens-Before 读变量 “v=true”，这是规则 3 的内容 。</li>\n<li>再根据这个传递性规则，我们得到结果：“x=42” Happens-Before 读变量 “v=true”。这意味着什么呢？</li>\n</ol>\n<p>如果线程 B 读到了 “v=true”，那么线程 A 设置的 “x=42” 对线程 B 是可见的。也就是说，线程 B 能看到 “x == 42” ，有没有一种恍然大悟的感觉？这就是 1.5 版本对 volatile 语义的增强，这个增强意义重大，1.5 版本的并发工具包（java.util.concurrent）就是靠 volatile 语义来搞定可见性的。</p>\n</li>\n<li>\n<p>线程启动规则：Thread 对象的 start () 方法，happens-before 于这个线程的任意后续操作。</p>\n</li>\n<li>\n<p>线程终止规则：线程中的任意操作，happens-before 于该线程的终止监测。我们可以通过 Thread.join () 方法结束、Thread.isAlive () 的返回值等手段检测到线程已经终止执行。</p>\n</li>\n<li>\n<p>线程中断操作：对线程 interrupt () 方法的调用，happens-before 于被中断线程的代码检测到中断事件的发生，可以通过 Thread.interrupted () 方法检测到线程是否有中断发生。</p>\n</li>\n<li>\n<p>对象终结规则：一个对象的初始化完成，happens-before 于这个对象的 finalize () 方法的开始。</p>\n</li>\n</ol>\n<p><strong>总结</strong><br />\n在 Java 语言里面，Happens-Before 的语义本质上是一种可见性，A Happens-Before B 意味着 A 事件对 B 事件来说是可见的，无论 A 事件和 B 事件是否发生在同一个线程里。例如 A 事件发生在线程 1 上，B 事件发生在线程 2 上，Happens-Before 规则保证线程 2 上也能看到 A 事件的发生。</p>\n<p>JMM 的设计分为两部分，一部分是面向我们程序员提供的，也就是 happens-before 规则，它通俗易懂的向我们程序员阐述了一个强内存模型，我们只要理解 happens-before 规则，就可以编写并发安全的程序了。 另一部分是针对 JVM 实现的，为了尽可能少的对编译器和处理器做约束，从而提高性能，JMM 在不影响程序执行结果的前提下对其不做要求，即允许优化重排序。 我们只需要关注前者就好了，也就是理解 happens-before 规则。毕竟我们是做程序员的，术业有专攻，能写出安全的并发程序就好了。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/04/doc/jvm%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%AD%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%20/",
            "url": "https://hk2012.github.io/2024/01/04/doc/jvm%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%AD%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%20/",
            "title": "jvm有哪些垃圾回收器，实际中如何选择",
            "date_published": "2024-01-04T06:20:00.000Z",
            "content_html": "<h2 id=\"jvm有哪些垃圾回收器实际中如何选择\"><a class=\"anchor\" href=\"#jvm有哪些垃圾回收器实际中如何选择\">#</a> jvm 有哪些垃圾回收器，实际中如何选择</h2>\n<p><img data-src=\"/img/images/gcollector.png\" alt=\"\" /><br />\n图中展示了 7 种作用于不同分代的收集器，如果两个收集器之间存在连线，则说明它们可以搭配使用。虚拟机所处的区域则表示它是属于新生代还是老年代收集器。<br />\n新生代收集器（全部的都是复制算法）：Serial、ParNew、Parallel Scavenge<br />\n 老年代收集器：CMS（标记 - 清理）、Serial Old（标记 - 整理）、Parallel Old（标记整理）<br />\n整堆收集器： G1（一个 Region 中是标记 - 清除算法，2 个 Region 之间是复制算法）<br />\n同时，先解释几个名词：<br />\n1，<strong>并行（Parallel）</strong>：多个垃圾收集线程并行工作，此时用户线程处于等待状态<br />\n 2，<strong>并发（Concurrent）</strong>：用户线程和垃圾收集线程同时执行<br />\n 3，<strong>吞吐量</strong>：运行用户代码时间／（运行用户代码时间＋垃圾回收时间）<br />\n<strong>1.Serial 收集器是最基本的、发展历史最悠久的收集器。</strong><br />\n** 特点：** 单线程、简单高效（与其他收集器的单线程相比），对于限定单个 CPU 的环境来说，Serial 收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程手机效率。收集器进行垃圾回收时，必须暂停其他所有的工作线程，直到它结束（Stop The World）。<br />\n<strong>应用场景</strong>：适用于 Client 模式下的虚拟机。<br />\n<strong>Serial / Serial Old 收集器运行示意图</strong><br />\n<img data-src=\"/img/images/serial.png\" alt=\"\" /><br />\n<strong> 2.ParNew 收集器其实就是 Serial 收集器的多线程版本。</strong><br />\n除了使用多线程外其余行为均和 Serial 收集器一模一样（参数控制、收集算法、Stop The World、对象分配规则、回收策略等）。<br />\n<strong>特点</strong>：多线程、ParNew 收集器默认开启的收集线程数与 CPU 的数量相同，在 CPU 非常多的环境中，可以使用 - XX:ParallelGCThreads 参数来限制垃圾收集的线程数。<br />\n　　　和 Serial 收集器一样存在 Stop The World 问题<br />\n<strong>应用场景</strong>：ParNew 收集器是许多运行在 Server 模式下的虚拟机中首选的新生代收集器，因为它是除了 Serial 收集器外，唯一一个能与 CMS 收集器配合工作的。<br />\nParNew/Serial Old 组合收集器运行示意图如下：<br />\n<img data-src=\"/img/images/parnew.png\" alt=\"\" /><br />\n<strong>3.Parallel Scavenge 收集器与吞吐量关系密切，故也称为吞吐量优先收集器。</strong><br />\n<strong>特点</strong>：属于新生代收集器也是采用复制算法的收集器，又是并行的多线程收集器（与 ParNew 收集器类似）。<br />\n该收集器的目标是达到一个可控制的吞吐量。还有一个值得关注的点是：GC 自适应调节策略（与 ParNew 收集器最重要的一个区别）<br />\n<strong>GC 自适应调节策略</strong>：Parallel Scavenge 收集器可设置 - XX:+UseAdptiveSizePolicy 参数。当开关打开时不需要手动指定新生代的大小（-Xmn）、Eden 与 Survivor 区的比例（-XX:SurvivorRation）、晋升老年代的对象年龄（-XX:PretenureSizeThreshold）等，虚拟机会根据系统的运行状况收集性能监控信息，动态设置这些参数以提供最优的停顿时间和最高的吞吐量，这种调节方式称为 GC 的自适应调节策略。<br />\nParallel Scavenge 收集器使用两个参数控制吞吐量：</p>\n<ul>\n<li>XX:MaxGCPauseMillis 控制最大的垃圾收集停顿时间</li>\n<li>XX:GCRatio 直接设置吞吐量的大小。</li>\n</ul>\n<p><strong>4.Serial Old 是 Serial 收集器的老年代版本。</strong><br />\n<strong>特点</strong>：同样是单线程收集器，采用标记 - 整理算法。<br />\n<strong>应用场景</strong>：主要也是使用在 Client 模式下的虚拟机中。也可在 Server 模式下使用。<br />\nServer 模式下主要的两大用途（在后续中详细讲解・・・）：</p>\n<ol>\n<li>在 JDK1.5 以及以前的版本中与 Parallel Scavenge 收集器搭配使用。</li>\n<li>作为 CMS 收集器的后备方案，在并发收集 Concurent Mode Failure 时使用。</li>\n</ol>\n<p>Serial / Serial Old 收集器工作过程图（Serial 收集器图示相同）：<br />\n<img data-src=\"/img/images/serial-old.png\" alt=\"\" /><br />\n<strong>5.Parallel Old 是 Parallel Scavenge 收集器的老年代版本。</strong><br />\n<strong>特点</strong>：多线程，采用标记 - 整理算法。<br />\n<strong>应用场景</strong>：注重高吞吐量以及 CPU 资源敏感的场合，都可以优先考虑 Parallel Scavenge+Parallel Old 收集器。<br />\n<em>Parallel Scavenge/Parallel Old 收集器工作过程图：</em><br />\n<strong>6.CMS 收集器是一种以获取最短回收停顿时间为目标的收集器。</strong><br />\n<strong>特点</strong>：基于标记 - 清除算法实现。并发收集、低停顿。<br />\n<strong>应用场景</strong>：适用于注重服务的响应速度，希望系统停顿时间最短，给用户带来更好的体验等场景下。如 web 程序、b/s 服务。<br />\n<strong>CMS 收集器的运行过程分为下列 4 步：</strong><br />\n<strong>初始标记</strong>：标记 GC Roots 能直接到的对象。速度很快但是仍存在 Stop The World 问题。<br />\n<strong>并发标记</strong>：进行 GC Roots Tracing 的过程，找出存活对象且用户线程可并发执行。<br />\n<strong>重新标记</strong>：为了修正并发标记期间因用户程序继续运行而导致标记产生变动的那一部分对象的标记记录。仍然存在 Stop The World 问题。<br />\n<strong>并发清除</strong>：对标记的对象进行清除回收。<br />\nCMS 收集器的内存回收过程是与用户线程一起并发执行的。<br />\nCMS 收集器的工作过程图：<br />\n<img data-src=\"/img/images/cms.png\" alt=\"\" /><br />\nCMS 收集器的缺点：</p>\n<ul>\n<li>对 CPU 资源非常敏感。</li>\n<li>无法处理浮动垃圾，可能出现 Concurrent Model Failure 失败而导致另一次 Full GC 的产生。</li>\n<li>因为采用标记 - 清除算法所以会存在空间碎片的问题，导致大对象无法分配空间，不得不提前触发一次 Full GC。<img data-src=\"/img/images/cms2.png\" alt=\"\" /></li>\n</ul>\n<p><strong>​</strong></p>\n<p><strong>7.G1 收集器一款面向服务端应用的垃圾收集器。</strong><br />\n<strong>特点如下：</strong><br />\n并行与并发：G1 能充分利用多 CPU、多核环境下的硬件优势，使用多个 CPU 来缩短 Stop-The-World 停顿时间。部分收集器原本需要停顿 Java 线程来执行 GC 动作，G1 收集器仍然可以通过并发的方式让 Java 程序继续运行。<br />\n分代收集：G1 能够独自管理整个 Java 堆，并且采用不同的方式去处理新创建的对象和已经存活了一段时间、熬过多次 GC 的旧对象以获取更好的收集效果。<br />\n空间整合：G1 运作期间不会产生空间碎片，收集后能提供规整的可用内存。<br />\n可预测的停顿：G1 除了追求低停顿外，还能建立可预测的停顿时间模型。能让使用者明确指定在一个长度为 M 毫秒的时间段内，消耗在垃圾收集上的时间不得超过 N 毫秒。<br />\n<strong>G1 收集器运行示意图：</strong><br />\n<img data-src=\"/img/images/g1.png\" alt=\"\" /><br />\n<strong>​</strong></p>\n<p>关于 gc 的选择<br />\n除非应用程序有非常严格的暂停时间要求，否则请先运行应用程序并允许 VM 选择收集器（如果没有特别要求。使用 VM 提供给的默认 GC 就好）。<br />\n如有必要，调整堆大小以提高性能。 如果性能仍然不能满足目标，请使用以下准则作为选择收集器的起点：</p>\n<ul>\n<li>如果应用程序的数据集较小（最大约 100 MB），则选择带有选项 - XX：+ UseSerialGC 的串行收集器。</li>\n<li>如果应用程序将在单个处理器上运行，并且没有暂停时间要求，则选择带有选项 - XX：+ UseSerialGC 的串行收集器。</li>\n<li>如果（a）峰值应用程序性能是第一要务，并且（b）没有暂停时间要求或可接受一秒或更长时间的暂停，则让 VM 选择收集器或使用 - XX：+ UseParallelGC 选择并行收集器 。</li>\n<li>如果响应时间比整体吞吐量更重要，并且垃圾收集暂停时间必须保持在大约一秒钟以内，则选择具有 - XX：+ UseG1GC。（值得注意的是 JDK9 中 CMS 已经被 Deprecated，不可使用！移除该选项）</li>\n<li>如果使用的是 jdk8，并且堆内存达到了 16G，那么推荐使用 G1 收集器，来控制每次垃圾收集的时间。</li>\n<li>如果响应时间是高优先级，或使用的堆非常大，请使用 - XX：UseZGC 选择完全并发的收集器。（值得注意的是 JDK11 开始可以启动 ZGC，但是此时 ZGC 具有实验性质，在 JDK15 中 [202009 发布] 才取消实验性质的标签，可以直接显示启用，但是 JDK15 默认 GC 仍然是 G1）</li>\n</ul>\n<p>这些准则仅提供选择收集器的起点，因为性能取决于堆的大小，应用程序维护的实时数据量以及可用处理器的数量和速度。<br />\n如果推荐的收集器没有达到所需的性能，则首先尝试调整堆和新生代大小以达到所需的目标。 如果性能仍然不足，尝试使用其他收集器<br />\n<strong>总体原则</strong>：减少 STOP THE WORD 时间，使用并发收集器（比如 CMS+ParNew，G1）来减少暂停时间，加快响应时间，并使用并行收集器来增加多处理器硬件上的总体吞吐量。</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/04/doc/ThreadLocal%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E6%9C%89%E5%93%AA%E4%BA%9B/",
            "url": "https://hk2012.github.io/2024/01/04/doc/ThreadLocal%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E6%9C%89%E5%93%AA%E4%BA%9B/",
            "title": "ThreadLocal的原理是什么，使用场景有哪些",
            "date_published": "2024-01-03T23:00:00.000Z",
            "content_html": "<h2 id=\"threadlocal的原理是什么使用场景有哪些\"><a class=\"anchor\" href=\"#threadlocal的原理是什么使用场景有哪些\">#</a> ThreadLocal 的原理是什么，使用场景有哪些</h2>\n<p>ThreadLocal 类中有两个变量 threadLocals 和 inheritableThreadLocals，二者都是 ThreadLocal 内部类 ThreadLocalMap 类型的变量，我们通过查看内部类 ThreadLocalMap 可以发现实际上它类似于一个 HashMap。在默认情况下，每个线程中的这两个变量都为 null:</p>\n<pre><code>ThreadLocal.ThreadLocalMap threadLocals = null;\nThreadLocal.ThreadLocalMap inheritableThreadLocals = null;\n</code></pre>\n<p>只有当线程第一次调用 ThreadLocal 的 set 或者 get 方法的时候才会创建他们。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">T</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ThreadLocalMap</span> map <span class=\"token operator\">=</span> <span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>map <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">ThreadLocalMap<span class=\"token punctuation\">.</span>Entry</span> e <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token class-name\">T</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span>e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">setInitialValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">ThreadLocalMap</span> <span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span>threadLocals<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>除此之外，每个线程的本地变量不是存放在 ThreadLocal 实例中，而是放在调用线程的<strong> ThreadLocals</strong> 变量里面。也就是说，<strong>ThreadLocal 类型的本地变量是存放在具体的线程空间上</strong>，其本身相当于一个装载本地变量的载体，通过 set 方法将 value 添加到调用线程的 threadLocals 中，当调用线程调用 get 方法时候能够从它的 threadLocals 中取出变量。如果调用线程一直不终止，那么这个本地变量将会一直存放在他的 threadLocals 中，所以不使用本地变量的时候需要调用 remove 方法将 threadLocals 中删除不用的本地变量，防止出现内存泄漏。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ThreadLocalMap</span> map <span class=\"token operator\">=</span> <span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>map <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            map<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token function\">createMap</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token class-name\">ThreadLocalMap</span> m <span class=\"token operator\">=</span> <span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>             m<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/03/doc/ThreadLocal%E6%9C%89%E5%93%AA%E4%BA%9B%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E9%97%AE%E9%A2%98%EF%BC%8C%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D/",
            "url": "https://hk2012.github.io/2024/01/03/doc/ThreadLocal%E6%9C%89%E5%93%AA%E4%BA%9B%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E9%97%AE%E9%A2%98%EF%BC%8C%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D/",
            "title": "ThreadLocal有哪些内存泄露问题，如何避免",
            "date_published": "2024-01-03T09:00:00.000Z",
            "content_html": "<h2 id=\"threadlocal有哪些内存泄露问题如何避免\"><a class=\"anchor\" href=\"#threadlocal有哪些内存泄露问题如何避免\">#</a> ThreadLocal 有哪些内存泄露问题，如何避免</h2>\n<p>每个 Thread 都有一个 ThreadLocal.ThreadLocalMap 的 map，该 map 的 key 为 ThreadLocal 实例，它为一个弱引用，我们知道弱引用有利于 GC 回收。当 ThreadLocal 的 key == null 时，GC 就会回收这部分空间，但是 value 却不一定能够被回收，因为他还与 Current Thread 存在一个强引用关系，如下</p>\n<p><img data-src=\"/img/1621414292593-0b7cfa25-1c6e-46af-9e67-55ae73904a02.png\" alt=\"image\" /> 由于存在这个强引用关系，会导致 value 无法回收。如果这个线程对象不会销毁那么这个强引用关系则会一直存在，就会出现内存泄漏情况。所以说只要这个线程对象能够及时被 GC 回收，就不会出现内存泄漏。如果碰到线程池，那就更坑了。 那么要怎么避免这个问题呢？ 在前面提过，在 ThreadLocalMap 中的 setEntry ()、getEntry ()，如果遇到 key == null 的情况，会对 value 设置为 null。当然我们也可以显示调用 ThreadLocal 的 remove () 方法进行处理。 下面再对 ThreadLocal 进行简单的总结：</p>\n<ul>\n<li>ThreadLocal 不是用于解决共享变量的问题的，也不是为了协调线程同步而存在，而是为了方便每个线程处理自己的状态而引入的一个机制。这点至关重要。</li>\n<li>每个 Thread 内部都有一个 ThreadLocal.ThreadLocalMap 类型的成员变量，该成员变量用来存储实际的 ThreadLocal 变量副本。</li>\n<li>ThreadLocal 并不是为线程保存对象的副本，它仅仅只起到一个索引的作用。它主要是为每一个线程隔离一个类的实例，这个实例的作用范围仅限于线程内部。</li>\n</ul>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/03/doc/synchronized%E5%92%8Clock%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8C%BA%E5%88%AB%20/",
            "url": "https://hk2012.github.io/2024/01/03/doc/synchronized%E5%92%8Clock%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8C%BA%E5%88%AB%20/",
            "title": "synchronized和lock有哪些区别",
            "date_published": "2024-01-03T02:10:00.000Z",
            "content_html": "<h2 id=\"synchronized和lock有哪些区别\"><a class=\"anchor\" href=\"#synchronized和lock有哪些区别\">#</a> synchronized 和 lock 有哪些区别</h2>\n<ol>\n<li>来源：<br />\nlock 是一个接口，而 synchronized 是 java 的一个关键字，synchronized 是内置的语言实现；</li>\n<li>异常是否释放锁：<br />\nsynchronized 在发生异常时候会自动释放占有的锁，因此不会出现死锁；而 lock 发生异常时候，不会主动释放占有的锁，必须手动 unlock 来释放锁，可能引起死锁的发生。（所以最好将同步代码块用 try catch 包起来，finally 中写入 unlock，避免死锁的发生。）</li>\n<li>是否响应中断<br />\n lock 等待锁过程中可以用 interrupt 来中断等待，而 synchronized 只能等待锁的释放，不能响应中断；</li>\n<li>是否知道获取锁<br />\n Lock 可以通过 trylock 来知道有没有获取锁，而 synchronized 不能；</li>\n<li>Lock 可以提高多个线程进行读操作的效率。（可以通过 readwritelock 实现读写分离）</li>\n<li>在性能上来说，如果竞争资源不激烈，两者的性能是差不多的，而当竞争资源非常激烈时（即有大量线程同时竞争），此时 Lock 的性能要远远优于 synchronized。所以说，在具体使用时要根据适当情况选择。</li>\n<li>synchronized 使用 Object 对象本身的 wait 、notify、notifyAll 调度机制，而 Lock 可以使用 Condition 进行线程之间的调度，</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>区别类型</th>\n<th>synchronized</th>\n<th>Lock</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存在层次</td>\n<td>Java 的关键字，在 jvm 层面上</td>\n<td>是 JVM 的一个接口</td>\n</tr>\n<tr>\n<td>锁的获取</td>\n<td>假设 A 线程获得锁，B 线程等待。如果 A 线程阻塞，B 线程会一直等待</td>\n<td>情况而定，Lock 有多个锁获取的方式，大致就是可以尝试获得锁，线程可以不用一直等待 (可以通过 tryLock 判断有没有锁)</td>\n</tr>\n<tr>\n<td>锁的释放</td>\n<td>1、以获取锁的线程执行完同步代码，释放锁 2、线程执行发生异常，jvm 会让线程释放</td>\n<td>在 finally 中必须释放锁，不然容易造成线程死锁</td>\n</tr>\n<tr>\n<td>锁类型</td>\n<td>锁可重入、不可中断、非公平</td>\n<td>可重入、可判断 可公平（两者皆可）</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>少量同步</td>\n<td>适用于大量同步</td>\n</tr>\n<tr>\n<td>支持锁的场景</td>\n<td>1.  独占锁</td>\n<td>1.  公平锁与非公平锁</td>\n</tr>\n</tbody>\n</table>\n<p>使用方式区别：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Lock</span> lock <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReentrantLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">lockTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            lock<span class=\"token punctuation\">.</span><span class=\"token function\">tryLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">//do-something</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            lock<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token class-name\">Object</span> lock2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>lock2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">//do-something</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/02/doc/volatile%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7%E5%92%8C%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92%E5%BA%8F%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E7%9A%84/",
            "url": "https://hk2012.github.io/2024/01/02/doc/volatile%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7%E5%92%8C%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92%E5%BA%8F%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E7%9A%84/",
            "title": "volatile的可见性和禁止指令重排序怎么实现的",
            "date_published": "2024-01-02T08:10:00.000Z",
            "content_html": "<h2 id=\"volatile的可见性和禁止指令重排序怎么实现的\"><a class=\"anchor\" href=\"#volatile的可见性和禁止指令重排序怎么实现的\">#</a> volatile 的可见性和禁止指令重排序怎么实现的</h2>\n<p>《深入理解 JAVA 虚拟机》中有如下描述：</p>\n<p>“观察加入 volatile 关键字和没有加入 volatile 关键字时所生成的汇编代码发现，加入 volatile 关键字时，会多出一个 lock 前缀指令”</p>\n<p>lock 前缀指令实际上相当于一个<strong>内存屏障</strong>（也成内存栅栏），内存屏障会提供 3 个功能：</p>\n<ol>\n<li>它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；</li>\n<li>它会强制将对缓存的修改操作立即写入主存；</li>\n<li>如果是写操作，它会导致其他 CPU 中对应的缓存行无效。</li>\n</ol>\n<p>所以可见性和禁止指令重排序如下：</p>\n<ul>\n<li>可见性：<br />\nvolatile 的功能就是被修饰的变量在被修改后可以立即同步到主内存，被修饰的变量在每次是用之前都从主内存刷新。本质也是通过内存屏障来实现可见性<br />\n写内存屏障（Store Memory Barrier）可以促使处理器将当前 store buffer（存储缓存）的值写回主存。读内存屏障（Load Memory Barrier）可以促使处理器处理 invalidate queue（失效队列）。进而避免由于 Store Buffer 和 Invalidate Queue 的非实时性带来的问题。</li>\n<li>禁止指令重排序：<br />\nvolatile 是通过<strong>内存屏障</strong>来禁止指令重排序<br />\n JMM 内存屏障的策略\n<ul>\n<li>在每个 volatile 写操作的前面插入一个 StoreStore 屏障。</li>\n<li>在每个 volatile 写操作的后面插入一个 StoreLoad 屏障。</li>\n<li>在每个 volatile 读操作的后面插入一个 LoadLoad 屏障。</li>\n<li>在每个 volatile 读操作的后面插入一个 LoadStore 屏障。</li>\n</ul>\n</li>\n</ul>\n<p>典型使用场景 DCL：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">//volatile 是防止指令重排</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">volatile</span> <span class=\"token class-name\">Singleton</span> singleton<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 第一层判断 singleton 是不是为 null</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 如果不为 null 直接返回，这样就不必加锁了</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 现在再加锁</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token comment\">// 第二层判断</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token comment\">// 如果 A,B 两个线程都在 synchronized 等待</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token comment\">//A 创建完对象之后，B 还会再进入，如果不再检查一遍，B 又会创建一个对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/02/doc/%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%A4%9A%E5%B0%91%E7%BA%BF%E7%A8%8B%E5%90%88%E9%80%82/",
            "url": "https://hk2012.github.io/2024/01/02/doc/%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%A4%9A%E5%B0%91%E7%BA%BF%E7%A8%8B%E5%90%88%E9%80%82/",
            "title": "创建线程有哪些方式",
            "date_published": "2024-01-01T22:10:00.000Z",
            "content_html": "<h2 id=\"程序开多少线程合适\"><a class=\"anchor\" href=\"#程序开多少线程合适\">#</a> 程序开多少线程合适</h2>\n<h3 id=\"为什么要找最佳线程数\"><a class=\"anchor\" href=\"#为什么要找最佳线程数\">#</a> <strong>为什么要找最佳线程数</strong></h3>\n<p>1. 过多的线程只会造成，更多的内存开销，更多的 CPU 开销，但是对提升 QPS 确毫无帮助</p>\n<p>2. 使用多线程就是在正确的场景下通过设置正确个数的线程来充分的利用 CPU 和 I/O 最大化程序的运行速度。</p>\n<h3 id=\"从两个方面和分析\"><a class=\"anchor\" href=\"#从两个方面和分析\">#</a> 从两个方面和分析：</h3>\n<ul>\n<li>\n<p>CPU 密集型程序</p>\n</li>\n<li>\n<p>I/O 密集型程序</p>\n</li>\n</ul>\n<ol>\n<li>CPU 密集型程序，一个完整请求，I/O 操作可以在很短时间内完成，CPU 还有很多运算要处理，也就是说 CPU 计算的比例占很大一部分，线程等待时间接近 0\n<ol>\n<li>单核 CPU： 一个完整请求，I/O 操作可以在很短时间内完成， CPU 还有很多运算要处理，也就是说 CPU 计算的比例占很大一部分，线程等待时间接近 0。单核 CPU 处理 CPU 密集型程序，这种情况并不太适合使用多线程。</li>\n<li>多核 ： 如果是多核 CPU 处理 CPU 密集型程序，我们完全可以最大化的利用 CPU 核心数，应用并发编程来提高效率。CPU 密集型程序的最佳线程数就是：理论上线程数量 = CPU 核数（逻辑），但是实际上，数量一般会设置为 CPU 核数（逻辑）+ 1（经验值）, 计算 (CPU) 密集型的线程恰好在某时因为发生一个页错误或者因其他原因而暂停，刚好有一个 “额外” 的线程，可以确保在这种情况下 CPU 周期不会中断工作</li>\n</ol>\n</li>\n<li>I/O 密集型程序，与 CPU 密集型程序相对，一个完整请求，CPU 运算操作完成之后还有很多 I/O 操作要做，也就是说 I/O 操作占比很大部分，在进行 I/O 操作时，CPU 是空闲状态，所以我们要最大化的利用 CPU，不能让其是空闲状态，由于 I/O 等待时间较长，线程等待时间所占比例越高，需要越多线程；线程 CPU 时间所占比例越高，需要越少线程，\n<ol>\n<li>I/O 密集型程序的最佳线程数就是： 最佳线程数 = CPU 核心数 * <em>(1/CPU 利用率) = CPU 核心数</em> *(1 + (I/O 耗时 / CPU 耗时))</li>\n<li>如果几乎全是 I/O 耗时，那么 CPU 耗时就无限趋近于 0，所以纯理论你就可以说是 2N（N=CPU 核数），当然也有说 2N + 1 的，1 应该是 backup</li>\n<li>一般我们说 2N + 1 就即可</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"拓展\"><a class=\"anchor\" href=\"#拓展\">#</a> 拓展</h3>\n<p>1、我们已经知道创建多少个线程合适了，为什么还要搞一个线程池出来？</p>\n<ul>\n<li>风险不受控</li>\n<li>频繁创建开销大</li>\n</ul>\n<h4 id=\"风险不受控\"><a class=\"anchor\" href=\"#风险不受控\">#</a> 风险不受控</h4>\n<p>系统资源有限，每个人针对不同业务都可以手动创建线程，并且创建标准不一样（比如线程没有名字）。当系统运行起来，所有线程都在疯狂抢占资源，内存被无情榨干耗尽，这好比一个正木马程序（出现问题，自然也就不可能轻易的发现和解决）。</p>\n<h4 id=\"频繁创建开销大\"><a class=\"anchor\" href=\"#频繁创建开销大\">#</a> 频繁创建开销大</h4>\n<p>内存分配，对象初始化，线程创建，线程状态保存等均需要资源</p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/02/doc/%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E5%BC%8F/",
            "url": "https://hk2012.github.io/2024/01/02/doc/%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E5%BC%8F/",
            "title": "创建线程有哪些方式",
            "date_published": "2024-01-01T22:10:00.000Z",
            "content_html": "<h2 id=\"创建线程有哪些方式\"><a class=\"anchor\" href=\"#创建线程有哪些方式\">#</a> 创建线程有哪些方式</h2>\n<p>Java 可以用四种方式来创建线程，如下所示：</p>\n<ol>\n<li>\n<p>继承 Thread 类创建线程</p>\n</li>\n<li>\n<p>实现 Runnable 接口创建线程</p>\n</li>\n<li>\n<p>使用 Callable 和 Future 创建线程</p>\n</li>\n<li>\n<p>使用线程池例如用 Executor 框架继承 Thread 类创建线程</p>\n</li>\n</ol>\n<p>下面让我们分别来看看这四种创建线程的方法。</p>\n<ol>\n<li>\n<p>通过继承 Thread 类来创建并启动多线程的一般步骤如下</p>\n<ul>\n<li>\n<p>定义 Thread 类的子类，并重写该类的 run () 方法，该方法的方法体就是线程需要完成的任务，run () 方法也称为线程执行体。</p>\n</li>\n<li>\n<p>创建 Thread 子类的实例，也就是创建了线程对象</p>\n</li>\n<li>\n<p>启动线程，即调用线程的 start () 方法</p>\n</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThreadTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">MyThread</span> myThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        myThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThread</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 做一些操作</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>\n<p>通过实现 Runnable 接口创建并启动线程一般步骤如下：</p>\n<ul>\n<li>\n<p>定义 Runnable 接口的实现类，一样要重写 run () 方法，这个 run（）方法和 Thread 中的 run () 方法一样是线程的执行体</p>\n</li>\n<li>\n<p>创建 Runnable 实现类的实例，并用这个实例作为 Thread 的 target 来创建 Thread 对象，这个 Thread 对象才是真正的线程对象</p>\n</li>\n<li>\n<p>第三部依然是通过调用线程对象的 start () 方法来启动线程</p>\n</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThreadTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">MyThread</span> myThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        myThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyRunnable</span>  <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 做一些操作</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>\n<p>和 Runnable 接口不一样，Callable 接口提供了一个 call（）方法作为线程执行体，call () 方法比 run () 方法功能要强大。</p>\n<ul>\n<li>\n<p>call () 方法可以有返回值</p>\n</li>\n<li>\n<p>call () 方法可以声明抛出异常</p>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>Java5 提供了 Future 接口来代表 Callable 接口里 call () 方法的返回值，并且为 Future 接口提供了一个实现类 FutureTask，这个实现类既实现了 Future 接口，还实现了 Runnable 接口，因此可以作为 Thread 类的 target。在 Future 接口里定义了几个公共方法来控制它关联的 Callable 任务。</li>\n</ul>\n<blockquote>\n<p>boolean cancel (boolean mayInterruptIfRunning)：视图取消该 Future 里面关联的 Callable 任务</p>\n</blockquote>\n<blockquote>\n<p>V get ()：返回 Callable 里 call（）方法的返回值，调用这个方法会导致程序阻塞，必须等到子线程结束后才会得到返回值</p>\n</blockquote>\n<blockquote>\n<p>V get (long timeout,TimeUnit unit)：返回 Callable 里 call（）方法的返回值，最多阻塞 timeout 时间，经过指定时间没有返回抛出 TimeoutException</p>\n</blockquote>\n<blockquote>\n<p>boolean isDone ()：若 Callable 任务完成，返回 True</p>\n</blockquote>\n<blockquote>\n<p>boolean isCancelled ()：如果在 Callable 任务正常完成前被取消，返回 True</p>\n</blockquote>\n<p>介绍了相关的概念之后，创建并启动有返回值的线程的步骤如下：</p>\n<ol>\n<li>\n<p>创建 Callable 接口的实现类，并实现 call () 方法，然后创建该实现类的实例（从 java8 开始可以直接使用 Lambda 表达式创建 Callable 对象）。</p>\n</li>\n<li>\n<p>使用 FutureTask 类来包装 Callable 对象，该 FutureTask 对象封装了 Callable 对象的 call () 方法的返回值</p>\n</li>\n<li>\n<p>使用 FutureTask 对象作为 Thread 对象的 target 创建并启动线程（因为 FutureTask 实现了 Runnable 接口）</p>\n</li>\n<li>\n<p>调用 FutureTask 对象的 get () 方法来获得子线程执行结束后的返回值</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThreadTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">FutureTask</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FutureTask</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Thread</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        target<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyRunnable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 做一些事情</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>1.5 后引入的 Executor 框架的最大优点是把任务的提交和执行解耦。要执行任务的人只需把 Task 描述清楚，然后提交即可。这个 Task 是怎么被执行的，被谁执行的，什么时候执行的，提交的人就不用关心了。具体点讲，提交一个 Callable 对象给 ExecutorService（如最常用的线程池 ThreadPoolExecutor），将得到一个 Future 对象，调用 Future 对象的 get 方法等待执行结果就好了。Executor 框架的内部使用了线程池机制，它在 java.util.cocurrent 包下，通过该框架来控制线程的启动、执行和关闭，可以简化并发编程的操作。因此，在 Java 5 之后，通过 Executor 来启动线程比使用 Thread 的 start 方法更好，除了更易管理，效率更好（用线程池实现，节约开销）外，还有关键的一点：有助于避免 this 逃逸问题 —— 如果我们在构造器中启动一个线程，因为另一个任务可能会在构造器结束之前开始执行，此时可能会访问到初始化了一半的对象用 Executor 在构造器中。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">ExecutorService</span> executorService <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newSingleThreadExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Runnable</span> runnable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token comment\">// 写点逻辑</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 执行 Runnable 接口，有返回值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> submit <span class=\"token operator\">=</span> executorService<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span>runnable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        submit<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 执行 Runnable 接口，无返回值</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        executorService<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>runnable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 执行 Callable 接口，有返回值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> stringCallable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Callable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token comment\">// 写逻辑</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> submit1 <span class=\"token operator\">=</span> executorService<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span>stringCallable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        submit1<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2024/01/01/doc/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E6%9C%89%E5%93%AA%E4%BA%9B/",
            "url": "https://hk2012.github.io/2024/01/01/doc/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E6%9C%89%E5%93%AA%E4%BA%9B/",
            "title": "Java类加载器有哪些",
            "date_published": "2024-01-01T03:20:53.000Z",
            "content_html": "<h1 id=\"java类加载器有哪些\"><a class=\"anchor\" href=\"#java类加载器有哪些\">#</a> Java 类加载器有哪些</h1>\n<h3 id=\"bootstrap类加载器\"><a class=\"anchor\" href=\"#bootstrap类加载器\">#</a> <strong>Bootstrap 类加载器</strong></h3>\n<p>启动类加载器主要加载的是 JVM 自身需要的类，这个类加载使用 C++ 语言实现的，没有父类，是虚拟机自身的一部分，它负责将 <strong>&lt;JAVA_HOME&gt;/lib 路径下的核心类库</strong>或 **-Xbootclasspath 参数指定的路径下的 jar 包 ** 加载到内存中，注意必由于虚拟机是按照文件名识别加载 jar 包的，如 rt.jar，如果文件名不被虚拟机识别，即使把 jar 包丢到 lib 目录下也是没有作用的 (出于安全考虑，Bootstrap 启动类加载器只加载包名为 java、javax、sun 等开头</p>\n<h3 id=\"extention-类加载器\"><a class=\"anchor\" href=\"#extention-类加载器\">#</a> <strong>Extention 类加载器</strong></h3>\n<p>扩展类加载器是指 Sun 公司实现的 sun.misc.Launcher$ExtClassLoader 类，<strong>由 Java 语言实现的</strong>，父类加载器为 Bootstrap（null），是 Launcher 的静态内部类，它负责加载 **&lt;JAVA_HOME&gt;/lib/ext 目录下<strong>或者由系统变量</strong> - Djava.ext.dir 指定位路径中的类库 **，开发者可以直接使用标准扩展类加载器</p>\n<h3 id=\"application类加载器\"><a class=\"anchor\" href=\"#application类加载器\">#</a> <strong>Application 类加载器</strong></h3>\n<p>称应用程序加载器是指 Sun 公司实现的 sun.misc.Launcher$AppClassLoader。父类加载器为 ExtClassLoader，它负责加载<strong>系统类路径 java -classpath</strong> 或 **-D java.class.path 指定路径下的类库 **，也就是我们经常用到的<strong> classpath 路径</strong>，开发者可以直接使用系统类加载器，一般情况下该类加载是程序中默认的类加载器，通过 ClassLoader#getSystemClassLoader () 方法可以获取到该类加载器<br />\n<strong>​</strong></p>\n<h3 id=\"custom自定义类加载器\"><a class=\"anchor\" href=\"#custom自定义类加载器\">#</a> <strong>Custom 自定义类加载器</strong></h3>\n<p>应用程序可以自定义类加载器，父类加载器为 AppClassLoader</p>\n<p><img data-src=\"/img/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E6%9C%89%E5%93%AA%E4%BA%9B/classloader.png\" alt=\"image.png\" /></p>\n",
            "tags": [
                "总结"
            ]
        },
        {
            "id": "https://hk2012.github.io/2023/09/11/doc/PubmedPolictics2/",
            "url": "https://hk2012.github.io/2023/09/11/doc/PubmedPolictics2/",
            "title": "2024考研政治 (毛泽东思想和中特色社会主义理论体系概论)",
            "date_published": "2023-09-11T07:36:00.000Z",
            "content_html": "<h1 id=\"毛泽东思想和中特色社会主义理论体系概论\"><a class=\"anchor\" href=\"#毛泽东思想和中特色社会主义理论体系概论\">#</a> 毛泽东思想和中特色社会主义理论体系概论</h1>\n<p><img data-src=\"/img/polictics/%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA.png\" alt=\"毛泽东思想中国特色理论体系概论\" /></p>\n<h2 id=\"导论\"><a class=\"anchor\" href=\"#导论\">#</a> 导论</h2>\n<h3 id=\"马克思主义中国化的三次飞跃\"><a class=\"anchor\" href=\"#马克思主义中国化的三次飞跃\">#</a> 马克思主义中国化的三次飞跃</h3>\n<ul>\n<li>\n<p>马克思主义中国化的时代内涵</p>\n<ul>\n<li>1938 年，毛泽东在党的六届六中全会上作的题为《论新阶段》的政治报告中最先提出了 “马克思主义中国化” 这个命题。这是党首次明确提出 “马克思主义中国化” 的重大命题，它源于对中国革命进程中正反两个方面的实践经验的科学总结</li>\n</ul>\n</li>\n<li>\n<p>马克思主义中国化的时代内涵</p>\n<ul>\n<li>坚持把马克思主义基本原理同中国具体实际相结合、同中华优秀传统文化相结合，深入研究和解决中国革命、建设、改革不同历史时期的实际问题</li>\n<li>运用马克思主义的立场、观点、方法，观察时代、把握时代、引领时代，解决中国革命、建设、改革中的实际问题。</li>\n<li>总结和提炼中国革命、建设、改革的实践经验并将其上升为理论，不断丰富和发展马克思主义的理论宝库，赋予马克思主义以新的时代内涵.</li>\n<li>运用中国人民喜闻乐见的民族语言来阐述马克思主义理论，使其植根于中华优秀传统文化的土壤之中，具有中国特色、中国风格、中国气派。</li>\n</ul>\n</li>\n<li>\n<p>马克思主义中国化时代化的历史进程、理论成果及其关系<br />\n<img data-src=\"/img/polictics/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E4%B8%AD%E5%9B%BD%E5%8C%96%E6%97%B6%E4%BB%A3%E5%8C%96%E7%9A%84%E5%8E%86%E5%8F%B2%E8%BF%9B%E7%A8%8B%E3%80%81%E7%90%86%E8%AE%BA%E6%88%90%E6%9E%9C%E5%8F%8A%E5%85%B6%E5%85%B3%E7%B3%BB.png\" alt=\"马克思主义中国化时代化的历史进程、理论成果及其关系\" /></p>\n</li>\n</ul>\n<h2 id=\"毛泽东思想\"><a class=\"anchor\" href=\"#毛泽东思想\">#</a> 毛泽东思想</h2>\n<h3 id=\"毛泽东思想及其历史地位\"><a class=\"anchor\" href=\"#毛泽东思想及其历史地位\">#</a> 毛泽东思想及其历史地位</h3>\n<ul>\n<li>\n<p>毛泽东思想形成和发展的时代背景：革命与战争</p>\n</li>\n<li>\n<p>毛泽东思想形成和发展的实践基础：革命和建设的实践</p>\n</li>\n<li>\n<p>毛泽东思想形成发展的历史条件</p>\n<ul>\n<li>毛泽东思想是在我国新民主主义革命、社会主义革命和社会主义建设的实践过程中，在总结我国革命和建设正反两方面历史经验的基础上，逐步形成和发展起来的</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>新民主主义革命【1919-1949】：无产阶级领导的、人民大众的，反对帝国主义、封建主义和官僚资本主义的革命</li>\n<li>五四运动标志着新民主主义革命的开端</li>\n<li>护法运动的失败标志着旧民主主义的终结</li>\n<li>新民主主义和旧民主主义区别：旧民主主义革命的领导者是资产阶级，新民主主义领导者是无产阶级，根本标志在于在于领导权掌握在资产阶级还是无产阶级手中</li>\n<li>新民主主义革命性质依然是资产阶级民主主义革命（社会性质、革命对象、革命任务决定），但领导阶级变了，所以叫 “新”</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想形成和发展的过程</p>\n<ul>\n<li>\n<p>毛泽东思想的形成</p>\n<ul>\n<li>毛泽东思想的萌芽：党的创立和大革命时期主要代表作：1925《中国社会各阶级分析》、1927《湖南农民运动考察报告》分析了中国社会各阶级在革命中的地位和作用，明确指出无产阶级领导农民斗争的极端重要性，分析了中国农民斗争的特点，强调无产阶级领导农民斗争在推翻反动政权、建立人民革命政权中的重大作用，从而解决了无产阶级领导权的中心问题，即如何领导农民斗争的问题</li>\n<li>土地革命战争时期，以毛泽东同志为主要代表的中国共产党人，坚待马克思列宁主义必须与中国革命具体实际相结合的基本原则，在探索中国革命新道路的具体实践中，在同党内一度盛行的把马克思主义教条化、把共产国际决议和苏联经验神圣化的错误倾向的斗争中，逐步认识和把握中国革命发展的客观规律，成功地把党的工作重点由城市转人农村，开辟了农村包围城市、武装夺取政权的革命道路。从进攻大城市转为向农村进军，是中国革命具有决定意义的新起点【时期：土地革命战争时期（前期）】</li>\n<li>毛泽东思想的初步形成：土地革命时期，提出并阐述了农村包围城市，武装夺取政权的思想【中国革命新道路的提出】著作:《中国的红色政权为什么能够存在？》《井冈山的斗争》《星星之火，可以燎原》《反对本本主义》等；指明了中国革命的发展规律是：将党的工作重点从城市转入衣村，在农村开展游击战争，进行土地革命，建立红色政权，把落后的农村变为先进的革命根据地；依托这样的农村革命根据地去反对依靠城市进攻农村的强大敌人，进而以农村包围城市，以便在长期斗争中逐步锻炼、积累、发展革命的力量，逐步削弱敌人的力量；直到敌我力量强弱发生转化，再攻占中心城市，夺取全国政权和全国革命的胜利。</li>\n<li>刷题总结\n<ul>\n<li>中国革命首要问题：分清敌友</li>\n<li>中国革命基本问题：农民问题</li>\n<li>中国革命中心问题：无产阶级领导权问题；</li>\n<li>中国革命根本问题：农民土地改革问题</li>\n<li>无产阶级领导权问题： 农民问题</li>\n<li>新民主主义革命理论核心问题：无产阶级的领导权</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想的成熟</p>\n<ul>\n<li>\n<p>毛泽东思想的成熟：系统阐述了新民主主义革命理论 (著作:《实践论》)《矛盾论》《&lt; 共产党人〉发刊词》《中国革命和中国共产党》《新民主主义论》《论联合政府》《改造我们的学习》等</p>\n</li>\n<li>\n<p>毛泽东思想的成熟：系统阐述了新民主主义革命理论 (著作:《实践论》)《矛盾论》《&lt; 共产党人〉发刊词》《中国革命和中国共产党》《新民主主义论》《论联合政府》《改造我们的学习》等；遵义会议至抗日战争时期</p>\n</li>\n<li>\n<p>1945 年党的七大，将毛泽东思想写入党章，作为党的一切工作的指针，标志着把毛泽东思想确立为党必须长期坚持的指导思想</p>\n</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想的继续发展</p>\n<ul>\n<li>时期：<strong>解放战争时期和新中国成立以后</strong></li>\n<li><span class=\"red\">解放战争时期和新中国成立以后</span>，提出人民民主专政理论、社会主义改造和建立社会主义制度的基本方略，提出了要把马克思列宁主义的基本原理同中国革命和建设的具体实际 “第二次结合” 代表著作：《论人民民主专政》《论十大关系》《关于正确处理人民内部矛盾的问题》《在中国共产党第七届中央委员会第二次全体会议上的报告》《在晋绥干部会议上的讲话》\n<ul>\n<li>刷题总结\n<ul>\n<li>马克思主义与中国实际的 “第一次结合” 是指：马克思主义与新民主主义革命结合；第一次结合的理论成果是毛泽东思想</li>\n<li>马克思主义与中国实际的 “第二次结合” 是指：马克思主义与中国社会主义建设相结合；第二次结合理论成果是 “中特理论”</li>\n<li>注意区分马克思主义与中国实际的结合和马克思主义中国化的飞跃；马克思主义中国化第一次历史性飞跃是毛泽东思想；马克思主义中国化新的飞跃是中特理论体系和习新思想</li>\n<li>毛泽东思想不等于毛泽东的思想；第一，毛泽东思想是一个科学体系，毛泽东晚年所犯的错误不属于毛泽东思想的科学体系。第二，毛泽东思想是集体智慧的结晶，毛泽东的思想仅仅是指毛泽东一个人的思想</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想的主要内容和活的灵魂</p>\n<ul>\n<li>\n<p>毛泽东思想的主要内容</p>\n<ul>\n<li>毛泽东思想不是在个别的方面，而是在许多方面以其独创性理论丰富和发展了马克思列宁主义，构成一个博大精深的科学思想体系。它有着坚实的中国化马克思主义哲学思想的理论基础，其精髓就是<span class=\"red\">实事求是</span>。它紧紧围绕着中国革命和建设的主题，提出了一系列相互关联的重要的理论观点，包括：\n<ul>\n<li>新民主主义革命理论；</li>\n<li>社会主义革命和社会主义建设理论；</li>\n<li>革命军队建设和军事战略的理论；</li>\n<li>政策和策略的理论；</li>\n<li>思想政治工作和文化工作的理论（如 “思想政治工作是经济工作和其他一切工作的生命线” ;</li>\n<li>党的建设理论。</li>\n<li>此外，毛泽东思想体系中还有关于国际战略和外交工作、思想方法和工作方法的理论等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想活的灵魂</p>\n<ul>\n<li>\n<p><span class=\"rainbow\">实事求是</span></p>\n<ul>\n<li>实事求是是毛泽东思想的基本点，是毛泽东思想的精髓</li>\n<li>含义：实事求是，就是一切从实际出发，理论联系实际，坚持在实践中检验真理和发展真理。毛泽东指出：“实事” 就是客观存在着的一切事物，“是” 就是客观事物的内部联系，即规律性，“求” 就是我们去研究。”</li>\n<li>重要性：实事求是是马克思主义的根本观点【实践的观点是马克思主义首要的基本的观点】，是中国共产党人认识世界、改造世界的根本要求，是我们党的基本思想方法、工作方法、领导方法。实事求是是党的思想路线的核心，是党的根本思想路线</li>\n</ul>\n</li>\n<li>\n<p><span class=\"rainbow\">群众路线</span></p>\n<ul>\n<li>在漫长又极端艰苦的环境中，我们党不仅在指导思想上坚持一切为了群众、一切依靠群众的群众观点，而且在党的实际工作中形成了一套从群众中来、到群众中去的领导方法和工作方法，这就是群众路线。</li>\n<li>含义：群众路线，就是一切为了群众，一切依靠群众，从群众中来，到群众中去。</li>\n<li>重要性：群众路线就是把马克思列宁主义关于人民群众是历史创造者的原理，系统地运用在党的全部活动中。群众路线是我们党的生命线和根本工作路线，是我们党永葆青春活力和战斗力的重要传家宝</li>\n</ul>\n</li>\n<li>\n<p><span class=\"rainbow\">独立自主</span></p>\n<ul>\n<li>含义：独立自主，就是坚待独立思考，走自己的路，就是坚定不移地维护民族独立、捍卫国家主权，把立足点放在依靠自己力量的基础上，同时积极争取外援，开展国际经济文化交流，学习外国一切对我们有益的先进事物。早在 1930 年，毛泽东在《反对本本主义》一文中就指出：“中国革命斗争的胜利要靠中国同志了解中国情况” 这是独立自主思想的最初的明确表述</li>\n<li>重要性：独立自主是中华民族的优良传统，是中华民族精神之魂，是中国共产党、中华人民共和国立党立国的重要原则，是我们党从中国实际出发、依靠党和人民力量进行革命、建设、改革的必然结论。不论过去、现在和将来，我们都要把国家和民族发展放在自己力址的基点上，增强民族自信心和自信心，坚定不移走自己的路。走自己的路，是党百年奋斗得出的历史结论</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>共产党在中国革命战胜敌人的三大法宝：统一战线，武装斗争，党的建设</li>\n<li>党在领导新民主主义革命过程三大优良作风：\n<ul>\n<li>理论联系实际【放在首位】</li>\n<li>密切联系群众，</li>\n<li>批评与自我批评</li>\n</ul>\n</li>\n<li>两个务必：党的七届二中全会、毛泽东强调必须保持党的作风：谦虚、谨慎、不骄不躁和艰苦奋斗的作风</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想的历史地位</p>\n<ul>\n<li>是马克思主义中国化时代化的第 — 个重大理论成果</li>\n<li>中国革命和建设的科学指南</li>\n<li>中国共产党和中国人民宝贵的精神财富</li>\n</ul>\n</li>\n<li>\n<p>科学评价毛泽东和毛泽东思想</p>\n<ul>\n<li>毛泽东同志是伟大的马克思主义者，伟大的无产阶级革命家、战略家、理论家，是马克思主义中国化的伟大开拓者，是近代以来中国伟大的爱国者和民族英雄，<strong>是党的第一代中央领导集体的核心，是领导中国人民彻底改变自己命运和国家面貌的一代伟人</strong>。</li>\n<li>毛泽东同志毕生最突出最伟大的贡献，就是领导我们党和人民找到了新民主主义革命的正确道路，完成了反帝反封建的任务，建立了中华人民共和国，确立了社会主义基本制度，取得了社会主义建设的基础性成就，并为我们探索建设中国特色社会主义的道路积累了经验和提供了条件，为我们党和人民事业胜利发展、为中华民族阔步赶上时代发展潮流创造了根本前提，奠定了坚实的理论和实践基础。</li>\n<li>不能否认，毛泽东同志在社会主义建设道路的探索中走过弯路，他在晚年特别是在 “文化大革命” 中犯了严重错误。毛泽东同志晚年的错误有其主观因素和个人责任，还在于复杂的国内国际的社会历史原因，应该全面、历史、辩证地看待和分析。<strong>就他的一生来看，功绩是第一位的，错误是第二位的，他的错误在于违反了他自己正确的东西，是一个伟大的革命家、伟大的马克思主义者所犯的错误</strong></li>\n<li><strong>将毛泽东晚年所犯的错误同经过长期历史考验形成为科学理论的毛泽东思想区别开来</strong>，为我们完整准确地理解毛泽东思想、坚持和发展毛泽东思想指明了方向。毛泽东思想具有科学的真理性和强大的生命力，不因时代变迁而褪色，始终是中国共产党人、中华民族和中国人民团结奋斗、开拓前进的强大精神支柱，是我们世世代代要高举的伟大旗帜</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命理论</p>\n</li>\n<li>\n<p>新民主主义革命理论形成的依据</p>\n<ul>\n<li>认清中国国情，是解决中国革命问题的基本前提\n<ul>\n<li><span class=\"rainbow\">近代中国，已经沦为一个半殖民地半封建性质的社会，这是最基本的国情</span>半殖民地半封建社会，既不同于封建社会，也有别于资本主义社会，蕴含着特殊的社会矛盾和革命要求。中国共产党要在这样一个落后的东方大国里领导人民革命并取得胜利，就必须认清这一基本国情，深入了解中国革命的历史特点和时代特征。<span class=\"rainbow\">毛泽东指出：“认清中国社会的性质，就是说，认清中国的国情，乃是认识一切革命问题的基本的根据”</span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>近代中国的国情</p>\n<ul>\n<li>\n<p>社会性质：1840 年鸦片战争前，中国是一个独立的封建国家，随着封建社会内部商品经济的产生和发展，已经孕育着资本主义的萌芽。鸦片战争后，由于西方列强的入侵，由于封建统治的腐败，中国社会发展的轨道改变了，社会性质发生了两个根本性的变化：独立的中国逐步沦为半殖民地的中国（ 一系列不平等条约使中国丧失了许多主权和政治上完全独立的地位，使中国受制于帝国主义列强），封建的中国逐步变为半封建的中国（帝国主义的侵略在一定程度上加速了封建社会自给自足的自然经济的解体，客观上为中国资本主义的发展创造了一定条件，中国已经不再是一个完全的封建社会，也没有发展成资本主义社会，而是变成了半封建社会，仍然是一个落后的农业国）。中国社会的半殖民地半封建化，是随着帝国主义发动侵略战争和迫使清政府签订一系列不平等条约而逐步形成的。</p>\n</li>\n<li>\n<p>主要矛盾：在半殖民地半封建的近代中国的诸多社会矛盾中，占支配地位的主要矛盾是帝国主义和中华民族的矛盾、封建主义和人民大众的矛盾。而<span class=\"label\">帝国主义和中华民族的矛盾，又是各种矛盾中最主要的矛盾</span>。</p>\n</li>\n<li>\n<p>革命的根本任务与性质：近代中国的社会性质和主要矛盾，决定了近代中国革命的根本任务是推翻帝国主义、封建主义和官僚资本主义的统治，从根本上推翻反动腐朽的政治上层建筑，变革阻碍生产力发展的生产关系，为建设富强民主的国家、改善人民的生活、确立人民当家作主的政治制度扫清陷碍，创造必要的前提。也就是说，<span class=\"label\">近代中国的社会性质和主要矛盾，决定了近代中国革命是资产阶级民主革命，不是无产阶级社会主义革命</span></p>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>新民主主义和旧民主主义区别：旧民主主义革命的领导者是资产阶级，新民主主义领导者是无产阶级，根本标志在于在于领导权掌握在资产阶级还是无产阶级手中</li>\n<li>新民主主义革命性质依然是资产阶级民主主义革命（社会性质、革命对象、革命任务决定），但领导阶级变了，所以叫 “新”</li>\n<li>新民主主义革命属于世界无产阶级社会主义革命的一部分，但他的性质是资产阶级民主革命</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>近代中国革命的时代特征</p>\n<ul>\n<li>俄国十月革命是一个具有划时代意义的世界性历史事件，以此为标志，中国资产阶级民主革命的时代背景发生了根本转换。从鸦片战争到辛亥革命期间，中国人民在不同时期和不同程度上进行的反帝反封建的斗争，属于旧式民主主义革命的范畴。<span class=\"red\">1917 年俄国十月社会主义革命的胜利，开辟了世界无产阶级社会主义革命的新纪元</span>，标志着人类历史开始了由资本主义向社会主义转变的进程。</li>\n<li>十月革命建立了一条从西方无产者经过俄国革命到东方被压迫民族的新的反对世界帝国主义的革命战线，使中国的资产阶级民主主义革命，从原来属于旧的世界资产阶级民主主义革命的范畴，属于旧的世界资产阶级民主主义革命的一部分，转变为属于新的资产阶级民主主义革命的范畴，属于世界无产阶级社会主义革命的一部分</li>\n<li>旧民主主义革命转变为新民主主义革命\n<ul>\n<li>近代中国革命以 (1919 年) 五四运动为开端，进入新民主主义革命的崭新阶段。这一转变的条件是：\n<ul>\n<li>第一，主观条件。\n<ul>\n<li>一是在十月革命的影响下，1919 年五四运动之后，中国无产阶级【工人阶级】开始以独立的政治力量从登上历史舞台。</li>\n<li>二是随着马克思主义在中国的传播，马克思主义逐步成为中国革命的指导思想<br />\n第二，客观条件。</li>\n<li>一是旧民主主义革命的失败；</li>\n<li>二是近代中国革命形势的发展；</li>\n<li>三是世界形势的新变化 (1914 年爆发第一次世界大战和 1917 年俄国十月社会主义革命)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>刷题总结\n<ul>\n<li>五四运动标志着新民主主义革命的开端</li>\n<li>护法运动的失败标志着旧民主主义的终结</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命理论的实践基础</p>\n<ul>\n<li>\n<p>旧民主主义革命的失败呼唤新的革命理论</p>\n<ul>\n<li>鸦片战争后，为了挽救空前深重的民族危机和社会危机，无数仁人志士苦苦探索救国救民的道路。但是，事实证明，<span class=\"red\">不触动封建根基的自强运动和改良主义、旧式的农民战争、资产阶级革命派领导的民主革命，以及照搬西方资本主义的其他种种方案，都不能完成反帝反封建的革命任务，都不能为中国找到真正的出路（旧民主主义革命没有为中华民族找到出路）</span>。旧民主主义革命的失败、近代中国革命形势的发展以及世界形势的新变化，迫切期待新的阶级及其政党领导新的革命，呼唤新的革命理论的产生。新民主主义革命理论在近代中国革命的实践中应运而生，它的形成也包含了对旧民主主义革命失败教训的深刻总结</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命的艰辛探索奠定了革命理论形成的实践基础</p>\n<ul>\n<li><span class=\"red\">新民主主义革命理论是在总结革命斗争正反两方面实践经验的基础上形成的，是对中国革命实践经验的概括和总结</span>。试想，没有两次国共合作的实践，怎么可能有关于统一战线的理论；没有建立和巩固农村根据地的实践，怎么可能有关于中国革命道路的理论；没有革命战争的实践，怎么可能有建立人民军队和关于军事战略的理论；没有在领导中国新民主主义革命历程中，党由小到大、由弱到强的实践，怎么可能有党的建设的理论。总之，<span class=\"red\">没有中国革命的实践，没有党对革命实践经验的科学概括和总结，新民主主义革命理论就无法形成和发展。新民主主义革命实践，是新民主主义理论得以形成的实践基础和智慧源泉</span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命的总路线</p>\n<ul>\n<li>新民主主义革命时期，党面临的主要任务是，<span class=\"rainbow\">反对帝国主义、封建主义、官僚资本主义</span>，争取民族独立、人民解放，为实现中华民族伟大复兴创造根本社会条件</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>官僚资本主义：半殖民地半封建国家中的买办的、封建的国家垄断资本主义</li>\n<li>为了抗日民族统一战线的坚持、扩大和巩固，中国共产党制定了 “发展进步势力、争取中间势力、孤立顽固势力” 的策略总方针；中间势力主要是指民族资产阶级、开明绅士和地方实力派</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命总路线的提出</p>\n<ul>\n<li>1939 年，毛泽东在《中国革命和中国共产党》一文中，第一次提出了新民主主义革命的科学概念和总路线的内容，指出 所谓新民主主义革命，就是在无产阶级领导之下的人民大众的反帝反封建的革命</li>\n<li>1948 年，毛泽东在《在晋绥干部会议上的讲话》中完整地表述了总路线的内容，指出：无产阶级领导的，人民大众的，反对帝国主义、封建主义和官僚资本主义的革命，这就是中国的新民主主义的革命，这就是中国共产党在当前历史阶段的总路线和总政策</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>在晋绥干部会议上的讲话》一文，<span class=\"red\">在革命对象中增加了 “官僚资本主义”</span>，因此，完整地论述了新民主主义革命总路线，并强调新民主主义革命总路线既是总路线又是总政策</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命的对象</p>\n<ul>\n<li><strong>分清敌友，这是革命的首要问题</strong></li>\n<li>帝国主义是中国革命的首要对象</li>\n<li>封建主义是中国革命的另一对象</li>\n<li>官僚资本主义也是中国革命的对象，官僚资本主义是依靠帝国主义、勾结封建势力、利用国家政权力量而发展起来的买办的、封建的国家垄断资本主义。\n<ul>\n<li>反对官僚资本主义并非因为它是资本主义，而是因为这种资本主义同外国帝国主义、本国地主阶级和旧式富农密切地结合着，具有买办性、封建性和垄断性。</li>\n</ul>\n</li>\n<li>从总体上说，中国革命的对象是帝国主义、封建主义和官僚资本主义。但是，在不同历史阶段，随着社会主要矛盾的变化，革命的主要对象有所不同:<br />\n<img data-src=\"/img/polictics/%E4%B8%8D%E5%90%8C%E9%98%B6%E6%AE%B5%E9%9D%A9%E5%91%BD%E7%9A%84%E4%B8%BB%E8%A6%81%E5%AF%B9%E8%B1%A1.png\" alt=\"不同阶段革命的主要对象\" /></li>\n</ul>\n</li>\n<li>\n<p>民族革命与民主革命的相互关系</p>\n<ul>\n<li>帝国主义和封建主义相互勾结，残酷地压迫和掠夺中国人民，严重地阻碍着中国社会向前发展。<span class=\"red\">中国革命主要地就是打击这两个敌人，就是对外推翻帝国主义压迫的民族革命和对内推翻封建地主压迫的民主革命</span></li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命的动力</p>\n<ul>\n<li>新民主主义革命的动力包括无产阶级、农民阶级、城市小资产阶级和民族资产阶级<span class=\"rainbow\">四大动力</span>；中国无产阶级、农民、知识分子和其他小资产阶级，乃是决定国家命运的基本势力<br />\n<img data-src=\"/img/polictics/%E6%96%B0%E6%B0%91%E4%B8%BB%E4%B8%BB%E4%B9%89%E9%9D%A9%E5%91%BD%E9%9D%A9%E5%91%BD%E5%9B%9B%E5%A4%A7%E5%8A%A8%E5%8A%9B.png\" alt=\"新民主主义革命革命四大动力\" /></li>\n<li>中国无产阶级是中国革命最基本的动力，无产阶级是中国沦为半殖民地半封建社会过程中，最早出现的一个新的社会阶级，是新的社会生产力的代表，是近代中国最进步的阶级，是中国革命的领导力量。</li>\n<li>农民是中国革命的主力军，其中的贫雇农是无产阶级最可靠的同盟军，而中农是无产阶级可靠的同盟军。农民问题是中国革命的基本问题，新民主主义革命实质上就是中国共产党领导下的农民革命，中国革命战争实质上就是党领导下的农民战争。工人阶级只有与农民阶级结成巩固的联盟，才能形成强大的力量，才能完成反帝反封建的革命任务。工人阶级对农民的领导，是实现革命领导权的基础。当然，没有工人阶级及其政党的领导，农民的革命动力作用也无法得到充分发挥</li>\n<li>城市小资产阶级是中国革命的动力之一：城市小资产阶级包括广大的知识分子、小商人手工业者和自由职业者，同样受帝国主义、封建主义和官僚资本主义的压迫和掠夺，日益走向破产和没落。因此，城市小资产阶级同样是中国革命的动力之一，是无产阶级的可靠同盟者【不要把诚市小资产阶级看作资产阶级的组成部分，中国的资产阶级区分为官僚资产阶级（大资产阶级）与民族资产阶级。城市小资产阶级是劳动者，不是剥削阶级】</li>\n<li>民族资产阶级也是中国革命的动力之一：民族资产阶级是一个带有两面性的阶级。一方面，民族资产阶级既受帝国主义的压迫，又受封建主义的束缚，它同帝国主义和封建主义有矛盾，具有革命的要求，是革命的力量之一。另一方面，由于它在经济上和政治上与帝国主义和封建主义有着千丝万缕的联系，没有彻底的反帝反封建的勇气，即使在革命时，也不愿意同帝国主义完全分裂，并且他们同农村中的地租剥削有密切联系，在革命的关键时刻表现出明显的动摇性。民族资产阶级的这种两重性，是由它的软弱性决定的。因此，民族资产阶级虽然也是新民主主义革命的动力之一，但既不能充当革命的主要力量，更不可能是革命的领导力量。中国共产党对民族资产阶级在政治上争取它，对其动摇性和妥协性进行批评和斗争，采取又联合又斗争的政策，在经济上实行保护民族工商业的政策<br />\n<img data-src=\"/img/polictics/%E6%B0%91%E6%97%8F%E8%B5%84%E4%BA%A7%E9%98%B6%E7%BA%A7.png\" alt=\"民族资产阶级\" /></li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>\n<p>为了抗日民族统一战线的坚持、扩大和巩固，中国共产党制定了 “发展进步势力、争取中间势力、孤立顽固势力” 的策略总方针；</p>\n</li>\n<li>\n<p><span class=\"blue\">中间势力主要是指民族资产阶级、开明绅士和地方实力派</span>；</p>\n</li>\n<li>\n<p><span class=\"red\">进步势力主要是指工人、农民和城市小资产阶级</span><br />\n<img data-src=\"/img/polictics/%E6%96%B0%E6%B0%91%E4%B8%BB%E4%B8%BB%E4%B9%89%E9%9D%A9%E5%91%BD%E7%9A%84%E6%80%BB%E8%B7%AF%E7%BA%BF.png\" alt=\"新民主主义革命的总路线\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命的领导力量</p>\n<ul>\n<li>无产阶级的领导权是中国革命的中心问题，也是新民主主义革命理论的核心问题：区别新旧两种不同范畴的民主主义革命，根本的标志是革命的领导权由无产阶级掌握还是由资产阶级掌握</li>\n<li>无产阶级的领导权是由历史和中国无产阶级的特点决定的：由于帝国主义不允许中国民族资产阶级建立独立的资产阶级共和国，而是要把中国变成它们的殖民地和半殖民地；由于中国民族资产阶级的软弱性和妥协性，它们不愿意也不能够彻底推翻帝国主义和封建势力；由于中国无产阶级的强大和革命的彻底性，领导中国革命取得成功的重任，历史地落到了中国无产阶级及其政党的肩上。新民主主义革命不能由任何别的阶级和任何别的政党充当领导者，只能和必须由无产阶级及其政党充当领导者。无产阶级及其政党的领导，是中国革命取得胜利的根本保证</li>\n<li>无产阶级及其政党对中国革命的领导权不是自然而然得来的，而是在与资产阶级争夺领导权的斗争中实现的\n<ul>\n<li>第一，实现领导权的基本条件。毛泽东指出：领导的阶级和政党，要实现自己对于被领导的阶级、阶层、政党和人民团体的领导，必须具备两个条件：（甲）率领被领导者（同盟者）向着共同敌人作坚决的斗争，并取得胜利；（乙）对被领导者给以物质福利，至少不损害其利益，同时对被领导者给以政治教育。没有这两个条件或两个条件缺一，就不能实现领导。”</li>\n<li>第二，无产阶级及其政党实现对各革命阶级的领导，必须建立以工农联盟为基础的广泛的统一战线，这是实现领导权的关键</li>\n<li>第三，无产阶级在同资产阶级建立统一战线时，必须坚持独立自主的原则，保持党在思想上、政治上和组织上的独立性，实行又联合又斗争的方针，这是坚持领导权的基本策略。</li>\n<li>第四，无产阶级要保待在民主革命中的领导权，就必须建立和发展人民的革命武装力量，建立一支无产阶级领导的以农民为主体的强大的革命武装，这是保证领导权的坚强支柱。</li>\n<li>第五，加强无产阶级政党的建设，是实现领导权的根本保证</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>新民主主义革命的性质和前途</p>\n<ul>\n<li>社会性质和革命任务决定革命性质\n<ul>\n<li>近代中国半殖民地半封建社会的性质和中国革命的历史任务，决定了新民主主义革命的性质不是无产阶级社会主义革命，而是资产阶级民主主义革命。但是，中国的资产阶级民主主义革命已不是旧式的、一般的资产阶级民主主义的革命，而是新的民主主义革命</li>\n</ul>\n</li>\n<li>新旧民主主义革命的区别\n<ul>\n<li>新民主主义革命与旧民主主义革命相比有其新的内容和特点，集中表现在新民主主义革命处于世界无产阶级社会主义革命的时代，是世界无产阶级社会主义革命的一部分；革命的领导力量是中同无产阶级及其先锋队 —— 中国共产党（这是与旧民主主义革命的根本区别）；革命的指导思想是马克思列宁主义；革命的前途是社会主义而不是资本主义。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"新民主主义革命理论\"><a class=\"anchor\" href=\"#新民主主义革命理论\">#</a> 新民主主义革命理论</h3>\n<div class=\"note primary\">\n<p>新民主主义革命理论形成的依据</p>\n</div>\n<ul>\n<li>\n<p>国情：半殖民地半封建社会</p>\n</li>\n<li>\n<p>主要矛盾：帝国主义和中华名族的矛盾、封建主义和人民大众的矛盾</p>\n</li>\n<li>\n<p>根本任务：推翻 &quot;三座大山&quot;</p>\n</li>\n<li>\n<p>革命性质：资产阶级民主革命</p>\n</li>\n<li>\n<p>总路线：无产阶级领导的，人民大众的，反帝，反封建，反官僚资本主义的革命</p>\n</li>\n<li>\n<p>基本纲领：新民主主义的政治、经济、文化纲领</p>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>新民主主义革命理论的实践基础</p>\n</div>\n<ul>\n<li>\n<p>旧民主主义革命的失败呼唤新的革命理论的诞生</p>\n</li>\n<li>\n<p>新民主主义革命的实践探索奠定了革命理论形成的基础</p>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>新民主主义革命的总路线和基本纲领</p>\n</div>\n<ul>\n<li>新民主主义革命的总路线\n<ol>\n<li>新民主主义革命的对象</li>\n</ol>\n<ul>\n<li>帝国主义</li>\n<li>封建主义</li>\n<li>官僚资本主义</li>\n<li>不同时期的不同革命对象</li>\n</ul>\n<ol start=\"2\">\n<li>新民主主义革命的动力</li>\n</ol>\n<ul>\n<li>无产阶级</li>\n<li>农名阶级</li>\n<li>城市小资产阶级</li>\n<li>民族资产阶级</li>\n</ul>\n<ol start=\"3\">\n<li>新民主主义革命的领导</li>\n</ol>\n<ul>\n<li>\n<p>无产阶级领导权的重要性</p>\n</li>\n<li>\n<p>无产阶级的特点和优点</p>\n</li>\n<li>\n<p>无产阶级领导权的实现</p>\n<ol>\n<li>条件：率领被领导者斗争并取得胜利；给被领导者以物质福利，并进行政治教育</li>\n<li>关键：建立以工农联盟为基础的广泛的统一战线</li>\n<li>基本策略：保持党在思想上，政治上和组织上的独立性，实行又联合又斗争的方针</li>\n<li>坚强支柱：革命武装力量</li>\n<li>根本保证：党的建设</li>\n</ol>\n</li>\n</ul>\n<ol start=\"4\">\n<li>新民主主义革命的性质和前途</li>\n</ol>\n<ul>\n<li>新民主主义革命与旧民主主义革命的比较</li>\n<li>新民主主义革命与社会主义革命的比较</li>\n<li>中国革命分 &quot;两步走&quot;</li>\n<li>&quot;左&quot; 倾和右倾两种错误思想</li>\n</ul>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>新民主主义的基本纲领</p>\n</div>\n<ul>\n<li>\n<p>新民主主义的政治纲领</p>\n</li>\n<li>\n<p>新民主主义的经济纲领</p>\n</li>\n<li>\n<p>新民主主义的文化纲领 （民族的，科学的，人民大众的）</p>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>新民主主义革命的道路和基本经验</p>\n</div>\n<ol>\n<li>新民主主义革命道路的提出</li>\n</ol>\n<ul>\n<li>道路理论的初步形成：秋收起义失败后</li>\n<li>道理的最终确立：党的六届六中全会上明确提出</li>\n</ul>\n<ol start=\"2\">\n<li>新民主主义革命道路形成的必然性</li>\n</ol>\n<ul>\n<li>必然性：中国革命的主要斗争形式只能是<span class=\"rainbow\">武装斗争</span></li>\n<li>可能性: <span class=\"rainbow\">群众基础好</span></li>\n</ul>\n<ol start=\"3\">\n<li>新民主主义革命道路的内容及意义</li>\n</ol>\n<ul>\n<li>怎样走条道路</li>\n<li>走这条道路的意义</li>\n</ul>\n<div class=\"note primary\">\n<p>新民主主义革命的三大法宝</p>\n</div>\n<ul>\n<li>统一战线\n<ul>\n<li>第一次国共合作统一战线</li>\n<li>工农民主统一战线</li>\n<li>抗日民族统一战线</li>\n<li>人民民主统一战线</li>\n</ul>\n</li>\n<li>武装斗争\n<ul>\n<li>坚持党对军队的绝对领导</li>\n<li>建设全心全意为人民服务的人民军队</li>\n<li>坚持正确的战略战术原则</li>\n</ul>\n</li>\n<li>党的建设\n<ul>\n<li>思想建设</li>\n<li>组织建设</li>\n<li>作风建设</li>\n</ul>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>新民主主义革命理论的意义</p>\n</div>\n<ul>\n<li>理论上：极大地丰富了马克思主义的理论宝库</li>\n<li>实践上：开创了中国历史的新纪元</li>\n<li>国际上：增强了世界人民争取和平的力量</li>\n</ul>\n<h3 id=\"社会主义改造理论\"><a class=\"anchor\" href=\"#社会主义改造理论\">#</a> 社会主义改造理论</h3>\n<div class=\"note primary\">\n<p>从新民主主义到社会主义的转变</p>\n</div>\n<ul>\n<li>新民主主义社会的性质和特点\n<ul>\n<li>经济方面</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">性质</th>\n<th style=\"text-align:center\">五种经济成分</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">社会主义性质</td>\n<td style=\"text-align:center\">国营经济 (领导地位)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\" rowspan=\"2\">过度性质 (半社会主义性质)</td>\n<td style=\"text-align:center\">合作社经济</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">国家资本主义经济</td>\n</tr>\n<tr>\n<td style=\"text-align:center\" rowspan=\"2\">非社会主义性质</td>\n<td style=\"text-align:center\">农民和手工业者的个体经济 (绝对优势)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">私人资本主义经济</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>政治方面\n<ul>\n<li>既有剥削工人的一面，又有接受工人阶级及其政党领导的一面。</li>\n</ul>\n</li>\n<li>新民主主义社会的性质：新民主主义社会是属于社会主义体系的</li>\n</ul>\n<div class=\"note primary\">\n<p>党在过渡时期的总路线及其理论依据</p>\n</div>\n<ol>\n<li>党在过渡时期的总路线提出</li>\n</ol>\n<ul>\n<li>主要内容 &quot;一化三改&quot;:\n<ul>\n<li>一化：社会主义工业化，</li>\n<li>三改：个体农业、手工业和资本主义工商业的社会主义改造</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>党在过渡时期的总路线的理论依据</li>\n</ol>\n<div class=\"note primary\">\n<p>社会主义改造道路和历史经验</p>\n</div>\n<ul>\n<li>适合中国特点的社会主义改造道路\n<ul>\n<li>农业的社会主义改造\n<ul>\n<li>互助组</li>\n<li>初级农业生产合作社</li>\n<li>高级社</li>\n</ul>\n</li>\n<li>手工业的社会主义改造\n<ul>\n<li>手工业供销小组</li>\n<li>手工业供销合作社</li>\n<li>手工业生产合作社</li>\n</ul>\n</li>\n<li>资本主义工商业的社会主义改造\n<ul>\n<li>初级形式的国家资本主义</li>\n<li>个别企业的公私合营</li>\n<li>全行业的公私合营</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>社会主义改造的历史经验</p>\n</div>\n<ul>\n<li>坚持社会主义工业化建设与社会主义改造并举</li>\n<li>采取积极引导、逐步过渡的方式</li>\n<li>用和平方法进行改造</li>\n</ul>\n<div class=\"note primary\">\n<p>社会主义基本制度在中国的确立</p>\n</div>\n<ul>\n<li>经济基础</li>\n<li>上层建筑</li>\n<li>阶级关系</li>\n</ul>\n<div class=\"note primary\">\n<p>确立社会主义基本制度的重大意义</p>\n</div>\n<ol>\n<li>社会主义基本制度的确立是中国历史上最深刻最伟大的社会变革，为当代中国一切发展进步奠定了制度基础，也为中国特色社会主义制度的创新和发展提供了重要前提。</li>\n<li>社会主义基本制度的确立，极大地提高了工人阶级和广大劳动人民的积极性、创造性，极大地促进了我国社会生产力的发展，初步显示了社会主义的优越性。</li>\n<li>社会主义基本制度的确立，使广大劳动人民真正成为国家的主人。</li>\n<li>中国社会主义基本制度的确立，使占世界人口 1/4 的东方大国进入了社会主义社会，这是世界社会主义运动史上又一个历史性的伟大胜利。</li>\n<li>社会主义基本制度的确立，是以毛泽东为主要代表的中国共产党人对一个脱胎于半殖民地半封建的东方大国如何进行社会主义革命问题的系统回答和正面解决，是马克思列宁主义关于社会主义关于社会主义革命理论在中国的正确运用和创造性发展的结果。<span class=\"red\">它不仅再次证明了马克思列宁主义的真理性，而且以其独创性的理论原则和经验总结丰富和发展了马克思主义的科学社会主义理论</span>。</li>\n</ol>\n<h3 id=\"社会主义建设道路初步探索的理论成果\"><a class=\"anchor\" href=\"#社会主义建设道路初步探索的理论成果\">#</a> 社会主义建设道路初步探索的理论成果</h3>\n<div class=\"note primary\">\n<p>初步探索的重要理论成果</p>\n</div>\n<ul>\n<li>调动一切积极因素为社会主义事业服务\n<ol>\n<li>必须坚持中国共产党的领导</li>\n<li>必须发展社会主义民主政治</li>\n<li>有一个如何认识社会主义发展阶段和社会主义建设规律的问题</li>\n</ol>\n</li>\n<li>正确认识和处理社会主义社会矛盾的思想\n<ol>\n<li>关于社会主义社会的基本矛盾</li>\n</ol>\n<ul>\n<li>生产关系和生产力的矛盾</li>\n<li>上层建筑和经济基础的矛盾</li>\n</ul>\n<ol start=\"2\">\n<li>关于我国社会的主要矛盾和根本任务</li>\n</ol>\n<ul>\n<li>先进的工业国同落后的农业国的现实之间的矛盾</li>\n</ul>\n<ol start=\"3\">\n<li>关于社会主义社会存在两类不同性质社会矛盾的理论</li>\n</ol>\n<ul>\n<li>敌我矛盾</li>\n<li>人民内部矛盾</li>\n</ul>\n<ol start=\"4\">\n<li>关于正确处理两类不同性质社会矛盾的基本方法</li>\n</ol>\n<ul>\n<li>敌我矛盾 (采用专政的方法)</li>\n<li>人民内部矛盾 (民主的方法)</li>\n</ul>\n<ol start=\"5\">\n<li>关于正确处理人民内部矛盾的方针</li>\n</ol>\n<ul>\n<li>团结 - 批评 - 团结</li>\n</ul>\n<ol start=\"6\">\n<li>关于区分两类不同性质矛盾和正确处理人民内部矛盾的目的和意义</li>\n</ol>\n<ul>\n<li>毛泽东强调，关于正确处理人民内部矛盾的问题是社会主义国家政治生活的主题。</li>\n</ul>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>走中国工业化道路的思想</p>\n</div>\n<ul>\n<li>中国工业化道路的问题</li>\n<li>走中国工业化道路的要求 (六个必须)\n<ol>\n<li>必须明确战略目的和战略步骤</li>\n<li>必须采取正确的经济建设方针</li>\n<li>必须发展科学技术和文化教育</li>\n<li>必须重视知识分子工作</li>\n<li>必须调整和完善所有制结构</li>\n<li>必须积极探索适合我国情况的经济体制和运行机制</li>\n</ol>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>初步探索的意义和经验教训</p>\n</div>\n<ul>\n<li>初步探索的意义\n<ol>\n<li>巩固和发展了我国社会主义制度</li>\n<li>为开创中国特色社会主义提供了宝贵经验、理论准备、物质基础</li>\n<li>丰富了科学社会主义的理论和实践</li>\n</ol>\n</li>\n<li>初步探索的经验教训\n<ol>\n<li>必须把马克思主义与中国实际相结合，探索符合中国特点的社会主义建设道路</li>\n<li>必须正确认识社会主义社会的主要矛盾和根本任务，集中力量发展生产力</li>\n<li>必须从实际出发进行社会主义建设，建设规模和速度要和国力相适应，不能急于求成。</li>\n<li>必须发展社会主义民主，健全社会主义法制</li>\n<li>必须坚持党的民主集中制和集体领导制度，加强执政党建设</li>\n<li>必须坚持对外开放、借鉴和吸收人类文明成果建设社会主义，不能关起门来搞建设。</li>\n</ol>\n</li>\n<li>改革开放前后的两个历史时期及其关系\n<ul>\n<li>改革开放前</li>\n<li>改革开放后</li>\n<li>两者相互联系却又有重大区别，但本质上都是我们党领导人民进行社会主义建设的实践探索。后者是对前者一个时期的坚持、改革、发展。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"中国特色社会主义理论体系\"><a class=\"anchor\" href=\"#中国特色社会主义理论体系\">#</a> 中国特色社会主义理论体系</h2>\n<h3 id=\"邓小平理论\"><a class=\"anchor\" href=\"#邓小平理论\">#</a> 邓小平理论</h3>\n<h4 id=\"邓小平理论的形成\"><a class=\"anchor\" href=\"#邓小平理论的形成\">#</a> 邓小平理论的形成</h4>\n<div class=\"note primary\">\n<p>邓小平理论的形成条件</p>\n</div>\n<ul>\n<li>时代背景：和平与发展成为时代主题</li>\n<li>历史根据：社会主义建设的经验教训</li>\n<li>现实依据：改革开放和现代化建设的时间</li>\n</ul>\n<div class=\"note primary\">\n<p>邓小平理论的形成过程</p>\n</div>\n<ol>\n<li>党的十一届三中全会：重新确立解放思想、实事求是的思想路线</li>\n<li>党的十二大：&quot;中国特色社会主义&quot; 成为理论和实践创新的主题</li>\n<li>党的十三大：第一次对中国特色社会主义理论进行系统概括，邓小平理论轮廓形成</li>\n<li>南方谈话：邓小平理论走向成熟</li>\n<li>党的十四大：高度评价了邓小平对创新中国特色社会主义理论的贡献</li>\n<li>党的十五大：正式命名 &quot;邓小平理论&quot; 并写入党章</li>\n</ol>\n<ul>\n<li>重要会议内容 (1978 - 1997)</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">重要会议</th>\n<th style=\"text-align:left\">考点内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\" rowspan=\"3\">党的十一届三中全会</td>\n<td style=\"text-align:left\">(1) 彻底否定 &quot;两个凡是&quot; 的错误方针，果断结束 “以阶级斗争为纲” 的口号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(2) 高度评价关于真理标准问题的讨论，重新确立了党的思想路线、政治路线、组织路线</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(3) 实现党和国家工作中心战略转移，开启了改革开放和社会主义现代化建设新时期，实现了新中国成立以来党的历史上最具有深远意义的伟大转折</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:center\" rowspan=\"3\">党的十一届六中全会</td>\n<td style=\"text-align:left\">(1) 科学评价了毛泽东和毛泽东思想</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(2) 提出了毛泽东思想的活的灵魂是 “实事求是、群众路线、独立自主”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(3) 第一次使用 “社会主义初级阶段” 的提法</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:center\">党的十二大</td>\n<td style=\"text-align:left\">(1) “中国特色社会主义” 成为我们党的全部理论和实践创新的主题</td>\n</tr>\n<tr>\n<td style=\"text-align:center\" rowspan=\"4\">党的十三大</td>\n<td style=\"text-align:left\">(1) 第一次对 &quot;社会主义初级阶段&quot; 理论作了系统阐述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(2) 提出了社会主义初级阶段的基本路线 “一个中心，两个基本点”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(3) 第一次对中国特色社会主义理论做了系统概括</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(4) 邓小平理论轮廓形成</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:center\" rowspan=\"2\">党的十四大</td>\n<td style=\"text-align:left\">(1) 明确了建立社会主义市场经济体制的改革目标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(2) 高度评价了邓小平对创新中国特色社会主义理论党的贡献</td>\n</tr>\n<tr>\n<td style=\"text-align:center\" rowspan=\"2\">党的十五大</td>\n<td style=\"text-align:left\">(1) 把邓小平理论写入党章</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(2) 指出 &quot;公有制为主体、多种所有制经济共同发展&quot; 是我国社会主义初级阶段的一项基本经济制度</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"邓小平理论的基本问题和主要内容\"><a class=\"anchor\" href=\"#邓小平理论的基本问题和主要内容\">#</a> 邓小平理论的基本问题和主要内容</h4>\n<div class=\"note primary\">\n<p>邓小平理论回答的基本问题</p>\n</div>\n<ol>\n<li>邓小平理论首要的基本理论问题：什么是社会主义、怎样建设社会主义</li>\n<li>社会主义的本质</li>\n</ol>\n<ul>\n<li>解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕。</li>\n</ul>\n<ol start=\"3\">\n<li>两条根本原则</li>\n</ol>\n<ul>\n<li>以社会主义公有制经济为主体</li>\n<li>共同富裕</li>\n</ul>\n<div class=\"note primary\">\n<p>邓小平理论的主要内容</p>\n</div>\n<ul>\n<li>解放思想、实事求是的思想路线</li>\n<li>社会主义初级阶段理论</li>\n<li>党的基本路线</li>\n<li>社会主义根本任务的理论</li>\n<li>&quot;三步走&quot; 战略</li>\n<li>改革开放理论</li>\n<li>社会主义市场经济理论</li>\n<li>两手抓，两手都要硬</li>\n<li>一国两制\n<ul>\n<li>和平统一，一国两制</li>\n<li>两制并存</li>\n<li>高度自治</li>\n</ul>\n</li>\n<li>中国问题的关键在于党</li>\n</ul>\n<h4 id=\"邓小平理论的历史地位\"><a class=\"anchor\" href=\"#邓小平理论的历史地位\">#</a> 邓小平理论的历史地位</h4>\n<ul>\n<li>马克思列宁主义、毛泽东思想的继承和发展</li>\n<li>中国特色社会主义理论体系的开篇之作</li>\n<li>改革开放和社会主义现代化建设的科学指南</li>\n</ul>\n<h3 id=\"三个代表重要思想\"><a class=\"anchor\" href=\"#三个代表重要思想\">#</a> 三个代表重要思想</h3>\n<h4 id=\"三个代表重要思想的形成\"><a class=\"anchor\" href=\"#三个代表重要思想的形成\">#</a> 三个代表重要思想的形成</h4>\n<div class=\"note primary\">\n<p>三个代表重要思想的形成条件</p>\n</div>\n<ul>\n<li>“三个代表” 重要思想是在对冷战结束后国际局势科学判断的基础上形成的</li>\n<li>“三个代表” 重要思想是在科学判断党的历史方位和总结历史经验的基础上提出来的</li>\n<li>“三个代表” 重要思想是在建设中国特色社会主义伟大实践的基础上形成的。</li>\n</ul>\n<div class=\"note primary\">\n<p>三个代表重要思想的形成过程</p>\n</div>\n<ul>\n<li>首次阐述 2000 年 2 月 25 日</li>\n<li>回答主题 2000 年 6 月 9 日</li>\n<li>全面阐述 2001 年 7 月 1 日</li>\n<li>写入党章 2002 年党的十六大</li>\n</ul>\n<h4 id=\"三个代表-重要思想的核心观点和主要内容\"><a class=\"anchor\" href=\"#三个代表-重要思想的核心观点和主要内容\">#</a> “三个代表” 重要思想的核心观点和主要内容</h4>\n<div class=\"note primary\">\n<p>“三个代表” 重要思想的核心观点</p>\n</div>\n<ul>\n<li>始终代表中国<span class=\"red\">先进生产力的发展要求</span></li>\n<li>始终代表中国<span class=\"red\">先进文化的前进方向</span></li>\n<li>始终代表中国<span class=\"red\">最广大人民的根本利益</span></li>\n</ul>\n<div class=\"note primary\">\n<p>“三个代表” 重要思想的主要内容</p>\n</div>\n<ul>\n<li>\n<p>发展是党执政兴国的第一要务</p>\n</li>\n<li>\n<p>建立社会主义市场经济体制</p>\n<ul>\n<li>所有制</li>\n<li>分配至</li>\n<li>建立和完善社会保障体系</li>\n</ul>\n</li>\n<li>\n<p>全面建设小康社会</p>\n</li>\n<li>\n<p>建设社会主义政治文明</p>\n<ul>\n<li>依法治国</li>\n</ul>\n</li>\n<li>\n<p>推进党的建设新的伟大工程</p>\n</li>\n</ul>\n<h4 id=\"三个代表-重要思想的历史地位\"><a class=\"anchor\" href=\"#三个代表-重要思想的历史地位\">#</a> “三个代表” 重要思想的历史地位</h4>\n<ul>\n<li>中国特色社会主义理论体系的丰富发展</li>\n<li>加强和改进党的建设，推进中国特色社会主义事业的强大理论武器</li>\n</ul>\n<h3 id=\"科学发展观\"><a class=\"anchor\" href=\"#科学发展观\">#</a> 科学发展观</h3>\n<h4 id=\"科学发展观的形成\"><a class=\"anchor\" href=\"#科学发展观的形成\">#</a> 科学发展观的形成</h4>\n<div class=\"note primary\">\n<p>科学发展观的形成条件</p>\n</div>\n<ul>\n<li>现实依据：社会主义初级阶段基本国情和新的阶段性特征</li>\n<li>实践基础：改革开放以来的实践经验</li>\n<li>时代背景：当今世界发展大势、国外发展的经验教训</li>\n</ul>\n<div class=\"note primary\">\n<p>科学发展观的形成过程</p>\n</div>\n<ul>\n<li>第一次提出：党的十六届三中全会</li>\n<li>走向成熟：党的十七大</li>\n<li>发展完善：党的十八大</li>\n</ul>\n<h4 id=\"科学发展观的科学内涵和主要内容\"><a class=\"anchor\" href=\"#科学发展观的科学内涵和主要内容\">#</a> 科学发展观的科学内涵和主要内容</h4>\n<ul>\n<li>推动经济社会发展是科学发展观的第一要义</li>\n<li>以人为本是科学发展观的核心立场</li>\n<li>全面协调可持续是科学发展观的基本要求</li>\n<li>统筹兼顾是科学发展观的根本方法</li>\n</ul>\n<div class=\"note primary\">\n<p>科学发展观的主要内容</p>\n</div>\n<ol>\n<li>加快转变经济发展形势</li>\n<li>发展社会主义民主政治</li>\n<li>推进社会主义文化强国建设</li>\n<li>构建社会主义和谐社会</li>\n<li>推进生态文明建设</li>\n<li>全面提高党的建设科学化水平</li>\n</ol>\n<h4 id=\"科学发展观的历史地位\"><a class=\"anchor\" href=\"#科学发展观的历史地位\">#</a> 科学发展观的历史地位</h4>\n<div class=\"note primary\">\n<p>科学发展观的重要意义</p>\n</div>\n<ul>\n<li>中国特色社会主义理论体系的接续发展</li>\n<li>全面建设小康社会、加快推进社会主义现代化的根本指针</li>\n</ul>\n<h2 id=\"习近平新时代中国特色社会主义思想\"><a class=\"anchor\" href=\"#习近平新时代中国特色社会主义思想\">#</a> 习近平新时代中国特色社会主义思想</h2>\n<h3 id=\"习近平新时代中国特色社会主义思想及其历史地位\"><a class=\"anchor\" href=\"#习近平新时代中国特色社会主义思想及其历史地位\">#</a> 习近平新时代中国特色社会主义思想及其历史地位</h3>\n<h4 id=\"习近平新时代中国特色社会主义思想创立的社会历史条件\"><a class=\"anchor\" href=\"#习近平新时代中国特色社会主义思想创立的社会历史条件\">#</a> 习近平新时代中国特色社会主义思想创立的社会历史条件</h4>\n<div class=\"note primary\">\n<p>中国特色社会主义进入新时代</p>\n</div>\n<ul>\n<li>党和人民事业具有重大现实意义和深远历史意义的三件大事\n<ul>\n<li>迎来了中国共产党成立一百周年</li>\n<li>中国特色社会主义进入新时代</li>\n<li>完成脱贫攻坚、全面建成小康社会的历史任务</li>\n</ul>\n</li>\n<li>中国特色社会主义进入新时代是我国社会主要矛盾转化的必然结果\n<ul>\n<li>我国社会生产力水平总体上显著提高，很多方面进入世界前列</li>\n<li>人民生活水平显著提高，对美好生活的向往更加强烈，不仅对物质文化生活提出了更高要求，而且在民主、法治、正义、安全、环境等方面的要求日益增长</li>\n<li>发展的不平衡不充分的问题</li>\n<li>对党和国家工作提出的新要求</li>\n<li>两个没有变</li>\n</ul>\n</li>\n<li>中国特色社会主义进入新时代具有丰富内涵和深远意蕴 (&quot;五个是&quot;)</li>\n<li>中国特色社会主义进入新时代的重大意义 (&quot;三个意味着&quot;)</li>\n</ul>\n<div class=\"note primary\">\n<p>世界百年未有之大变局</p>\n</div>\n<ul>\n<li>和平与发展仍然是时代主题，中国日益成为世界格局演变的主要推动力量</li>\n</ul>\n<div class=\"note primary\">\n<p>中华民族伟大复兴正处于关键时期</p>\n</div>\n<ul>\n<li>中国共产党是实现中华民族伟大复兴的根本保证</li>\n<li>中华优秀传统文化是中国民族的根和魂，是中国特色社会主义植根的文化沃土</li>\n</ul>\n<h4 id=\"习近平新时代中国特色社会主义思想的科学体系\"><a class=\"anchor\" href=\"#习近平新时代中国特色社会主义思想的科学体系\">#</a> 习近平新时代中国特色社会主义思想的科学体系</h4>\n<div class=\"note primary\">\n<p>习近平新时代中国特色社会主义思想的核心要义</p>\n</div>\n<ul>\n<li>坚持和发展中国特色社会主义，这也是改革开放以来我们党全部理论和实践的鲜明主题。</li>\n</ul>\n<div class=\"note primary\">\n<p>习近平新时代中国特色社会主义思想的主要内容</p>\n</div>\n<ul>\n<li>&quot;十个明确&quot;</li>\n<li>&quot;十四个坚持&quot;</li>\n<li>&quot;十三个方面成就&quot;</li>\n</ul>\n<div class=\"note primary\">\n<p>习近平新时代中国特色社会主义思想的世界观和方法论</p>\n</div>\n<ul>\n<li>必须坚持<span class=\"rainbow\">人民至上</span></li>\n<li>必须坚持<span class=\"rainbow\">自信自立</span></li>\n<li>必须坚持<span class=\"rainbow\">守正创新</span></li>\n<li>必须坚持<span class=\"rainbow\">问题导向</span></li>\n<li>必须坚持<span class=\"rainbow\">系统观念</span></li>\n<li>必须坚持<span class=\"rainbow\">胸怀天下</span></li>\n</ul>\n<h4 id=\"习近平新时代中国特色社会主义思想的历史地位\"><a class=\"anchor\" href=\"#习近平新时代中国特色社会主义思想的历史地位\">#</a> 习近平新时代中国特色社会主义思想的历史地位</h4>\n<div class=\"note primary\">\n<p>习近平新时代中国特色社会主义思想的重要意义</p>\n</div>\n<ul>\n<li>当代中国马克思主义，21 世纪马克思主义</li>\n<li>实现中华民族伟大复兴的行动指南</li>\n<li>建设美好世界的中国智慧和中国方案</li>\n</ul>\n<h3 id=\"坚持和发展中国特色社会主义的总任务\"><a class=\"anchor\" href=\"#坚持和发展中国特色社会主义的总任务\">#</a> 坚持和发展中国特色社会主义的总任务</h3>\n<h4 id=\"实现中华民族伟大复兴的中国梦\"><a class=\"anchor\" href=\"#实现中华民族伟大复兴的中国梦\">#</a> 实现中华民族伟大复兴的中国梦</h4>\n<div class=\"note primary\">\n<p>实现中华民族伟大复兴的中国梦</p>\n</div>\n<ul>\n<li>中国梦的提出</li>\n<li>中国梦的科学内涵\n<ul>\n<li>中国梦的本质：国家富强、民族振兴、人民幸福</li>\n</ul>\n</li>\n<li>中国梦的伟大意义</li>\n<li>奋力实现中国梦\n<ul>\n<li>怎样才能实现中国梦：走中国道路、弘扬中国精神、凝聚中国力量</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"以中国式现代化全面推进中华民族伟大复兴\"><a class=\"anchor\" href=\"#以中国式现代化全面推进中华民族伟大复兴\">#</a> 以中国式现代化全面推进中华民族伟大复兴</h4>\n<div class=\"note primary\">\n<p>中国共产党的中心任务</p>\n</div>\n<ul>\n<li>中国式现代化的中国特色</li>\n<li>中国式现代化的本质要求</li>\n<li>推进中国式现代化必须牢牢把握的重大原则\n<ul>\n<li><span class=\"rainbow\">领导力量</span>，坚持和加强党的全面领导</li>\n<li><span class=\"rainbow\">方向道路</span>，坚持中国特色社会主义道路</li>\n<li><span class=\"rainbow\">价值立场</span>，坚持以人民为中心的发展思想</li>\n<li><span class=\"rainbow\">根本动力</span>，坚持深化改革开放</li>\n<li><span class=\"rainbow\">精神状态</span>，坚持发扬斗争精神</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"五位一体-总体布局\"><a class=\"anchor\" href=\"#五位一体-总体布局\">#</a> 五位一体 总体布局</h3>\n<h3 id=\"四个全面-战略布局\"><a class=\"anchor\" href=\"#四个全面-战略布局\">#</a> 四个全面 战略布局</h3>\n<h3 id=\"实现中华民族伟大复兴的重要保障\"><a class=\"anchor\" href=\"#实现中华民族伟大复兴的重要保障\">#</a> 实现中华民族伟大复兴的重要保障</h3>\n<h3 id=\"中国特色大国外交\"><a class=\"anchor\" href=\"#中国特色大国外交\">#</a> 中国特色大国外交</h3>\n<h3 id=\"坚持和加强党的领导\"><a class=\"anchor\" href=\"#坚持和加强党的领导\">#</a> 坚持和加强党的领导</h3>\n",
            "tags": [
                "记录"
            ]
        },
        {
            "id": "https://hk2012.github.io/2023/09/09/doc/PubmedPolictics3/",
            "url": "https://hk2012.github.io/2023/09/09/doc/PubmedPolictics3/",
            "title": "2024考研政治 (中国近代史纲要)",
            "date_published": "2023-09-09T07:36:00.000Z",
            "content_html": "<h1 id=\"中国近代史纲要\"><a class=\"anchor\" href=\"#中国近代史纲要\">#</a> 中国近代史纲要</h1>\n<h2 id=\"旧民主主义革命时期\"><a class=\"anchor\" href=\"#旧民主主义革命时期\">#</a> 旧民主主义革命时期</h2>\n<h3 id=\"进入近代后中华民族的磨难与抗争\"><a class=\"anchor\" href=\"#进入近代后中华民族的磨难与抗争\">#</a> 进入近代后中华民族的磨难与抗争</h3>\n<div class=\"note info\">\n<p>鸦片战争前后的中国与世界</p>\n</div>\n<ul>\n<li>\n<p>中国封建社会的衰落</p>\n</li>\n<li>\n<p>世界资本主义的发展和殖民扩张</p>\n</li>\n<li>\n<p>鸦片战争的爆发</p>\n</li>\n<li>\n<p>近代中国社会的半殖民地半封建性质</p>\n</li>\n<li>\n<p>近代中国的主要矛盾和历史任务</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>西方列强对中国的侵略</p>\n</div>\n<ul>\n<li>\n<p>军事侵略</p>\n</li>\n<li>\n<p>政治控制</p>\n</li>\n<li>\n<p>经济掠夺</p>\n</li>\n<li>\n<p>文化渗透</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>反抗外国武装侵略的斗争</p>\n</div>\n<ul>\n<li>\n<p>抵御外来侵略的斗争历程</p>\n</li>\n<li>\n<p>义和团运动</p>\n</li>\n<li>\n<p>列强瓜分中国图谋的破产</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>反侵略战争的失败与民族意识的觉醒</p>\n</div>\n<ul>\n<li>\n<p>反侵略战争的失败及其原因</p>\n</li>\n<li>\n<p>民族意识的觉醒</p>\n</li>\n</ul>\n<h3 id=\"不同社会力量对国家出路的早期探索\"><a class=\"anchor\" href=\"#不同社会力量对国家出路的早期探索\">#</a> 不同社会力量对国家出路的早期探索</h3>\n<div class=\"note info\">\n<p>太平天国运动的起落</p>\n</div>\n<ul>\n<li>\n<p>太平天国农民战争</p>\n</li>\n<li>\n<p>太平天国农民战争的意义和局限</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>洋务运动的兴衰</p>\n</div>\n<ul>\n<li>\n<p>洋务事业的兴办</p>\n</li>\n<li>\n<p>洋务运动的历史作用及其失败原因</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>戊戌维新运动的兴起和夭折</p>\n</div>\n<ul>\n<li>\n<p>戊戌维新运动的开展</p>\n</li>\n<li>\n<p>戊戌维新运动的历史意义、失败原因和教训</p>\n</li>\n</ul>\n<h3 id=\"辛亥革命与君主专制制度的终结\"><a class=\"anchor\" href=\"#辛亥革命与君主专制制度的终结\">#</a> 辛亥革命与君主专制制度的终结</h3>\n<div class=\"note info\">\n<p>举起近代民族民主革命的旗帜</p>\n</div>\n<ul>\n<li>\n<p>辛亥革命爆发的历史条件</p>\n</li>\n<li>\n<p>资产阶级革命派的活动</p>\n</li>\n<li>\n<p>三民主义学说和资产阶级共和国方案</p>\n</li>\n<li>\n<p>关于革命和改良的辩论</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>辛亥革命与中华民国的建立</p>\n</div>\n<ul>\n<li>\n<p>辛亥革命的爆发与清王朝的覆灭</p>\n</li>\n<li>\n<p>中华民国的建立</p>\n</li>\n<li>\n<p>辛亥革命的历史意义</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>北洋军阀统治与旧民主主义革命的失败</p>\n</div>\n<ul>\n<li>\n<p>封建军阀专制统治的形成</p>\n</li>\n<li>\n<p>旧民主主义革命的失败</p>\n</li>\n</ul>\n<h2 id=\"新民主主义革命时期\"><a class=\"anchor\" href=\"#新民主主义革命时期\">#</a> 新民主主义革命时期</h2>\n<h3 id=\"中国共产党成立和中国革命新局面\"><a class=\"anchor\" href=\"#中国共产党成立和中国革命新局面\">#</a> 中国共产党成立和中国革命新局面</h3>\n<ul>\n<li>\n<p>新文化运动与思想解放的潮流</p>\n</li>\n<li>\n<p>十月革命对中国的影响</p>\n</li>\n<li>\n<p>五四运动的发生和发展</p>\n</li>\n<li>\n<p>五四运动的历史特点与新民主主义革命的开端</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>马克思主义广泛传播与中国共产党诞生</p>\n</div>\n<ul>\n<li>\n<p>中国早期马克思主义思想运动</p>\n</li>\n<li>\n<p>马克思主义与中国工人运动的结合</p>\n</li>\n<li>\n<p>中国共产党的成立及其意义</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>中国革命的新局面</p>\n</div>\n<ul>\n<li>\n<p>制定革命纲领，发动工农运动</p>\n</li>\n<li>\n<p>实行国共合作和掀起大革命高潮</p>\n</li>\n<li>\n<p>大革命的失败及其原因</p>\n</li>\n<li>\n<p>大革命失败的经验教训和意义</p>\n</li>\n</ul>\n<h3 id=\"中国革命的新道路\"><a class=\"anchor\" href=\"#中国革命的新道路\">#</a> 中国革命的新道路</h3>\n<div class=\"note info\">\n<p>中国共产党对革命新道路的艰苦探索</p>\n</div>\n<ul>\n<li>\n<p>国民党在全国统治的建立</p>\n</li>\n<li>\n<p>土地革命战争的兴起</p>\n</li>\n<li>\n<p>农村包围城市、武装夺取政权的道路</p>\n<ol>\n<li>对中国革命新道路的探索</li>\n<li>反围剿战争与土地革命</li>\n</ol>\n</li>\n</ul>\n<div class=\"note info\">\n<p>中国革命在曲折中前进</p>\n</div>\n<ul>\n<li>\n<p>土地革命战争的发展及其挫折</p>\n</li>\n<li>\n<p>遵义会议与中国革命的历史性转折</p>\n</li>\n<li>\n<p>红军长征的胜利</p>\n</li>\n<li>\n<p>总结历史经验，迎接全民族抗日战争</p>\n</li>\n</ul>\n<h3 id=\"中华民族的抗日战争\"><a class=\"anchor\" href=\"#中华民族的抗日战争\">#</a> 中华民族的抗日战争</h3>\n<div class=\"note info\">\n<p>日本发动企图灭亡中国的侵略战争</p>\n</div>\n<ul>\n<li>\n<p>日本灭亡中国的计划及其实施</p>\n</li>\n<li>\n<p>残暴的殖民统治和中华民族的深重灾难</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>中国人民奋起抗击日本侵略者</p>\n</div>\n<ul>\n<li>\n<p>中国共产党举起武装抗日的旗帜</p>\n</li>\n<li>\n<p>抗日救亡运动</p>\n</li>\n<li>\n<p>一二・九运动</p>\n</li>\n<li>\n<p>西安事变</p>\n</li>\n<li>\n<p>抗日民族统一战线政策的形成</p>\n</li>\n<li>\n<p>全民族抗战开始</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>抗日战争的正面战争</p>\n</div>\n<ul>\n<li>\n<p>战略防御阶段和战略相持阶段的正面战场</p>\n<ul>\n<li>战略防御阶段的正面战场</li>\n<li>抗战初期正面战场败退的原因</li>\n<li>战略相持阶段的正面战场</li>\n<li>1938 年 10 月，广州、武汉失守，抗日战争进入相持阶段\n<ul>\n<li>日本对国民党的态度\n<ul>\n<li>政治诱降为主，军事打击为辅的方针</li>\n</ul>\n</li>\n<li>国民党对共产党的态度\n<ul>\n<li>“防共、限共、溶共、反共” 的方针</li>\n</ul>\n</li>\n<li>反法西斯联盟\n<ul>\n<li>1941 年 12 月，日军发动太平洋战争，美、英对日宣战，整个世界格局发生变化。</li>\n<li>1942 年元旦，由美、英、苏、中 4 国领衔，26 个国家签署《联合国家宣言》，决心互相合作，结成反法西斯联盟。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note info\">\n<p>中国共产党成为抗日战争的中流砥柱</p>\n</div>\n<ul>\n<li>全面抗战的路线和持久战的战略总方针\n<ul>\n<li>实行全面的全民族抗战的路线\n<ul>\n<li>洛川会议\n<ul>\n<li>中国共产党主张实行全面抗战的总路线，即人民战争路线</li>\n<li>制定了抗日救国十大纲领，强调要打倒日本帝国主义，关键在于使已经发动的抗战成为全面的全民族的抗战。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>采取持久战的战略总方针\n<ul>\n<li>毛泽东在抗日战争时期的文章，1938 年 5 月 6 日，毛泽东发表《论持久战》的讲演。</li>\n<li>抗日战争的发展阶段\n<ul>\n<li>战略防御</li>\n<li>战略相持</li>\n<li>战略反攻</li>\n</ul>\n</li>\n<li><span class=\"red\">战略相持阶段，是中国抗日战争取得最后胜利的最关键的阶段</span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note info\">\n<p>敌后战场的开辟与游击战争的发展及其战略地位</p>\n</div>\n<ul>\n<li>\n<p>敌后战场的开辟和发展</p>\n<ul>\n<li>敌后战场的胜利</li>\n<li>国共两党军队合作的胜利</li>\n</ul>\n</li>\n<li>\n<p>抗日游击战争的战略地位和作用</p>\n<ul>\n<li>在全民族抗战中，游击战被提到了战略地位，具有全局性的意义</li>\n<li>第一，在战略防御阶段，从全局看，国民党正面战场的正规战是主要的，敌后的游击战是辅助的。</li>\n<li>第二，在战略相持阶段，敌后游击战成为主要的抗日战争作战方式。对华北日军发动了一场大规模的以破袭敌人交通线为重要目标的进攻战役。这就是<span class=\"label\">百团大战</span></li>\n<li>第三，游击战还为人民军队进行战略反攻准备了条件。</li>\n</ul>\n</li>\n<li>\n<p>坚持抗战、团结、进步的方针</p>\n<ul>\n<li>第一，统一战线中的独立自主原则，\n<ul>\n<li>共产党必须：\n<ul>\n<li>保持思想上、政治上和组织上的独立性</li>\n<li>对国民党采取又团结又斗争以斗争求团结的方针</li>\n<li>动员千百万群众进入抗日民族统一战线，实质上就是力争中国共产党对抗日战争的领导权，使自己成为团结全民族抗战的中坚力量。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第二，<span class=\"red\">坚持</span>抗战、团结、进步，<span class=\"red\">反对</span>妥协、分裂、倒退\n<ul>\n<li>中国共产党进行了针锋相对的斗争：除在军事上坚决进行自卫反击战外，还在政治上对其进行有力的揭露和声讨，赢得了国内外舆论的同情和支持。</li>\n</ul>\n</li>\n<li>第三，巩固抗日民族统一战线的策略总方针\n<ul>\n<li><span class=\"blue\">发展进步势力，争取中间势力，孤立顽固势力</span>的策略总方针</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>抗日民主根据地的建设</p>\n<ul>\n<li>政治建设方面</li>\n<li>经济建设方面: <span class=\"label\">减租减息，发展生产</span></li>\n<li>文化建设方面与干部教育方面</li>\n</ul>\n</li>\n<li>\n<p>大后方的抗日民主运动和进步文化工作</p>\n<ul>\n<li>宪政运动</li>\n<li>中国民主政团同盟</li>\n<li>联合政府的主张</li>\n<li>文化界抗敌协会</li>\n<li>“马克思主义的中国化” 命题的提出</li>\n</ul>\n</li>\n<li>\n<p>新民主主义理论的系统阐明</p>\n<ul>\n<li>毛泽东思想成熟的标志：以毛泽东同志为主要代表的中国共产党人创立的新民主主义理论，是马克思主义基本原理同中国具体实际相结合的成果。<span class=\"blue\">新民主主义理论的系统阐明，标志着毛泽东思想得到多方面展开而达到成熟</span></li>\n</ul>\n</li>\n<li>\n<p>延安整风运动与中共七大</p>\n<ul>\n<li>\n<p>延安整风运动</p>\n</li>\n<li>\n<p>整风运动的主要内容</p>\n<ul>\n<li>主观主义的实质：理论脱离实际</li>\n<li>主观主义的主要表现形式：教条主义和经验主义，尤其教条主义为整风运动的重点</li>\n</ul>\n</li>\n<li>\n<p>整风运动的意义</p>\n</li>\n<li>\n<p>中共七大</p>\n<ul>\n<li>\n<p>中共七大内容</p>\n<ul>\n<li>中共七大制定了党的政治录像</li>\n<li>中共七大总结党的建设的历史经验，把党在长期奋斗中形成的优良作风概括为三大作风\n<ul>\n<li>理论和实践相结合</li>\n<li>和人民群众紧密联系在一起的作风</li>\n<li>自我批评的作风</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>毛泽东思想</p>\n<ul>\n<li>把马克思列宁主义基本原理同中国具体实际相结合所创造的理论成果，正式命名为毛泽东思想。</li>\n<li>毛泽东思想规定为党的一切工作的指针</li>\n</ul>\n</li>\n<li>\n<p>党的七大在党的历史上具有重要里程碑意义</p>\n<ul>\n<li>标志着我们党在政治上、思想上、组织上走向了成熟</li>\n<li>在政治上，通过延安整风运动，使全党团结在毛泽东的旗帜下，实现了党的空前统一和团结</li>\n<li>在思想上，党确立了毛泽东思想在全党的指导地位，把毛泽东思想写入党章。</li>\n<li>在组织上，党形成了一支高举毛泽东旗帜的久经经验的政治家集团。</li>\n</ul>\n</li>\n<li>\n<p>中共中央在延安的十三年</p>\n<ul>\n<li>领导中国革命事业从低潮走向高潮，实现历史性转折，扭转了中国前途命运。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note info\">\n<p>抗日战争的胜利及其意义</p>\n</div>\n<ul>\n<li>抗日战争的胜利\n<ul>\n<li>19454 年 9 月 2 日，日本天皇和政府以及日本大本营的代表在东京湾美军军舰密苏里号上签署向同盟国的投降书。</li>\n</ul>\n</li>\n<li>抗日战争胜利纪念日与抗战胜利的标志\n<ul>\n<li>9 月 3 日成为中国人民抗日战争胜利纪念日。</li>\n</ul>\n</li>\n</ul>\n<div class=\"note info\">\n<p>中国人民抗日战争在世界反法西斯战争中的地位</p>\n</div>\n<ul>\n<li>\n<p>第一，中国的抗日战争是世界反法西斯战争的重要组成部分</p>\n</li>\n<li>\n<p>第二，世界反法西斯力量对中国的援助。中国人民抗日战争的胜利，是同世界所有爱好和平和正义的国家和人民、国际组织及各种反法西斯力量的同情和支持分不开的。</p>\n</li>\n</ul>\n<div class=\"note info\">\n<p>抗日战争胜利的原因和意义</p>\n</div>\n<ul>\n<li>\n<p>原因</p>\n<ol>\n<li>以爱国主义为核心的民族精神是中国人民抗日战争胜利的决定因素</li>\n<li>中国共产党的中流砥柱作用是中国人民抗日战争胜利的关键</li>\n<li>全民族抗战是中国人民抗日战争胜利的重要法宝</li>\n<li>中国人民抗日战争的胜利，同世界所有爱好和平和正义的国家和人民、国际组织及各种反法西斯力量的同情和支持分不开的</li>\n</ol>\n</li>\n<li>\n<p>意义</p>\n<ol>\n<li>彻底粉碎了日本帝国主义殖民奴役中国的图谋，捍卫了国家主权和领土完整</li>\n<li>促进了中华民族的大团结，形成了伟大的抗战精神。</li>\n<li>对世界各国夺取反法西斯战争的胜利、维护世界和平的事业产生了巨大影响</li>\n<li>开辟了中华民族伟大复兴的光明前景。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"为建立新中国而奋斗\"><a class=\"anchor\" href=\"#为建立新中国而奋斗\">#</a> 为建立新中国而奋斗</h3>\n<div class=\"note info\">\n<p>从争取和平民主到进行自卫战争</p>\n</div>\n<ul>\n<li>抗战胜利后的国际国内局势</li>\n</ul>\n<div class=\"note info\">\n<p>抗日战争胜利的原因和意义</p>\n</div>\n<div class=\"note info\">\n<p>抗日战争胜利的原因和意义</p>\n</div>\n<h2 id=\"新中国时期\"><a class=\"anchor\" href=\"#新中国时期\">#</a> 新中国时期</h2>\n<h3 id=\"中华人民共和国的成立与中国社会主义建设道路的探索\"><a class=\"anchor\" href=\"#中华人民共和国的成立与中国社会主义建设道路的探索\">#</a> 中华人民共和国的成立与中国社会主义建设道路的探索</h3>\n<h3 id=\"改革开放与中国特色社会主义的开创和发展\"><a class=\"anchor\" href=\"#改革开放与中国特色社会主义的开创和发展\">#</a> 改革开放与中国特色社会主义的开创和发展</h3>\n<h3 id=\"中国特色社会主义进入新时代\"><a class=\"anchor\" href=\"#中国特色社会主义进入新时代\">#</a> 中国特色社会主义进入新时代</h3>\n",
            "tags": [
                "记录"
            ]
        },
        {
            "id": "https://hk2012.github.io/2023/09/09/doc/PubmedPolictics4/",
            "url": "https://hk2012.github.io/2023/09/09/doc/PubmedPolictics4/",
            "title": "2024考研政治 (思想道德与法制)",
            "date_published": "2023-09-09T07:36:00.000Z",
            "content_html": "<h1 id=\"思想道德与法制\"><a class=\"anchor\" href=\"#思想道德与法制\">#</a> 思想道德与法制</h1>\n<h2 id=\"绪论\"><a class=\"anchor\" href=\"#绪论\">#</a> 绪论</h2>\n<h3 id=\"担当复兴大任-成就时代新人\"><a class=\"anchor\" href=\"#担当复兴大任-成就时代新人\">#</a> 担当复兴大任 成就时代新人</h3>\n<ul>\n<li>时代新人特征\n<ul>\n<li>立大志</li>\n<li>明大德</li>\n<li>成大才</li>\n<li>担大任</li>\n</ul>\n</li>\n<li>思想道德和法律关系\n<ul>\n<li><span class=\"rainbow\">思想道德和法律</span>都是调节人们思想行为，协调人际关系、维护社会秩序的重要手段</li>\n<li><span class=\"rainbow\">思想道德和法律</span>虽然在<strong>调节领域、调节方式、调节目标等方面存在很大不同</strong>，但是两者都是<span class=\"red\">上层建筑的重要组成部分，共同服务于一定的经济基础</span>\n<ul>\n<li>一方面，思想道德建设为法治建设提供思想指引和价值基础</li>\n<li>另一方面，法治建设为思想道德建设提供制度支撑和法律保障，通过对思想道德的基本原则予以确认，为思想道德建设提供国家强制力保障</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>思想道德素质\n<ul>\n<li>思想道德素质的内涵\n<ul>\n<li>思想道德素质是人们的思想观念、政治立场、价值取向、道德情操和行为习惯等方面品质和能力的综合体现，反映着一个人的思想境界和道德风貌，是促进个体健康成长、社会发展进步的重要保障。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>法治素养\n<ul>\n<li>法治素养的内涵\n<ul>\n<li>法治素养是指人们通过学习法律知识、理解法律本质、运用法治思维、依法维护权利与履行义务的品质和能力，对于保证人们尊崇法治、遵守法律具有重要的意义。</li>\n<li>法律必须转化为人们内心自觉，才能真正为人们所遵行。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>思想道德素质和法治素养是新时代青年必须具备的<span class=\"red\">基本素质</span></li>\n</ul>\n<h2 id=\"思想篇\"><a class=\"anchor\" href=\"#思想篇\">#</a> 思想篇</h2>\n<h3 id=\"领悟人生真谛-把握人生方向\"><a class=\"anchor\" href=\"#领悟人生真谛-把握人生方向\">#</a> 领悟人生真谛 把握人生方向</h3>\n<ul>\n<li>\n<p>正确认识人的本质</p>\n<ul>\n<li>人的本质：一切社会关系的总和</li>\n<li>人的社会属性：是人的本质属性</li>\n</ul>\n</li>\n<li>\n<p>个人与社会的辩证关系</p>\n<ul>\n<li>个人与社会的关系问题是认识和处理人生问题的重要着眼点和出发点。</li>\n<li>个人与社会的关系，最根本的是个人利益与社会利益的关系</li>\n<li><strong>社会利益不是个人利益的简单相加，而是所有人利益的有机统一</strong>。社会利益体现了作为社会成员的个人的根本利益和长远利益，<strong>是个人利益得以实现的前提和基础</strong>，同时它也保障着个人利益的实现。人的社会性决定了人只有在推动社会进步的过程中，才能实现自我的发展。</li>\n</ul>\n</li>\n<li>\n<p>人生观的主要内容包括三个方面：</p>\n<ul>\n<li>\n<p>人生目的 <span class=\"red\">(核心)</span></p>\n<ul>\n<li>人生目的：表明人的一生追求什么，回答人为什么活着</li>\n<li>人生目的决定人生道路。人生目的规定了人生的方向。</li>\n<li>人生目的决定人生态度。不同的人生目的会使人采取不同的人生态度。</li>\n<li>人生目的决定人生价值选择。正确的人生目的会使人懂得<strong>人生的价值首先在于奉献</strong>。</li>\n</ul>\n</li>\n<li>\n<p>人生态度</p>\n<ul>\n<li>人生态度：回答人应当如何活着，表示以怎样的心态实现人生目标</li>\n<li>第一，人生态度是人生观的重要内容</li>\n<li>第二，人生态度是人生观的表现和反映</li>\n</ul>\n</li>\n<li>\n<p>人生价值</p>\n<ul>\n<li>\n<p>人生价值：回答什么样的人生才有价值，即人怎样活着有意义</p>\n</li>\n<li>\n<p>人生价值内在地包含了人生的自我价值和社会价值两个方面</p>\n<ul>\n<li>两者既相互区别，又密切联系、相互依存，共同构成人生价值的矛盾统一体。</li>\n<li>人生的自我价值的实现是个体为社会创造更大价值的前提</li>\n<li>人生社会价值的实现是个体自我完善、全面发展的保障。没有社会价值，人生的自我价值就无法存在</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>三者的辩证统一关系</p>\n<ul>\n<li>人生目的<span class=\"rainbow\">决定</span>着人们对待实际生活的态度和对人生价值的评判，</li>\n<li>人生态度<span class=\"rainbow\">影响</span>著人们对人生目的的持守和人生价值的实现，</li>\n<li>人生价值<span class=\"rainbow\">制约</span>着人们对人生目的和人生态度的选择</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>人生观与世界观、价值观</p>\n<ul>\n<li>世界观是人们对生活在其中的世界以及人与世界的关系的总体看法和根本观点</li>\n<li>人生观是人们关人人生目的、人生态度、人生价值等问题的总观点和总看法。</li>\n<li>世界观决定人生观，人生观又对世界观的巩固、发展和变化起着重要作用。</li>\n<li>价值观是人们关于价值的根本观点，对人人生观的形成和发展有重要的引导作用。</li>\n</ul>\n</li>\n</ul>\n<div class=\"note danger no-icon\">\n<p><strong>第二节 正确的人生观</strong></p>\n</div>\n<ul>\n<li>\n<p>高尚的人生追求</p>\n<ul>\n<li>什么是高尚的人生追求？\n<ul>\n<li><strong>服务人民，奉献社会</strong> 的思想以其科学而高尚品质，代表了人类社会迄今最先进的人生追求</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>积极进取的人生态度</p>\n<ul>\n<li>人生须认真</li>\n<li>人生当务实</li>\n<li>人生应乐观</li>\n<li>人生要进取</li>\n</ul>\n</li>\n<li>\n<p>人生价值的评价与实现</p>\n<ul>\n<li>\n<p><span class=\"rainbow\">评价人生价值的根本尺度：看一个人的实践活动是否符合社会发展的客观规律，是否促进了历史的进步。(历史标准)</span></p>\n</li>\n<li>\n<p>在今天，衡量人生价值的标准，<span class=\"rainbow\">最重要</span>的就是看一个人是否用自己的劳动和聪明才智为国家和社会真诚奉献，为人民群众尽心尽力服务</p>\n</li>\n<li>\n<p>评价人生价值的方法：</p>\n<ul>\n<li>第一，既要看贡献的大小，也要看尽力的程度；</li>\n<li>第二，既要尊重物质贡献，也要尊重精神贡献；</li>\n<li>第三，既要注重社会贡献，也要注重自身完善。</li>\n</ul>\n</li>\n<li>\n<p>人生价值的实现</p>\n<ul>\n<li>第一，实现人生价值要从社会客观条件出发。我们要珍惜难得的历史机遇，把自己的人生追求建立在正确把握当今中国社会发展实际的基础上，努力实现自己的人生价值。</li>\n<li>第二，实现人生价值要从个体自身条件出发。</li>\n<li>第三，不断增强实现人生价值的能力和本领（个人的主观努力）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note danger no-icon\">\n<p><strong>第三节 创造有意义的人生</strong></p>\n</div>\n<ul>\n<li>辩证对待人生矛盾\n<ul>\n<li>树立正确的幸福观\n<ul>\n<li><span class=\"red\">幸福是奋斗出来的</span></li>\n<li>第一，幸福是一个总体性范畴，是相对的，不同的人有不同的幸福标准；</li>\n<li>第二，幸福体现在物质与精神两个方面，精神需要的满足、精神生活的充实是更重要的方面；</li>\n<li>第三，在追求幸福的过程中，不能把自己的幸福建立在损害社会整体利益和他人利益的基础上。</li>\n<li><span class=\"red\">反对三种错误人生观：拜金主义、享乐主义、极端个人主义</span></li>\n<li><span class=\"red\">现在，青春是用来奋斗的；将来，青春是用来回忆的。（习近平）</span></li>\n</ul>\n</li>\n<li>树立正确的得失观、苦乐观、顺逆观、生死观、荣辱观</li>\n</ul>\n</li>\n<li>成就出彩人生\n<ul>\n<li>与历史同向\n<ul>\n<li>增强时代的责任感，与历史同步伐，与时代共命运</li>\n</ul>\n</li>\n<li>与祖国同行\n<ul>\n<li>自觉与国家和民族共奋进、同发展</li>\n</ul>\n</li>\n<li>与人民同在\n<ul>\n<li><span class=\"red\">社会实践是实现人生价值的必由之路</span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"追求远大理想-坚定崇高信念\"><a class=\"anchor\" href=\"#追求远大理想-坚定崇高信念\">#</a> 追求远大理想 坚定崇高信念</h3>\n<div class=\"note info no-icon\">\n<p><strong>第一节 理想信念的内涵及重要性</strong></p>\n</div>\n<ul>\n<li>理想信念\n<ul>\n<li>\n<p>理想的分类</p>\n<ul>\n<li>个人理想和社会理想</li>\n<li>近期理想和远期理想</li>\n<li>生活理想、职业理想、道德理想、政治理想</li>\n<li>一般理想和崇高理想</li>\n</ul>\n</li>\n<li>\n<p>理想的特征</p>\n<ul>\n<li>理想具有超越性：理想因其远大而为理想。它不仅源于现实，而且超越现实，是与奋斗目标相联系的未来的现实。</li>\n<li>理想具有实践性：理想是处在特定历史条件下的人们对社会实践活动理性认识的结晶。理想在实践中产生，在实践中发展，也只有在实践中才能得以实现。</li>\n<li>理想具有时代性：理想受时代条件的制约，随着时代的发展而发展</li>\n</ul>\n</li>\n<li>\n<p>信念的内涵和特征</p>\n<ul>\n<li>信念具有执着性：信念因其执着而为信念。信念一旦形成，就不会轻易改变。</li>\n<li>信念具有支撑性：信念是一个人经受实践考验而始终坚守理想的精神力量。纵观人类社会发展史，共同的信念凝聚眷一个国家、一个民族的集体意志，为社会理想的实现提供强大的精神力量。</li>\n<li>信念具有多样性：信念有不同的层次和类型。其中，高层次的信念决定着低层次的信念，低层次的信念服从于高层次的信念。信仰是最高层次的信念，具有最大的统摄力。信仰有盲目和科学之分。科学的信仰来自人们对自然界和人类社会发展规律的正确认识</li>\n</ul>\n</li>\n<li>\n<p>理想和信念的关系</p>\n<ul>\n<li>理想是信念所指的对象，信念则是理想实现的保障。离开理想，信念无从产生；离开信念，理想寸步难行。也正因如此，人们常将理想与信念合称为理想信念</li>\n</ul>\n</li>\n<li>\n<p>理想信念是精神之 “钙”</p>\n<ul>\n<li>第一，昭示奋斗目标；</li>\n<li>第二，催生前进动力；</li>\n<li>第三，提供精神支柱；</li>\n<li>第四，提高精神境界</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note info no-icon\">\n<p><strong>第二节 崇高的理想信念</strong></p>\n</div>\n<ul>\n<li>马克思主义信仰\n<ul>\n<li>要确立马克思主义信仰的原因\n<ul>\n<li>马克思主义是我们认识世界、改造世界的强大思想武器</li>\n<li>马克思主义是科学的理论，创造性地揭示了人类社会发展的规律</li>\n<li>马克思主义是人民的理论，第一次创立了人民实现自身解放的思想体系</li>\n<li>马克思主义是实践的理论，指引着人民改造世界的行动</li>\n<li>马克思主义是不断发展的开发的理论，始终站在时代的前沿</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note info no-icon\">\n<p><strong>第三节 在实现中国梦的实践中放飞青春梦想</strong></p>\n</div>\n<ul>\n<li>科学把握理想与现实的辩证统一\n<ul>\n<li>理想与现实是对立统一的。</li>\n<li>首先，理想与现实存在着对立的一面，理想不等同于现实。其次，理想与现实又是统一的。理想受现实的规定和制约。现实中包含着理想的因素，孕育着理想的发展。理想中也包含着现实</li>\n</ul>\n</li>\n<li>个人理想和社会理想\n<ul>\n<li>个人理想与社会理想的关系实质上是个人与社会的关系在理想层面的反映。\n<ol>\n<li>个人理想以社会理想为指引。正确的个人理想从根本上说是由正确的社会理想规定的。同时，个人理想的实现，必须以社会理想的实现为前提和基础。因此，在整个理想体系中，社会理想是最根本、最重要的，而个人理想则从属于社会理想。个人理想的确立要以社会理想为导向，个人理想的实现依赖于社会理想的指引。个人理想只有同国家的前途、民族的命运相结合，个人的向往和追求只有同社会的需要和人民的利益相一致，才可能变为现实。</li>\n<li>社会理想是个人理想的汇聚和升华。社会理想是建立在广大社会成员的个人理想基础之上的，是个人理想的汇聚和升华。</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"继承优良传统-弘扬中国精神\"><a class=\"anchor\" href=\"#继承优良传统-弘扬中国精神\">#</a> 继承优良传统 弘扬中国精神</h3>\n<div class=\"note info no-icon\">\n<p><strong>第一节 理想信念的内涵及重要性</strong></p>\n</div>\n<h2 id=\"道德篇\"><a class=\"anchor\" href=\"#道德篇\">#</a> 道德篇</h2>\n<h3 id=\"明确价值要求-践行价值准则\"><a class=\"anchor\" href=\"#明确价值要求-践行价值准则\">#</a> 明确价值要求 践行价值准则</h3>\n<h3 id=\"遵守道德规范-锤炼道德品格\"><a class=\"anchor\" href=\"#遵守道德规范-锤炼道德品格\">#</a> 遵守道德规范 锤炼道德品格</h3>\n<h2 id=\"法治篇\"><a class=\"anchor\" href=\"#法治篇\">#</a> 法治篇</h2>\n<h3 id=\"学习法治思想-提升法治素养\"><a class=\"anchor\" href=\"#学习法治思想-提升法治素养\">#</a> 学习法治思想 提升法治素养</h3>\n",
            "tags": [
                "记录"
            ]
        },
        {
            "id": "https://hk2012.github.io/2023/09/02/doc/PubmedPolictics/",
            "url": "https://hk2012.github.io/2023/09/02/doc/PubmedPolictics/",
            "title": "2024考研政治 (马克思主义基本原理)",
            "date_published": "2023-09-02T07:48:53.000Z",
            "content_html": "<h1 id=\"马克思主义基本原理\"><a class=\"anchor\" href=\"#马克思主义基本原理\">#</a> 马克思主义基本原理</h1>\n<ul>\n<li><strong>马克思主义是关于无产阶级和人类解放的科学</strong></li>\n</ul>\n<h2 id=\"导论\"><a class=\"anchor\" href=\"#导论\">#</a> 导论</h2>\n<ul>\n<li>马克思主义的创立</li>\n</ul>\n<details class=\"info\"><summary>点击展开</summary><div>\n<div class=\"note info\">\n<p>马克思主义的创立</p>\n</div>\n<div class=\"tab\" data-id=\"produce\" data-title=\"社会根源\">\n<p>资本主义经济的发展为马克思主义的产生提供了经济、社会历史条件。</p>\n</div>\n<div class=\"tab\" data-id=\"produce\" data-title=\"阶级基础\">\n<p>无产阶级在反抗资产阶级的斗争逐步走向<span class=\"red\">自觉</span>，对科学理论的指导提出了强烈的需求。</p>\n</div>\n<div class=\"tab\" data-id=\"produce\" data-title=\"思想渊源\">\n<p>马克思、恩格斯的革命实践和对人类文明成果的继承与创新（主观条件）</p>\n</div>\n</div></details>\n<ul>\n<li>西欧三大先进思潮</li>\n</ul>\n<details class=\"primary\"><summary>19世纪西欧三大先进思潮</summary><div>\n<div class=\"note info\">\n<p>为马克思主义提供了<span class=\"red\">直接的理论</span>来源</p>\n</div>\n<ul>\n<li>德国古典哲学</li>\n<li>英国古典政治经济学</li>\n<li>英法两国的空想社会主义</li>\n</ul>\n</div></details>\n<ul>\n<li>三大科学发现</li>\n</ul>\n<details class=\"primary\"><summary>19世纪三大科学发现</summary><div>\n<div class=\"note info\">\n<p>为马克思主义提供了<span class=\"red\">自然科学</span>前提</p>\n</div>\n<ul>\n<li>细胞学说</li>\n<li>能量守恒与转化定律</li>\n<li>生物进化论</li>\n</ul>\n</div></details>\n<ul>\n<li>著作汇总</li>\n</ul>\n<details class=\"info\"><summary>点击展开</summary><div>\n<div class=\"note info\">\n<p>马恩列重要著作核心重点<span class=\"red\">第一页</span></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"第一页\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">著作</th>\n<th style=\"text-align:center\">主要内容或标志</th>\n<th style=\"text-align:center\">记忆关键词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">《德意志意识形态》</td>\n<td style=\"text-align:center\">首次系统阐述历史唯物主义基本观点，创立了唯物史观、标志着马克思主义哲学的诞生</td>\n<td style=\"text-align:center\"><span class=\"red\">首次系统阐述</span>历史唯物主义</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《资本论》</td>\n<td style=\"text-align:center\">系统阐述剩余价值理论，标志马克思主义政治经济学的诞生</td>\n<td style=\"text-align:center\">政治经济的诞生、被誉为\t <ins class=\"rainbow\">工人阶级的圣经</ins></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《共产党宣言》</td>\n<td style=\"text-align:center\">1. 标志着科学社会主义的诞生；2. 标志着马克思主义的诞生；3. 世界上第一个无产阶级政党的党纲</td>\n<td style=\"text-align:center\"><ins class=\"rainbow\">（科学社会、马克思主义）的诞生</ins>、第一个无产阶级政党的党纲</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《反杜林论》</td>\n<td style=\"text-align:center\">全面阐述马克思主义理论体系的著作</td>\n<td style=\"text-align:center\">全面阐述马克思主义理论体系，三个组成部分进行全面阐述</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《德法年鉴》</td>\n<td style=\"text-align:center\">实现了唯心主义转唯物主义、革命民主主义转共产主义；为创立马克思主义奠定了思想前提</td>\n<td style=\"text-align:center\">实现了<ins class=\"rainbow\">两个转变</ins>，奠定了思想前提</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《神圣家族》</td>\n<td style=\"text-align:center\">批判黑格尔派的主观唯心主义，是马恩第一次合著的作品</td>\n<td style=\"text-align:center\"><ins class=\"red\">马恩第一次合著的作品</ins></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《哲学的贫困》</td>\n<td style=\"text-align:center\">马克思主义学说最早发表的文本</td>\n<td style=\"text-align:center\">马克思主义学说<ins class=\"rainbow\">最早发表文本</ins></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"第二页\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">著作</th>\n<th style=\"text-align:center\">主要内容或标志</th>\n<th style=\"text-align:center\">记忆关键词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">《法兰西内战》</td>\n<td style=\"text-align:center\">科学总结巴黎公社的历史经验和教训</td>\n<td style=\"text-align:center\">巴黎公社经验教训</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《哥达纲领批判》</td>\n<td style=\"text-align:center\">提出共产主义分为两个阶段：1. 社会主义社会；2. 共产主义社会。进一步丰富了科学社会主义学说</td>\n<td style=\"text-align:center\">丰富科学社会主义</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《家庭、私有制和国家起源》</td>\n<td style=\"text-align:center\">关于古代社会发展规律和国家起源的著作；马克思主义国家学说代表作之一</td>\n<td style=\"text-align:center\">马恩的国家学说</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《关于费尔巴哈的提纲》</td>\n<td style=\"text-align:center\">包含新世界观天才萌芽的第一个文件中，首次确立科学实践观</td>\n<td style=\"text-align:center\"><span class=\"rainbow\">天才萌芽、科学实践观</span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《帝国主义是资本主义的最高阶段》</td>\n<td style=\"text-align:center\">指出帝国主义是无产阶级革命的前夜</td>\n<td style=\"text-align:center\">革命的前夜 (列宁)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《论欧洲联邦口号》</td>\n<td style=\"text-align:center\">首次明确提出 &quot;一国胜利论&quot;, 列宁认为无产阶级革命可能在少数国家甚至在一国取得胜利</td>\n<td style=\"text-align:center\"><span class=\"rainbow\">一国胜利论</span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《国家与革命》</td>\n<td style=\"text-align:center\">发展了马克思主义的国家革命论，马克思主义国家学说的代表作之一</td>\n<td style=\"text-align:center\">列宁的国家学说、与马恩的国家学说区别</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">《唯物主义和经验批判主义》</td>\n<td style=\"text-align:center\">明确提出 “生活”、“实践” 的观点、应该是 “认识论” 的首要的基本的观点</td>\n<td style=\"text-align:center\">“实践” 、 “认识论首要基本的观点”</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div></details>\n<ul>\n<li>丰富和发展</li>\n</ul>\n<details class=\"info\"><summary>点击展开</summary><div>\n<div class=\"note info\">\n<p>列宁和中国共产党对马克思主义的丰富和发展</p>\n</div>\n<div class=\"tab\" data-id=\"dev\" data-title=\"列宁\">\n<ul>\n<li>资本主义各国之间政治经济发展不平衡加剧，成为社会主义革命可能胜利的历史条件</li>\n<li>经济政治发展的不平衡已成为资本主义发展的绝对规律。提出了社会主义革命可能在一国或数国首先发生并取得胜利的论断 <span class=\"rainbow\">（一国胜利论）</span>。</li>\n<li>俄国十月革命的胜利，使科学社会主义从理论开始变为现实</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"dev\" data-title=\"中国共产党\">\n<ul>\n<li>中国共产党在长期奋斗中坚持把马克思主义基本原理同中国具体实际相结合，丰富和发展了马克思主义</li>\n<li>先后产生了毛泽东思想，和中国特色社会主义理论体系。</li>\n<li>习近平新时代中国特色社会主义思想是马克思主义中国化最新理论成果。</li>\n</ul>\n</div>\n</div></details>\n<ul>\n<li>鲜明特征</li>\n</ul>\n<details class=\"info\"><summary>点击展开</summary><div>\n<div class=\"note info\">\n<p>列宁和中国共产党对马克思主义的丰富和发展</p>\n</div>\n<div class=\"tab\" data-id=\"feature\" data-title=\"科学性\">\n<ul>\n<li>马克思主义是对自然、社会和人类思维发展本质和规律的 <span class=\"rainbow\">正确反映</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"feature\" data-title=\"人民性\">\n<ul>\n<li>人民至上是马克思主义的 <span class=\"rainbow\">政治立场</span>.</li>\n<li>人民性是马克思主义<span class=\"rainbow\">最鲜明的品格</span>.</li>\n<li>归根到底就是一句话：<span class=\"rainbow\">为人类解放</span>。</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"feature\" data-title=\"实践性\">\n<ul>\n<li>实践性是马克思主义理论区别于其他理论的显著特征。</li>\n<li>实践观点是马克思主义 <span class=\"red\">首要的</span>和<span class=\"red\">基本的</span>观点</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"feature\" data-title=\"发展性\">\n<ul>\n<li>马克思主义是不断发展的学说，具有<span class=\"rainbow\">与时俱进的理论品质</span></li>\n</ul>\n</div>\n</div></details>\n<h3 id=\"刷题总结\"><a class=\"anchor\" href=\"#刷题总结\">#</a> 刷题总结</h3>\n<ol>\n<li>人民性、实践性、发展性统称为革命性。</li>\n<li>一句话概括马克思主义的鲜明特征就是:<span class=\"red\"> 科学性和革命性的统一</span>。</li>\n<li>马克思主义理论区别于其他理论<span class=\"red\">最显著</span><span class=\"rainbow\">根本特征</span>：实践性</li>\n<li>实践的的观点是马克思主义的<span class=\"rainbow\">基本观点</span></li>\n<li>马克思主义的本质属性: <span class=\"rainbow\">人民性</span></li>\n<li>马克思主义追求的根本价值目标: <span class=\"rainbow\">实现人的自由而全面的发展</span></li>\n<li>马克思的整个世界观是不是教义，而是方法。它提供的不是现成的教条，是进一步研究的出发点和供这种研究使用的方法。(如果选项中出现 &quot;现成答案&quot;、&quot;现成理想方案&quot; 等，多为干扰项)</li>\n</ol>\n<ul>\n<li>当代价值</li>\n</ul>\n<details class=\"primary\"><summary>点击展开</summary><div>\n<div class=\"note info\">\n<p>马克思主义的当代价值</p>\n</div>\n<ul>\n<li>观察当代世界变化的认识工具</li>\n<li>指引当代中国发展的行动指南</li>\n<li>引领人类社会进步的科学真理</li>\n</ul>\n</div></details>\n<h2 id=\"马克思主义哲学\"><a class=\"anchor\" href=\"#马克思主义哲学\">#</a> 马克思主义哲学</h2>\n<h3 id=\"辩证唯物论\"><a class=\"anchor\" href=\"#辩证唯物论\">#</a> 辩证唯物论</h3>\n<h4 id=\"哲学及其基本问题\"><a class=\"anchor\" href=\"#哲学及其基本问题\">#</a> 哲学及其基本问题</h4>\n<ul>\n<li>\n<p>哲学基本问题</p>\n<ul>\n<li>存在和思维的关系问题</li>\n</ul>\n</li>\n<li>\n<p>基本问题的内容</p>\n<ol>\n<li>\n<p>存在和思维究竟谁是世界的本原，<span class=\"aqua\">物质和精神何者是第一性、何者是第二性</span>的问题 (唯心或唯物)</p>\n</li>\n<li>\n<p>思维能否正确认识存在的问题，即<span class=\"aqua\">思维和存在有无同一性</span>的问题 (可知论或不可知论)</p>\n</li>\n</ol>\n</li>\n<li>\n<p>哲学划分</p>\n<details class=\"info\"><summary>点击展开</summary><div>\n<div class=\"note info\">\n<p>哲学划分分为四个方面</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"世界本原\">\n<ul>\n<li>唯物主义：把世界的本原归结为物质，主张物质第一性，意识第二性，意识是物质的产物。</li>\n<li>唯心主义：把世界的的本原归结为精神，意识物质第一性，物质第二性，物质是意识的产物。</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"世界是否可知\">\n<ul>\n<li>可知论：认为世界是可以被认识的，存在和思维具有同一性</li>\n<li>不可知论：认为世界是不能被人所认识或不能被完全认识的，否认存在和思维的同一性。</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"世界是怎样存在\">\n<ul>\n<li>辩证法：坚持用联系的、发展的观点看世界，认为发展的根本原因在于事物的内部矛盾。</li>\n<li>形而上学：坚持用孤立的、静止的观点看问题，否认事物内部矛盾的存在和作用。</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"社会历史观\">\n<ul>\n<li>历史唯物主义：认为社会存在决定社会意识</li>\n<li>历史唯心主义：认为社会意识决定社会存在</li>\n</ul>\n</div>\n</div></details>\n</li>\n<li>\n<p>唯物主义与辩证法要统一起来</p>\n<ul>\n<li>只有既坚持唯物主义，又坚持辩证法，才能全面地认识世界的本质和发展规律。只有达到唯物主义和辩证法的内在统一，才能有科学的彻底的唯物主义和科学的彻底的辩证法。</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n</li>\n</ul>\n<ol>\n<li>\n<p>物质第一性还是第二性，只是就谁是世界的本原而言的，不要把它与价值混淆。不存在物质和意识谁比谁更重要，也不涉及谁与社会生活的关系更密切的问题。<span class=\"rainbow\">第一性不等于第一重要，第二性也不等于第二重要</span></p>\n</li>\n<li>\n<p>唯心主义并非都是不可知论，唯心主义既有可知论 (黑格尔)，也有不可知论；唯物主义哲学家以及唯物主义观点的科学家，都反对不可知论，主张世界是可以认识的。</p>\n</li>\n<li>\n<p>唯心主义不等于形而上学，唯物主义不等于辩证法</p>\n</li>\n<li>\n<details class=\"success\"><summary>唯心主义的两种形态</summary><div>\n<div class=\"note info\">\n<p>唯心主义又分为主观唯心主义和客观唯心主义</p>\n</div>\n<ul>\n<li>主观唯心主义：把人的感觉、观念作为世界的本原.(关键词：心、观念、感觉、精神等)</li>\n<li>客观唯心主义：把某种脱离物质、脱离任何个人的精神作为世界的本原. (关键词：理、理念、绝对观念、上帝、造物主、绝对精神等)</li>\n</ul>\n</div></details>\n</li>\n<li>\n<details class=\"success\"><summary>三种形态的唯物主义对物质的理解</summary><div>\n<div class=\"note info\">\n<p>共同点：从朴素到科学、从片面到比较全面，但都把世界的本原归结为物质，主张物质第一性，意识第二性</p>\n</div>\n<ul>\n<li>古代朴素唯物主义\n<ul>\n<li>&quot;金 木 水 火 土&quot; 等具体的物质形态</li>\n</ul>\n</li>\n<li>近代形而上学唯物主义\n<ul>\n<li>原子</li>\n</ul>\n</li>\n<li>现代辩证唯物主义\n<ul>\n<li>客观实在</li>\n</ul>\n</li>\n</ul>\n</div></details>\n</li>\n</ol>\n<h4 id=\"世界多样性与物质一致性\"><a class=\"anchor\" href=\"#世界多样性与物质一致性\">#</a> 世界多样性与物质一致性</h4>\n<ul>\n<li>\n<p>物质范畴及其理论意义</p>\n<ol>\n<li>\n<p>马克思主义物质观</p>\n<ul>\n<li>强调要从能动的实践出发去把握客观世界的意义</li>\n</ul>\n</li>\n<li>\n<p>恩格斯对物质作了初步概括</p>\n<ul>\n<li>“物、物质无非是各种物的总和，而这个概念就是从这一总和中抽象出来的。”</li>\n</ul>\n</li>\n<li>\n<p>列宁对物质概念做了全面的科学的规定</p>\n<ul>\n<li>所谓物质，就是不依赖于人类的而存在，并能为人类的所反映的客观实在</li>\n</ul>\n</li>\n<li>\n<p>马克思主义的物质概念是与实践的观点内在统一的。人类的社会生活本质上是实践的</p>\n</li>\n<li>\n<p>物质的共同特性 (唯一特性) 是<span class=\"rainbow\">客观实在性</span></p>\n</li>\n</ol>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>客观实在不一定是人可以直接看得见、摸得着的事物 (如磁场或声波就需要仪器来感知)，重点在于它是存在于人的意识之外，不以人的意志为转移的。</li>\n<li>不要混淆自然科学物质结构概念与哲学物质范畴、他们是个别与一般、个性与共性的关系。<span class=\"red\">(不是整体与部分)</span></li>\n<li>马克思主义<span class=\"rainbow\">以前的旧唯物主义</span>在自然观上是唯物的。在历史上却陷入了唯心。所以是不彻底的唯物主义。</li>\n<li>庸俗唯物主义不是唯物主义，它<span class=\"rainbow\">混淆物质与意识的界限</span>。认为人的精神活动能力只不过是脑物质的分泌物。</li>\n<li>物质和意识的对立，只有它们何者为第一性、何者为第二性这一范围内才具有绝对的意义；超出这个范围，物质和意识的对立便是相对的。</li>\n<li>现在的马克思主义既看到了自然界的物质性，又以实践为基础揭示了人类社会的物质性，实现了<span class=\"rainbow\">唯物主义自然观和历史观的统一</span>。</li>\n</ol>\n</li>\n<li>\n<p>物质与运动</p>\n</li>\n</ul>\n<ol>\n<li>运动是物质的<span class=\"rainbow\">根本属性</span>或<span class=\"rainbow\">存在方式</span></li>\n<li>物质和运动<span class=\"rainbow\">不可分割</span>。脱离运动的物质是不存在的，</li>\n<li>设想有不运动的物质，将导致形而上学。</li>\n</ol>\n<ul>\n<li>\n<p>运动与静止</p>\n<ol>\n<li>运动是<span class=\"rainbow\">普遍的、永恒的、无条件的</span>，因而是绝对的</li>\n<li>在物质运动中又包含着<span class=\"rainbow\">暂时的、有条件的、相对的静止</span>。</li>\n<li>静止是运动的<span class=\"rainbow\">特殊状态</span></li>\n<li>运动的绝对性体现了物质运动的<span class=\"rainbow\">变动性、无条件性</span></li>\n<li>静止的相对性体现了物质运动的<span class=\"rainbow\">稳定性、有条件性</span></li>\n<li>无条件的绝对运动和有条件的相对静止构成了事物的矛盾运动</li>\n</ol>\n</li>\n<li>\n<p>物质运动与时间、空间</p>\n<ol>\n<li>时间具有持续性、顺序性，特点是一维性 （即一去不复返）；</li>\n<li>空间是指物质运动的广延性、伸张性，特点是三维性（即空间具有长、宽、高三方面的规定性）。</li>\n<li>时间和空间是运动着的物质的基本存在形式</li>\n<li>时空既是有限的又是无限的</li>\n</ol>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>&quot;绝对的&quot; 与 &quot;无条件的&quot; 并列</li>\n<li>&quot;相对的&quot; 与 &quot;有条件的&quot; 并列</li>\n<li>客观实在性是物质的<span class=\"rainbow\">共同特性 (唯一特性)</span></li>\n<li>运动是物质的根本属性（存在方式）</li>\n<li>时空是运动着的物质的基本存在方式 <span class=\"red\">(如果单说时间、空间也是对的)</span></li>\n</ul>\n</li>\n<li>\n<p>物质世界的二重化</p>\n<ul>\n<li>从自然界中分化出人类社会</li>\n<li>客观世界中分化出主观世界</li>\n<li><span class=\"red\">人的实践活动</span>是自然界与人类社会、客观世界与主观世界相分化的关键，也是它们相统一的关键</li>\n</ul>\n</li>\n<li>\n<p>物质与意识的辩证关系</p>\n<ul>\n<li>物质决定意识，意识依赖于物质并反作用于物质</li>\n</ul>\n</li>\n<li>\n<p>物质对意识的决定作用表现在意识的起源和本质上</p>\n<ul>\n<li>\n<p>意识的起源</p>\n<ul>\n<li>\n<p>是自然界长期发展的产物 (分为三个阶段)</p>\n<ol>\n<li>一切物质所具有的反应特性到低等生物的刺激感应性</li>\n<li>高等动物的感觉和心理</li>\n<li>最终发展为人类的【人类独有】</li>\n</ol>\n</li>\n<li>\n<p>是社会历史发展的产物</p>\n<ol>\n<li>劳动为意识的产生和发展提供了客观需要和可能</li>\n<li>在人们的劳动和交往中形成的语言促进了的发展 (语言是意识的物质外壳)</li>\n<li>在劳动和语言的推动下，猿脑变成人脑，为意识的产生提供了物质基础，并促进了意识的发展</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>意识的本质</p>\n<ol>\n<li>意识是物质的产物，但又不是物质本身，是特殊的物质 —— 人脑的机能和属性。</li>\n<li>从本质上是客观世界的主观映象，是客观内容和主观形式的统一。</li>\n<li>意识是由各种反映形式共同组成的完整体系，它包括感觉、知觉、表象等<span class=\"rainbow\">感性认识</span>和概念、判断、推理等<span class=\"rainbow\">理性认识</span>这两种基本的认识形式</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>人脑是意识的器官，但不是意识的源泉，意识的源泉是客观世界</li>\n<li>意识不管正确错误、先进落后，都是物质世界的主观映象。</li>\n<li>高级动物也有感觉和心理，但只有人才有意识。实践、意识都是人特有的，动物、机器（人工智能）都没有</li>\n<li>物质的共同特性：客观实在性。</li>\n<li>客观实在性：存在于人的意识之外，可以被人的意识所反映，但不以人的意志所转移</li>\n<li>意识的内容是客观的，形式是主观的，是客观内容与主观形式的统一。</li>\n<li>世界只有尚未认识之物，没有不可认识之物</li>\n<li>意识可以 <span class=\"rainbow\">通过实践</span> 转化为物质</li>\n</ul>\n</li>\n<li>\n<p>意识对物质的反作用就是意识的能动作用</p>\n<ul>\n<li>意识对物质的反作用（能动作用）\n<ol>\n<li><span class=\"rainbow\">计划打算</span>：意识活动具有目的性和计划性</li>\n<li><span class=\"rainbow\">思维建模</span>：意识活动具有创造性</li>\n<li><span class=\"rainbow\">发明创造</span>：意识具有指导实践改造客观世界的作用</li>\n<li><span class=\"rainbow\">安慰剂</span>：意识具有调控人的行为和生理活动的作用</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>主观能动性和客观规律性的统一</p>\n<ol>\n<li>规律：指事物变化发展过程中本身所固有的<span class=\"red\">内在的、本质的、必然的联系</span></li>\n<li><span class=\"red\">规律和必然性是同等程度的概念</span>，代表着事物发展过程中必定如此、确定不移的趋势</li>\n<li><span class=\"red\">规律是客观的，是不以人们的意志为转移的.</span></li>\n<li>正确认识和把握物质的决定作用及意识的反作用，必须处理好主观能动性和客观规律性的关系</li>\n</ol>\n</li>\n<li>\n<p>意识和人工智能</p>\n<ol>\n<li>人工智能是人的意识能动性的一种特殊表现，是人的本质力量的对象化、现实化</li>\n<li>即使是最先进的智能机器，也达不到人类智能的层级，无法真正具有人的意识，不可能取代或超越人类智能</li>\n</ol>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>人工智能不具备情感、信念、意志等人类意识形式</li>\n<li>人工智能不可能真正具备人类的社会属性</li>\n<li>人工智能难以完全具备理解自然语言真实意义的能力</li>\n<li>人工智能实质上是对人脑组织结构与思维运行机制的模仿</li>\n<li>人工智能没有意识、不能实践、实践是人所特有的对象化活动</li>\n<li>人工智能可以取代人部分脑力劳动</li>\n<li>人工智能可以将意识活动部分的从人脑中分离出来</li>\n</ul>\n</li>\n<li>\n<p>世界的物质统一性原理</p>\n<ol>\n<li>世界的物质统一性（世界的本原是一个）\n<ul>\n<li>包括自然界和人类社会在内的整个世界</li>\n<li>真正统一性在于它的物质性</li>\n<li>世界统一于物质</li>\n</ul>\n</li>\n<li>自然界是物质的</li>\n<li>人类社会本质上是生产实践基础上形成的物质体系</li>\n<li>人的意识统一于物质（从意识的起源、本质、作用上看）</li>\n</ol>\n<ul>\n<li>其理论意义在于，它是辩证唯物主义最基本、最核心的观点，是马克思主义的基石<span class=\"red\">（帽子）</span></li>\n<li>其实践意义在于，它是我们从事一切工作的立足点，一切从实际出发是唯物主义一元论的根本要求</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"唯物辩证法\"><a class=\"anchor\" href=\"#唯物辩证法\">#</a> 唯物辩证法</h3>\n<h4 id=\"事物的联系和发展\"><a class=\"anchor\" href=\"#事物的联系和发展\">#</a> 事物的联系和发展</h4>\n<ul>\n<li>\n<p>唯物辩证法两大总特征</p>\n<ol>\n<li>唯物辩证法是关于世界普遍联系和永痕发展的科学</li>\n<li>联系和发展是唯物辩证法的总观点和总特征</li>\n</ol>\n</li>\n<li>\n<p>事物的普遍联系</p>\n</li>\n<li>\n<p>联系的内涵（概念）：<strong>联系是指事物内部各要素之间和事物之间相互影响、相互制约和相互作用的关系</strong></p>\n</li>\n<li>\n<p>联系的特点</p>\n<ol>\n<li>\n<p>联系具有客观性</p>\n<ul>\n<li>事物的联系是事物本身所固有的、不以人的意志为转移的【地球绕着太阳转】</li>\n</ul>\n</li>\n<li>\n<p>联系具有普遍性</p>\n<ul>\n<li>事物联系的普遍性有三层含义\n<ol>\n<li>任何事物内部的不同部分和要素是相互联系的，也就是说，任何事物都具有【内在的结构性】</li>\n<li>任何事物都不能孤立存在，都同其他事物处于一定的相互联系之中</li>\n<li>整个世界是相互联系的【统一整体】，每一事物都是世界普遍联系中的一个成分或环节，都是统一的联系之网上的一个网结，并通过它体现出联系的普遍性</li>\n</ol>\n</li>\n<li>世界的普遍联系是通过 “中介” 来实现的，所谓中介就是事物相互联系的媒介、环节或桥梁</li>\n</ul>\n</li>\n<li>\n<p>联系具有多样性</p>\n<ul>\n<li>世界上的事物是多样的，因而事物之间的联系也是多样的</li>\n<li>事物联系的主要方式可分为\n<ol>\n<li>直接联系与间接联系</li>\n<li>内部联系与外部联系</li>\n<li>本质联系与非本质联系</li>\n<li>必然联系与偶然联系</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>联系具有条件性</p>\n<ul>\n<li>条件是对事物发展和人的活动具有支持和制约作用</li>\n<li>条件是可以改变的，人们经过努力可以创造出事物发展所需要的条件</li>\n<li>改变和创造条件不是任意的，必须尊重事物发展的客观规律</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>事物的永恒发展</p>\n<ol>\n<li>内涵（概念）：概括一切形式的变化就是<span class=\"label\">💔运动</span>，运动变化的基本趋势是<span class=\"label\">发展</span></li>\n<li>发展及其实质\n<ul>\n<li>变化泛指事物发生的一切改变</li>\n<li>发展则是事物变化中前进的、上升的运动</li>\n<li>发展的<span class=\"red\">实质</span>是新事物的产生和旧事物的灭亡</li>\n</ul>\n</li>\n<li>新事物是不可战胜的（必然战胜旧事物）\n<ul>\n<li>新事物是指合乎历史前进方向、具有远大前途的东西</li>\n<li>旧事物是指丧失历史必然性、日趋灭亡的东西</li>\n<li>新事物是在旧事物的 “母体” 中孕育成熟的，它既否定了旧事物中消极腐朽的东西，又保留了旧事物中合理的、仍然适合新条件的因素，并添加了旧事物所不能容纳的新内容。（取其精华，去其糟普）</li>\n<li>从根本上符合人民群众的利益和要求，能够得到人民群众的拥护，因而必然战胜旧事物。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>新、旧事物相互区别的根本标志，在于是否同历史发展的必然趋势相符合，而不能单凭出现时间的先后</li>\n<li>规律是内在的、本质的、必然的联系</li>\n<li>人们可以根据事物固有的联系、改变事物的状态，调整原有的联系，建立新的联系</li>\n<li>否定是事物联系发展的环节，是旧事物向新事物的转变，是从旧质到新质的飞跃</li>\n<li>否定是新、旧事物联系的环节、新事物孕育产生于旧事物</li>\n<li>发展的实质：新事物的产生和旧事物的灭亡</li>\n<li>新事物必然战胜旧事物  <span class=\"label primary\">(新事物与旧事物的融合推动社会发展为错误表述)</span></li>\n<li>辩证否定的实质是：<span class=\"label\">扬弃</span></li>\n</ol>\n<ul>\n<li>扬弃是新事物对旧事物既批判又继承，既克服其消极因素，又保留其积极因素</li>\n<li>坚持事物发展是过程的思想，就要用历史的眼光看问题，把一切事物如实地看作变化、发展的过程，既要了解它们的过去，观察它们的现在，又要预见它们的未来</li>\n</ul>\n</li>\n<li>\n<p>对立统一规律是事物发展的根本规律 (唯物辩证法第一规律)</p>\n<ul>\n<li><span class=\"label info\"><strong>对立统一规律是唯物辩证法的实质和核心</strong></span></li>\n<li>矛盾是辩证法的核心概念\n<ul>\n<li>对立统一规律又称矛盾规律</li>\n<li>对立和统一分别体现了矛盾的两种基本属性（斗争性和同一性）</li>\n<li>简言之，矛盾即对立统一</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>矛盾的同一性和斗争性及其在事物发展中的作用</p>\n<ol>\n<li>矛盾的同一性和矛盾的斗争性的含义</li>\n</ol>\n<ul>\n<li>同一性和斗争性是矛盾的两种基本属性，是矛盾双方相互联系的两个方面</li>\n<li>矛盾的同一性是指矛盾着的对立面<span class=\"rainbow\">相互依存、相互贯通</span>的性质和趋势</li>\n<li>矛盾的斗争性是指矛盾着的对立面<span class=\"rainbow\">相互排斥、相互分离</span>的性质和趋势</li>\n<li>矛盾的同一性和矛盾的斗争性是相互联结、相辅相成的</li>\n<li>斗争性寓于同一性之中</li>\n<li>矛盾的斗争性是无条件的、绝对的</li>\n<li>矛盾的同一性是有条件的、相对的</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>和谐是相对的，有条件性的，只有在矛盾双方处于平衡，协调合作的情况下才可以</li>\n<li>矛盾的斗争性和同一性都可能处于主要的方面</li>\n<li>事物的性质是由主要矛盾的主要方面确定的</li>\n<li>事物发展的根本动力：矛盾同一性与斗争性的相互作用</li>\n<li>矛盾推动事物的发展，说明事物发展的根本原因不在事物的外部，而在于事物内部的矛盾性。事物的内部矛盾是事物发展的内因，它是事物变化的根据，规定着事物发展的方向。外因（外部矛盾）是事物变化的条件，它能够影晌事物的状况和发展进程， 但它心须通过内因而起作用。</li>\n</ol>\n</li>\n<li>\n<p>矛盾的普遍性和特殊性</p>\n<ul>\n<li>普遍性\n<ul>\n<li>矛盾存在于一切事物中，存在于一切事物发展过程的始终【无处不在】</li>\n</ul>\n</li>\n<li>特殊性\n<ul>\n<li>不同事物的矛盾又是具体的、特殊的</li>\n<li>不同事物的矛盾各有其特点</li>\n<li>同一事物的矛盾在不同发展过程和发展阶段各有不同特点</li>\n<li>构成事物的诸多矛盾以及每一矛盾的不同方面各有不同的性质、地位和作用</li>\n<li>主要矛盾是矛盾体系中处于支配地位、对事物发展起决定作用的矛盾</li>\n<li>每一对矛盾中有一方处于支配地位，起着主导作用，这是矛盾的主要方面</li>\n<li>事物的性质是由主要矛盾的主要方面所规定的</li>\n<li>坚持 “两点论” 和 “重点论” 的统一</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>矛盾解决的形式</p>\n<ol>\n<li>矛盾一方克服另一方；</li>\n<li>矛盾双方同归于尽；</li>\n<li>矛盾双方形成协同运动的新形式；</li>\n<li>矛盾双方融合成一个新事物【注意新旧事物不能融合】</li>\n<li>用不同的方法解决不同的矛盾是马克思主义的一个重要原则</li>\n</ol>\n</li>\n<li>\n<p>矛盾的普遍性和特殊性的辩证关系</p>\n<ol>\n<li>矛盾的普遍性即矛盾的共性</li>\n<li>矛盾的特殊性即矛盾的个性。矛盾的共性是无条件的、绝对的，矛盾的个性是有条件的、相对的</li>\n<li>共性寓于个性之中，没有离开个性的共性，也没有离开共性的个性</li>\n</ol>\n</li>\n<li>\n<p>量变质变规律 (唯物辩证法第二规律)</p>\n<ul>\n<li>事物存在的质、量、度\n<ul>\n<li>质是一事物成为自身并区别于其他事物的内在规定性</li>\n<li>量是事物的规模、程度、速度等可以用数量关系表示的规定性</li>\n<li>度是保持事物质的稳定性的数量界限，即事物的限度、幅度和范围。度的两端叫关节点或临界点</li>\n</ul>\n</li>\n<li>事物发展的量变和质变及其辩证关系\n<ul>\n<li>量变：量变是事物数量的增减和组成要素排列次序的变动</li>\n<li>质变：质变是事物性质的根本变化</li>\n<li>区分量变和质变的根本标志：变化是否超出度，在度的范围内的变化是量变，超出度的变化是质变</li>\n<li>量变和质变的辩证关系\n<ol>\n<li>量变是质变的必要准备</li>\n<li>质变是量变的必然结果</li>\n<li>量变和质变是相互渗透的</li>\n<li>量变质变规律体现了事物发展的渐进性【量变】和飞跃性【质变】的统一</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>质和事物的存在是直接同一的。事物丧失了自己的质，它就不再是自身而变成他物。量和事物是不可分离的，但量和事物的存在不是直接同一的，在一定范围内，量的增减不影响事物的存在。区分质是认识量的前提，考察量是认识质的深化</li>\n<li>矛盾普遍性（无处不在、无时不有）和特殊性（具体问题具体分析）</li>\n<li>矛盾的共性是无条件的、绝对的，矛盾的个性是有条件的、相对的</li>\n</ol>\n</li>\n<li>\n<p>否定之否定规律 （唯物辩证法第三规律）</p>\n<ul>\n<li>事物发展过程中的肯定和否定</li>\n<li>辩证否定观的基本内容</li>\n<li>否定之否定规律及其意义\n<ul>\n<li>是螺旋式上升或波浪式前进的过程，方向是前进上升的，道路是迂回曲折的，是前进性与曲折性的统一【我回来了，也变强了】</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>唯物辩证法基本范畴</p>\n<ol>\n<li>\n<p>内容与形式</p>\n<ul>\n<li>内容指构成事物的一切要素的总和，是事物存在的基础</li>\n<li>内容决定形式，形式反作用于内容</li>\n</ul>\n</li>\n<li>\n<p>本质与现象</p>\n<ul>\n<li>第一，现象是个别的、具体的，而本质是一般的、普遍的</li>\n<li>第二，现象是多变易逝的，本质是相对稳定的</li>\n<li>第三，现象是表面、外显的，可以直接为人的感官所感知，本质则深藏于事物的内部，只有靠人的理性思维才能把握</li>\n<li>现象表现本质，本质总是通过一定的现象表现自己的存在。任何现象都从一定的方面表现着本质，即使假象也是本质的表现本质与现象的相互依存表明：不表现为现象的本质和不表现本质的现象都是不存在的</li>\n</ul>\n</li>\n<li>\n<p>原因与结果</p>\n<ul>\n<li>原因与结果的区分既是确定的，又是不确定的</li>\n</ul>\n</li>\n<li>\n<p>必然与偶然</p>\n<ul>\n<li>必然存在于偶然之中，通过大量的偶然表现出来，并为自已开辟道路</li>\n</ul>\n</li>\n<li>\n<p>现实与可能</p>\n<ul>\n<li>现实蕴藏着未来的发展方向，会不断产生出新的可能</li>\n<li>发展就是现实与可能相互转化的过程</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>\n<p>相对独立性意思：A 决定 B，但是 B 又有自己的发展规律变化形式，B 对 A 具有反作用</p>\n</li>\n<li>\n<p>同一内容可以有多种形式，同一种形式也可以表现不同的内容</p>\n</li>\n<li>\n<p>真理的内容是客观的，形式是主观的【同一物理规律有不同数学表达形式】</p>\n</li>\n<li>\n<p>内容是事物存在的基础；内容是易变的，形式是稳定的【考研政治大纲每年都在变，但试卷形式稳定】</p>\n</li>\n<li>\n<p>现象有真象和假象之分，真象是事物本质直接正面的表现，假象则是从反面歪曲地、颠倒地表现本质的现象。真象和假象都是客观的现象，而错觉是主观的，错觉不表现事物的本质</p>\n</li>\n<li>\n<p>本质决定现象，现象表现本质。不存在不表现本质的现象</p>\n</li>\n<li>\n<p>在一个具体的事物中，原因就是原因，结果就是结果，原因在前，结果在后，二者不能混淆和颠倒（相互区别）。在事物因果联系的长链中，一种现象在一种联系中是原因，在另一种联系中则可能是结果，反之亦然（相互转化）</p>\n</li>\n<li>\n<p>不可能无法转化为可能，二者区别在于现实中有无根据和条件</p>\n</li>\n<li>\n<p>对人是否有利是区分：好的可能性与坏的可能性；可能性没有真实和虚假之分</p>\n</li>\n<li>\n<p>现实中的根据和条件是否充分是区分现实的可能性与抽象的可能性依据</p>\n</li>\n<li>\n<p>一个事物只要合乎发展的必然性迟早会变成现实</p>\n</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"唯物辩证法是认识世界和改造世界的根本方法\"><a class=\"anchor\" href=\"#唯物辩证法是认识世界和改造世界的根本方法\">#</a> 唯物辩证法是认识世界和改造世界的根本方法</h4>\n<ul>\n<li>\n<p>唯物辩证法<span class=\"blue\">本质</span>是批判的和革命的</p>\n</li>\n<li>\n<p>唯物辩证法是客观辩证法与主观辩证法的统一</p>\n<ul>\n<li>体现了唯物主义、辩证法、认识论的统一</li>\n<li>客观辩证法与主观辩证法在本质上是统一的，但在其表现形式上却是不同的。\n<ul>\n<li>主观辩证法：采取观念的、逻辑的形式，是同人类思维的自觉活动相联系</li>\n<li>客观辩证法：外部必然的形式，离开人的意识、思维而独立存在的，不以人的意志为转移。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"辩证思维方法\"><a class=\"anchor\" href=\"#辩证思维方法\">#</a> 辩证思维方法</h4>\n<ol>\n<li>辩证思维的主要方法：\n<ul>\n<li>归纳和演绎</li>\n<li>分析和综合</li>\n<li>抽象上升到具象、逻辑和历史相一致等方法。</li>\n</ul>\n</li>\n<li>矛盾分析方法是根本的认识方法\n<ul>\n<li>在唯物辩证法的方法论体系中，矛盾分析方法居于<span class=\"blue\">核心</span>的地位，是根本的认识方法。</li>\n</ul>\n</li>\n<li>学习唯物辩证法，不断增强思维能力，特别是不断增强\n<ul>\n<li>辩证思维能力</li>\n<li>历史思维能力</li>\n<li>系统思维能力</li>\n<li>战略思维能力</li>\n<li>底线思维能力</li>\n<li>创新思维能力</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"认识论\"><a class=\"anchor\" href=\"#认识论\">#</a> 认识论</h3>\n<h4 id=\"实践与认识\"><a class=\"anchor\" href=\"#实践与认识\">#</a> 实践与认识</h4>\n<ul>\n<li>\n<p>实践的本质和基本特征</p>\n<ul>\n<li>实践是人类能动地改造世界的社会性的物质活动</li>\n<li>基本特征\n<ul>\n<li>客观实在性</li>\n<li>自觉能动性</li>\n<li>社会历史性</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>实践的基本结构和形式</p>\n<ul>\n<li>\n<p>实践主体</p>\n<ul>\n<li>在实践活动中，实践主体是指具有一定的主体能力、从事现实社会实践活动的<span class=\"red\">人</span>，是实践活动中自主性和能动性的因素，担负着设定实践目的、操作实践中介、改造实践客体的任务</li>\n</ul>\n</li>\n<li>\n<p>实践客体</p>\n<ul>\n<li>实践客体是指实践活动所指向的<span class=\"red\">对象</span></li>\n</ul>\n</li>\n<li>\n<p>实践中介</p>\n<ul>\n<li>实践的中介系统可分为两个子系统：</li>\n<li>一是作为人的肢体延长、感官延伸、体能放大的物质性工具系统，如火车、电脑、雷达分别是对人的腿、脑、眼功能的延伸和放大。</li>\n<li>二是语言符号工具系统</li>\n</ul>\n</li>\n<li>\n<p>实践的主体和客体相互作用的关系<br />\n 1. 实践关系 (最根本的关系)<br />\n 2. 认识关系<br />\n 3. 价值关系</p>\n</li>\n</ul>\n</li>\n<li>\n<p>实践形式多样性</p>\n<ul>\n<li>\n<p>实践的三种基本类型</p>\n<ul>\n<li>物质生产实践 (最基本的实践活动)</li>\n<li>社会政治实践 (主要指人们的政治活动)</li>\n<li>科学文化实践 (虚拟实践)\n<ul>\n<li>其重要的形式有 科学、艺术、教育等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>实践对认识的决定作用</p>\n<ul>\n<li>实践是认识的基础\n<ul>\n<li>实践对认识的决定作用表现在以下四个方面：\n<ol>\n<li>实践是认识的来源</li>\n<li>实践是认识发展的动力</li>\n<li>实践是认识的目的</li>\n<li>实践是检验认识真理性的唯一标准. <span class=\"red\">(实践是认识的起点，也是认识的归宿)</span></li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>虽然实践是认识的来源，<strong>但是不能说 “认识总是落后于实践</strong>，（如预测、假说规划等超前于实践）</li>\n<li>实践是人所特有的对象化活动</li>\n<li>实践是认识的目的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>认识的本质</p>\n<ul>\n<li>辩证唯物主义认识论对认识本质的科学回答：【认识是主体在实践基础上对客体的能动反映】</li>\n</ul>\n<ol>\n<li>唯物主义反映论与唯心主义先验论对立</li>\n</ol>\n<ul>\n<li>唯物主义反映论\n<ul>\n<li>坚持<span class=\"label\">从物到感觉和思想</span>的唯物主义认识路线</li>\n</ul>\n</li>\n<li>唯心主义先验论\n<ul>\n<li>坚持从<span class=\"label\">思想和感觉到物</span>的唯心主义认识路线</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>辩证唯物主义能动反映论与旧唯物主义直观反映论的区别</li>\n</ol>\n<ul>\n<li>辩证唯物主义和旧唯物主义虽然都坚持反映论，认为认识是主体对客体的反映，但是两者之间有着本质的区别\n<ul>\n<li>\n<p>旧唯物主义认识论的基本特点是以感性直观为基础，把人的认识看成是消极地、被动地反映和接受外界对象，类似于照镜子那样的反射活动。它有两个严重的缺陷：</p>\n<ul>\n<li>一是离开实践考察认识问题，因而不了解实践对认识的决定作用。</li>\n<li>二是不了解认识的辩证本性，没有把认识看作一个不断发展的过程，认为认识是一次性完成的</li>\n</ul>\n</li>\n<li>\n<p>辩证唯物主义的认识论对旧唯物主义直观反映论的批判继承</p>\n<ul>\n<li>辩证唯物主义的认识论是建立在实践基础上的能动的反映论。它在继承了旧唯物主义反映论的合理前提的同时，又克服了它的严重缺陷，坚持以科学的社会实践为特征的实践观，即实践是人类能动地改造世界的社会性的物质活动，这是辩证唯物主义认识论与唯心主义认识论和旧唯物主义认识论的根本区别辩证唯物主义认识论具有两个突出的特点：</li>\n<li>一是把实践的观点引入认识论。</li>\n<li>二是把辩证法应用于反映论考察认识的发展过程，科学地揭示了认识过程中多方面的辩证关系，把认识看成一个由不知到知、由浅入深的充满矛盾的能动的认识过程</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/polictics/%E4%B8%A4%E7%A7%8D%E8%AE%A4%E8%AF%86%E8%AE%BA%E7%9A%84%E5%8C%BA%E5%88%AB.png\" alt=\"两种认识论的区别\" /><br />\n 3. 认识是主体在实践基础上对客体的能动反映</p>\n<ul>\n<li>认识是主体对客体的反映，是在思维中再现或摹写客观事物的状态、属性和本质</li>\n<li>主体对客体的反映是一个能动的创造性的过程（反映的创造性）</li>\n<li>在人的认识活动中，反映的特性与能动的创造特性，二者是<span class=\"label\">不可分割</span>的</li>\n</ul>\n</li>\n</ul>\n<div class=\"note default no-icon\">\n<p>认识的过程</p>\n</div>\n<ul>\n<li>\n<p>从实践到认识 （感性认识到理性认识的飞跃）</p>\n<ul>\n<li>认识运动的辩证过程，首先是从实践到认识的过程，即从实践中产生感性认识，然后能动地发展到理性认识。这是认识过程中的第一次飞跃</li>\n</ul>\n<ol>\n<li>感性认识和理性认识的含义</li>\n</ol>\n<ul>\n<li>\n<p>感性认识是指人们在实践基础上，由感觉器官直接感受到的关于事物的现象、事物的外部联系、事物的各个方面的认识，包括感觉、知觉和表象三种形式。感性认识是认识的低级阶段，突出特点是直接性、具体性。因为感性认识还没有深入到对事物本质的认识，所以具有不深刻的局限性，必须进一步上升到理性认识</p>\n</li>\n<li>\n<p>理性认识是指人们借助抽象思维，在概括整理大量感性材料的基础上，达到关于事物的本质、全体、内部联系和事物自身规律性的认识。理性认识包括概念、判断、推理三种形式。理性认识是认识的高级阶段，具有抽象性、间接性的特点，它在形式上超越了客观事物，而在内容上则更深刻、更正确、更完整地反映了客观事物</p>\n</li>\n<li>\n<p>区别：感性认识和理性认识在内容和形式上都有质的区别。所以，“熟知不等于真知”,“感觉到了的东西，我们不能立刻理解它”</p>\n</li>\n<li>\n<p>联系：第一，理性认识依赖于感性认识。感性认识是认识过程的起点，是达到理性认识的必经阶段，没有感性认识，就没有理性认识。理性认识对感性认识的这种依赖关系，是认识对实践依赖关系的重要表现。第二，感性认识有待于发展和深化为理性认识。认识的任务在于经过感觉达到对事物的本质、规律性的认识，感性认识是认识的初级阶段，是对事物外部联系的认识，还不能达到对事物的本质和规律的认识，因此感性认识还不是完全的认识。第三，感性认识和理性认识相互渗透、相互包含。一方面，感性中有理性，人的感觉是渗透着理性的感觉；另一方面，理性中有感性，理性不仅以感性材料为基础，而且也以文字符号等感性形式的语言作为表达手段</p>\n</li>\n<li>\n<p>感性认识和理性认识的辩证统一关系是在实践的基础上形成的，也需要在实践中发展。绝不能割裂二者的辩证统一关系，否则就会走向唯理论（片面强调理性认识）和经验论（片面强调感性认识），在实际工作中表现为教条主义和经验主义</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>从感性认识向理性认识的飞跃</li>\n</ol>\n<ul>\n<li>从感性认识上升到理性认识，必须具备两个基本条件：第一，投身实践，深入调查，获取十分丰富和合乎实际的感性材料。这是实现由感性认识上升到理性认识的基础。第二，经过理性思考的作用，将丰富的感性材料加以去粗取精、去伪存真、由此及彼、由表及里的处理加工</li>\n</ul>\n<ol start=\"4\">\n<li>认识过程中的理性因素和非理性因素</li>\n</ol>\n<ul>\n<li>理性因素是指人的理性直观、理性思维等能力它在认识活动中的作用主要有指导作用、解释作用和预见作用等</li>\n<li>非理性因素是指人的情感和意志（包括冲动、欲望、本能等）。从广义上看，还包括认识能力中具有不自觉、非逻辑性等特点的认识形式，如联想、想象、猜测、直觉、顿悟、灵感等。非理性因素对于人的认识能力和认识活动具有激活、驱动和控制作用。</li>\n</ul>\n</li>\n<li>\n<p>从认识到实践（理性认识到实践的飞跃）</p>\n<ul>\n<li>从认识到实践，是认识过程的第二个阶段，是第二次能动的飞跃，也是认识过程中更为重要的一次飞跃。其必要性和重要性在于两个方面：\n<ul>\n<li>一是认识世界的目的是改造世界。</li>\n<li>二是认识的真理性只有在实践中才能得到检验和发展</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>实现飞跃的条件</p>\n<ul>\n<li>需要经过一定的中介环节（包括确定实践目的，形成实践理念，制定实践方案，进行中间实验，运用科学的实践方法等）；让理论为群众所掌握，转化为认识世界、改造世界的物质力量。只有这样，理论才能真正发挥指导作用，并随着实践的发展而发展</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>\n<p>正确的认识指导实践会使实践顺利进行、达到预期的效果；当错误的认识误导实践肘，就会对实践产生消极的乃至破坏性的作用，使实践失败【都能指导实践】</p>\n</li>\n<li>\n<p>认识过程以理性因素为主导，同时又有非理性因素参与的过程</p>\n</li>\n<li>\n<p>人的认识是一个循环往复和无限发展的过程【不存在理性认识是认识的终点此类说法】</p>\n</li>\n<li>\n<p>认识世界和改造世界统一的基础是实践</p>\n</li>\n<li>\n<p>实现由认识向实践的飞跃，需要经过一定的中介环节<span class=\"rainbow\">确定目的、制定方案、进行实验</span></p>\n</li>\n</ol>\n<ul>\n<li>认识的过程中的影响因素（理性因素和非理性因素）</li>\n<li>认识的两大规律（反复性和无限性）</li>\n<li>认识和实践是具体的和历史的统一\n<ul>\n<li>认识的矛盾运动过程是主观与客观、认识与实践具体的历史的统一过程。所谓具体的，即主观认识要同一定时间、地点、条件下的客观实践相符合；所谓历史的，即主观认识要同特定历史发展阶段的客观实践相符合。由于客观实践是具体的、历史的，所以，主观认识也应当是具体的、历史的。当事物的具体过程已经向前推移，转变到另一个具体过程的时候，主观认识就应当随之而转变</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"真理与价值\"><a class=\"anchor\" href=\"#真理与价值\">#</a> 真理与价值</h4>\n<ul>\n<li>\n<p>人们的实践活动，一方面要遵循事物的本质和规律，按规律办事；另一方面，又要符合人自身的尺度和需要，体现人的活动的目的性</p>\n</li>\n<li>\n<p>真理的客观性</p>\n<ul>\n<li>真理是标志主观与客观相符合的哲学范畴，是对客观事物及其规律的正确反映。这个定义表明，真理的内容是<span class=\"red\">客观的</span>，形式是<span class=\"red\">主观的</span></li>\n<li>凡真理都是客观真理。真理的客观性或客观真理是指真理的内容是客观的。真理中包含着不以人的意志为转移的客观内容。</li>\n<li>客观性是真理的<span class=\"red\">本质属性</span></li>\n<li>它所反映的内容是<span class=\"red\">客观的</span></li>\n</ul>\n</li>\n<li>\n<p>真理的一元性</p>\n<ul>\n<li>真理的客观性决定了真理的一元性</li>\n<li>在同一条件下，对于特定实践活动中的特定的认识对象来说，只能有一种认识是与特定的认识客体的状态、本质和规律相一致的，这种认识就是真理.</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>真理与规律既有联系，又有区别。联系在于真理是对客观事物及其规律的正确反映。区别在于规律是客观的，而真理的内容是客观的，形式是主观的。真理是一种认识</li>\n<li>我们既不能因为真理的客观性而把真理等同于客观实在；也不能因为真理具有主观形式而把真理误认为主观产物。</li>\n<li>真理根本特征：主观与客观相符合，对客体的认识与客体的实际相符合</li>\n</ul>\n</li>\n<li>\n<p>真理的绝对性和相对性及其辩证关系</p>\n<ul>\n<li>真理的绝对性是指真理主客观统一的确定性和发展的无限性。</li>\n<li>它有两层含义：\n<ol>\n<li>一是指任何真理都标志着主观与客观相符合，都包含着不依赖于人和人的意识的客观内容，都同谬误有原则的界限。这是绝对的、无条件的。因此，承认了真理的客观性也就是承认了真理的绝对性。</li>\n<li>二是人类认识按其本性来说，能够正确认识无限发展着的物质世界，认识每前进一步，都是对无限发展着的物质世界的接近，这也是绝对的、无条件的。在这个意义上，承认世界的可知性，也就是承认了真理的绝对性</li>\n</ol>\n</li>\n<li>真理的相对性是指人们在一定条件下对客观事物及其本质和发展规律的正确认识总是有限度的、不完善的</li>\n<li>它也有两层含义：\n<ol>\n<li>一是从客观世界的整体来看，任何真理都只是对客观世界的某一阶段、某一部分的正确认识，有待扩展；</li>\n<li>二是就特定事物而言，任何真理都只是对客观对象一定方面、一定层次和一定程度的正确认识，有待深化。也就是说，任何真理都只能是主观对客观事物近似正确即相对正确的反映</li>\n</ol>\n</li>\n<li>真理的绝对性和相对性的辩证统一关系\n<ol>\n<li>第一，二者相互依存。任何真理都既是绝对的，又是相对的 第二，二者相互包含。 一是真理的绝对性寓于真理的相对性之中；二是真理的相对性必然包含并表现着真理的绝对性。从真理的发展上看，任何真理性的认识都是由真理的相对性向绝对性转化过程中的一个环节，真理永远处在由相对向绝对的转化和发展中，是从真理的相对性走向绝对性、接近绝对性的过程。毛泽东把真理的绝对性与相对性的关系比喻为长河与水滴的关系.<span class=\"rainbow\"> 无数相对的真理之总和，就是绝对的真理</span></li>\n</ol>\n</li>\n<li>真理的绝对性与相对性根源于人类认识世界的能力的无限性与有限性、绝对性与相对性的矛盾\n<ul>\n<li rainbow=\"\">人类的思维按其本性、使命、可能和历史的终极目的来说，是能够认识无限发展着的物质世界的（即思维的至上性）。但是，具体到每一个人乃至每一代人，又要受到客观事物及其本质的显露程度、社会历史的实践水平、主观的条件以及生命的有限性等各方面的限制（即思维的非至上性）。[人的认识能力、思维能力既然是无限性与有限性、绝对性与相对性的统一，作为人的正确认识成果的真理，当然也是绝对性和相对性的统一].</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>真理是客观的，一元的，不断发展的，具体的，全面的，有用的</li>\n<li>真理永远处于相对向绝对的转化过程中，是发展的</li>\n<li>真理的绝对性和相对性是同一客观真理的两种属性，而不是同一真理不同表述方式</li>\n<li>已经确定的真理是不能够被推翻的【当我们谈到真理具有相对性的时候，并不是推翻以前的真理，而是在深度、完整程度上进行深化和扩展。已经确定的真理是不能被推翻的。任何真理都标志着主观与客观相符台。真理是具体的，抛开条件谈认识是否具有真理性是没有意义的。在一定条件下，真理就是真理永远不能被推翻。当条件变化时，原有的 (真理性)<strong> 认识可能不再适用了</strong>，甚至可能变成谬误</li>\n<li>真理是具体的，任何真理都是在一定范围内、一定条件下才能够成立</li>\n<li>真理既是绝对的又是相对的</li>\n</ul>\n</li>\n<li>\n<p>真理与谬误</p>\n<ul>\n<li>\n<p>在人的认识活动中，由于受到主观和客观因素的多重限制，既能形成真理，也能造成谬误。<span class=\"rainbow\">谬误是同客观事物及其发展规律相违背的认识，是对客观事物及其发展规律的歪曲反映</span></p>\n</li>\n<li>\n<p>真理与谬误的对立统一关系</p>\n<ul>\n<li>第一，真理与谬误相互对立。真理和谬误是性质不同的两种认识。在确定的对象和范围内，真理与谬误的对立是绝对的，与对象相符合的认识就是真理，与对象不相符合的认识就是谬误，二者存在着原则界限</li>\n<li>第二，真理与谬误又是统一的，它们相互依存、相互转化。真理是与谬误相比较而存在的，没有真理也无所谓谬误，没有谬误也无所谓真理。真理与谬误在一定范围内的对立是绝对的，但超出一定范围，它们就会互相转化</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>谬误也是对客体的反映，不过是错误歪曲的反映【说谬误是主观自生的说法错误；参照假象】</li>\n<li>真理是具体的，任何真理都是在一定范围内、一定条件下才能够成立<span class=\"red\">超出这个范围，失去特定条件就会变成谬误</span>.(如牛顿力学作为真理是以物体宏观低速运动为其成立的范围和条件的)</li>\n<li>真理是全面的【科学体系某个原理不能切断同其他原理的联系】</li>\n</ul>\n</li>\n<li>\n<p>真理的检验标准：实践</p>\n<ul>\n<li>\n<p>实践之所以能够作为检验真的唯一标准，是由真理的本性和实践的特点决定的</p>\n</li>\n<li>\n<p>实践之所以能够作为检验真的唯一标准，是由真理的本性和实践的特点决定的.</p>\n<ul>\n<li>第一，真理的本性在于主观和客观相符合。所谓检验真理，就是检验人的主观认识同客观实际是否相符合以及符合的程度。这就决定了检验标准既不能在纯粹主观范围内去寻找，也不能在纯粹客观范围内去解决，而只能是把主观同客观联系起来加以比较对照。检验认识真理性的标准，只能是把主观和客观联系起来的桥梁 (纽带、“交错点 &quot;)—— 社会实践</li>\n<li>第二，从实践的特点看，实践是主观见之于客观的活动，不仅具有普遍性的特点和优点，而且具有直接现实性的特点和优点。实践能够把一定的认识、理论变成直接的、实实在在的现实，从而判明主观与客观是否一致，判明认识是否具有真理性。实践的直接现实性，是它能够成为检验真理唯一标准的主要根据</li>\n</ul>\n</li>\n<li>\n<p>在实践检验真理的过程中，逻辑证明可以起到重要的补充作用</p>\n<ul>\n<li>逻辑证明是运用已知的正确概念和判断，通过一定的推理，从理论上确定另一个判断的正确性的方法。</li>\n<li>逻辑证明是探索真理、论证真理的方式，是正确思维和表达的必要条件，也是建立科学理论体系的重要途径。但是，逻辑证明只能回答前提与结论的关系是不是符合逻辑的问题，不能回答结论是不是符合客观实际（真理性）的问题，因而，不能取代实践作为检验认识真理性的标准。已被逻辑证明了的东西，还必须经过实践的检验，并最终服从检验的结果</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>实践标准的确定性和不确定性</p>\n<ul>\n<li>\n<p>实践标准的确定性即绝对性，是指实践作为检验认识真理性的标准的唯一性</p>\n<ul>\n<li>实践是检验真理的唯一标准，此外再无别的标准；凡是经过实践证明了的一切认识都是客观真理，都具有不可推翻的性质；实践能够检验一切认识，即使当前的实践还不能加以判定，最终也会被以后的实践作出裁决。肯定了实践标准的客观性和唯一性，也就必须承认实践标准的确定性、绝对性</li>\n<li>实践标准的不确定性即相对性，是指实践作为检验真理标准的条件性。一定历史阶段上的具体实践具有局限性，它往往不能充分证明或驳倒某一认识的真理性；实践检验真理是一个过程，不是一次完成的；已被实践检验过的真理还要继续经受实践的检验。因此，我们必须把实践对真理的检验，看作全部人类实践即无数个别的、历史发展着的、整个社会的实践对真理的检验。实践检验和证明真理是一个过程，这个过程永远不会完结。在发展的实践中不断验证认识的真理性，这就是实践检验真理的辩证发展过程</li>\n</ul>\n</li>\n<li>\n<p>实践作为检验认识真理性的标准，既是确定的，又是不确定的，是确定性与不确定性的统一</p>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>实践标准的不确定性是指实践作为检验真理标准的条件性</li>\n<li>必须把人的全部实践一作为真理的标准</li>\n<li>实践对真理的检验具有相对性、有限性，不可能绝对的永恒的，一劳永逸的予以确证</li>\n</ul>\n</li>\n</ul>\n<div class=\"note default\">\n<p>真理与价值的辩证统一</p>\n</div>\n<ul>\n<li>\n<p>哲学上的 “价值” 的含义</p>\n<ul>\n<li>哲学上的 价值 是指在实践基础上形成的主体和客体之间的意义关系。价值由两方面构成： 一是主体的需要；二是客体的特性。价值既具有主体性的特征，又具有客观基础</li>\n</ul>\n</li>\n<li>\n<p>价值基本特性</p>\n<ul>\n<li>第一，价值具有<strong>主体性</strong>。价值直接同主体相联系，始终以主体为中心。其一，价值关系的形成依赖于主体的存在，同一客体对于不同主体的价值是不同的（例如，药物对于健康人并没有直接的价值，而对于病人则具有直接的价值）。其二，价值关系的形成依赖于主体的创造，使客体潜在的价值转化为现实的价值主客体之间的价值关系不是一种自然的现成关系，而是主体在实践基础上确立的与客体之间的一种创造性的关系【价值是相对于主体而言的，正因为主体的实践活动，才创造了事物与人之间的价值关系，才有了自然界原本不具有的价值现象；所谓益虫害虫实际上是对人类的益和害】</li>\n<li>第二，价值具有客观性。这是指在一定条件下客体对于主体的意义不依赖于主体的主观意识而存在。价值是一种客观存在，独立于人们对它的认识和评价。首先，主体的存在和需要是客观的。其次，客体的存在、属性及作用是客观的【电脑能满足人类上网的需求】</li>\n<li>第三，价值具有多维性。这是指每个主体的价值关系具有多样性，同一客体相对于主体的不同需要会产生不同的价值【一块钻石对于主体的不同需要来说，可能构成多维的价值关系】</li>\n<li>第四，价值具有社会历史性。价值关系中的主体是在一定社会关系中从事实践的具体的人，随着实践和历史的发展，主体和客体以及主客体之间的关系发生变化，导致人们对客体价值的判断也会发生改变。因此，必须用社会的和历史的眼光考察价值现象【读书是唯一的出路吗？】</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>价值不是实体，而是主体与客体之间一种特定的关系。在价值关系中，不是人趋近物，而是物趋近人，具有客观需要的现实的主体是整个价值关系的中心</li>\n<li>价值具有主体性和客观性。注意这里是 “主体性” 而不是 “<strong>主观性</strong>”。主观和主观性是指人的意识，思维所特有的一种状态和属性；主体是指从事认识活动和实践活动的人。主体不等于主观，二者之间既有联系又有区别</li>\n<li>人类的实践活动总是受着真理尺度和价值尺度的制约</li>\n<li>任何成功的实践都是真理尺度和价值尺度的统一，是合规律性和合目的性的统一</li>\n</ul>\n</li>\n</ul>\n<div class=\"note default\">\n<p>价值评价的特点及其标准</p>\n</div>\n<ol>\n<li>\n<p>第一，评价以主客体之间的价值关系为认识对象。以获得关于客体对于主体的意义即 “善”“美” 的认识为目的。（知识性认识以求真为认识目的；价值评价以善和美为认识目的）</p>\n</li>\n<li>\n<p>第二，<span class=\"rainbow\">评价结果与评价主体直接相关，受主体意志的影响</span>（与之相对，知识性认识的结果不以主体意志为转移）</p>\n</li>\n<li>\n<p>第三，评价结果的正确与否依赖于对客体状况和主体需要的认识。只有对主体和客体都有了正确认识，才能对主客体间的价值关系作出正确评价</p>\n</li>\n<li>\n<p>第四，价值评价有科学与非科学之别。科学的评价是客观公正、全面有效的评价。相反，非科学的评价是歪曲、遮蔽客观的价值关系的评价。评价作为一种价值判断活动，虽具有主观性，但并不是一种主观随意的认识活动，只有正确反映价值关系的评价才是正确的评价。对于任何主体而言，是否推动社会历史进步，是否符合社会发展趋势，是否维护、满足了最广大人民的需要和根本利益，是价值评价的最高标准，是判断特定主体实际需要是否合理的最高尺度</p>\n</li>\n</ol>\n<div class=\"note default\">\n<p>真理与价值在实践中的辩证统一</p>\n</div>\n<ul>\n<li>\n<p>实践的真理尺度和价值尺度</p>\n<ul>\n<li>实践的真理尺度是指在实践中人们必须遵循正确反映客观事物本质和规律的真理。实践的价值尺度是指在实践中人们都是按照自己的尺度和需要去认识世界和改造世界。任何实践活动都是在这两种尺度共同制约下进行的，<span class=\"rainbow\">任何成功的实践都是真理尺度和价值尺度的统一</span>，<span class=\"rainbow\">是合规律性和合目的性的统一</span></li>\n</ul>\n</li>\n<li>\n<p>真理与价值在实践中的辩证统一关系</p>\n<ul>\n<li>一方面，价值尺度必须以真理为前提。只有按照真理办事，才能在实践中取得成功。另一方面，人类自身需要的内在尺度，推动着人们不断发现新的真理。脱离了价值尺度，真理就缺失了主体意义。基于实践的具体性和历史性，真理尺度与价值尺度的统一也是具体的和历史的，二者的统一会随着实践的发展而不断发展到更高级的程度</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li><span class=\"green\">对于真理，不能说它对谁来说是真理</span>.<span class=\"red\"> 对于价值， 则心须说它对谁来说有价值</span></li>\n<li><strong>真理必然是具有价值的</strong></li>\n</ol>\n</li>\n</ul>\n<h4 id=\"认识世界和改造世界\"><a class=\"anchor\" href=\"#认识世界和改造世界\">#</a> 认识世界和改造世界</h4>\n<ul>\n<li>\n<p>认识世界和改造世界必须用于创新</p>\n</li>\n<li>\n<p>改造客观世界和改造主观世界及其辩证关系</p>\n</li>\n<li>\n<p>从必然走向自由</p>\n<ul>\n<li>自由是表示人的活动状态的范畴，是指人在活动中通过认识和利用必然所表现出的一种自觉自主的状态。必然性即规律性，指的是不依赖于人的意识而存在的自然和社会发展所固有的客观规律。认识必然、争取自由，是人类认识世界和改造世界的根本目标，是一个历史性的过程。由必然到自由表现为人类不断地从必然王国走向自由王国的过程。</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>必然是自由的根据和限度</li>\n<li>对于人来说，客观必然性既不能摆脱或绕开，<strong> 也不能废除或排除</strong>，<strong> 人的活动要受到必然性的制约。客观必然性既是对人的自由的约束</strong>，<strong> 又是人实现自由的根据。对必然的认识越全面和深刻</strong>，<strong> 对事物的判断就越准确</strong>，<strong> 行动就越主动</strong>，自由的程度就越大。</li>\n<li>必然王国和自由王国是人类在客观世界面前所处的两种不同的社会活动状态。从必然王国到自由王国是永无止境的无限发展过程</li>\n<li>自由不是由自；认识必然，追求自由。自由不代表不受任何限制</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"唯物史观\"><a class=\"anchor\" href=\"#唯物史观\">#</a> 唯物史观</h3>\n<h4 id=\"人类社会的存在与发展\"><a class=\"anchor\" href=\"#人类社会的存在与发展\">#</a> 人类社会的存在与发展</h4>\n<div class=\"note primary\">\n<p>唯物史观和唯心史观的对立</p>\n</div>\n<ul>\n<li>\n<p>社会历史观的基本问题：社会存在和社会意识的关系问题</p>\n<ul>\n<li>哲学基本问题在历史观中的贯彻和表现就是历史观的基本问题，即社会存在与社会意识的关系问题。正确认识这一问题是解决其他社会历史观问题的<span class=\"red\">基础和前提</span></li>\n</ul>\n<ol>\n<li>两种根本对立的历史观</li>\n</ol>\n<ul>\n<li>历史观是人们在认识社会历史现象、解决社会问题时所采取的根本观点。在对待社会历史发展及其规律问题上，存在着两种根本对立的观点：\n<ul>\n<li>一种是唯物史观（认为社会存在决定社会意识），</li>\n<li>另一种是唯心史观（认为社会意识决定社会存在）。主张社会存在决定社会意识，还是社会意识决定社会存在，是唯物史观与唯心史观的根本分野</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>在马克思主义产生之前，唯心史观一直占据统治地位</li>\n</ol>\n<ul>\n<li>唯心史观的主要缺陷： 一是至多考察了人的活动的思想动机，而没有进一步考究思想动机背后的物质动因和经济根源；二是只石到个人在历史上的作用，而忽视人民群众创造历史的决定作用</li>\n</ul>\n<ol start=\"3\">\n<li>唯物史观的创立马克思科学地解决了社会存在与社会意识的关系问题，创立了唯物史观唯物史观实现了自然观与历史观在唯物主义基础上的统一，把人们对社会历史的认识，从唯心史观的统治下彻底解放出来；给社会历史的研究提供了科学的理论和方法；把对社会主义的研究奠定在实践的基础之上，从而使社会主义成为科学</li>\n</ol>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>社会存在和社会意识及其辩证关系</p>\n</div>\n<ul>\n<li>社会存在\n<ul>\n<li>\n<p>社会存在也称社会物质生活条件，是社会生活的物质方面，主要包括自然地理环境、人口因素和物质生产方式</p>\n</li>\n<li>\n<p>自然地理环境</p>\n<ul>\n<li>是人类社会生存和发展的永恒的、必要的条件，是人们生活和生产的自然基础</li>\n</ul>\n</li>\n<li>\n<p>人口因素</p>\n<ul>\n<li>是社会存在和发展的必要条件，它对社会发展起着重要作用</li>\n</ul>\n</li>\n<li>\n<p>自然地理环境和人口因素</p>\n<ul>\n<li>对社会发展起着加速或延缓的作用，但都不能脱离社会生产而发生作用，都不能决定社会的性质和社会形态的更替</li>\n</ul>\n</li>\n<li>\n<p>物质生产方式</p>\n<ul>\n<li>\n<p>是指人们为获取物质生活资料而进行的生产活动的方式，它是生产力和生产关系的统一体，集中地体现了人类社会的物质性</p>\n</li>\n<li>\n<p>生产方式中的生产力体现着人们改造自然的现实的物质力量</p>\n</li>\n<li>\n<p>物质生产方式是社会历史发展的决定力量<br />\n<img data-src=\"/img/polictics/%E7%A4%BE%E4%BC%9A%E5%AD%98%E5%9C%A8.png\" alt=\"社会存在\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>社会意识\n<ul>\n<li>社会意识是社会生活的精神方面，是社会存在的反映。属于上层建筑的社会意识形式称为社会意识形态，主要包括政治法律思想、道德、艺术、宗教、哲学等</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/polictics/%E7%A4%BE%E4%BC%9A%E6%84%8F%E8%AF%86.png\" alt=\"社会意识\" /></p>\n<ul>\n<li>社会存在和社会意识的辩证关系\n<ul>\n<li>\n<p>社会存在决定社会意识，社会意识是社会存在的反映，并反作用于社会存在</p>\n<ul>\n<li>社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映。</li>\n<li>社会意识是人们进行社会物质交往的产物。</li>\n<li>随着社会存在的发展，杜会意识也相应地或迟或早地发生变化和发展</li>\n</ul>\n</li>\n<li>\n<p>社会意识既依赖于社会存在，又具有相对独立性</p>\n<ul>\n<li>社会意识与社会存在发展的不完全同步性和不平衡性</li>\n<li>社会意识内部各种形式之间的相互影响及各自具有的历史继承性</li>\n<li>社会意识对社会存在能动的反作用。这是社会意识相对独立性的突出表现</li>\n<li>先进的社会意识，反映了社会发展的客观规律，对社会发展起着积极的促进作用；落后的社会意识不符合社会发展的规律，对社会发展起着阻碍的作用</li>\n</ul>\n</li>\n<li>\n<p>社会存在和社会意识辩证关系原理的意义对社会历史的研究真正成为科学，从而揭示了人类社会发展的规律。</p>\n</li>\n<li>\n<p>它对于推进社会发展包括社会文化建设具有重要指导意义。</p>\n<ul>\n<li>它在人类思想史上第一次正确回答了社会历史观的基本问题，宣告了唯心史观的彻底破产，使</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>并非只有先进的社会意识才能对社会存在发挥反作用。不论是先进的社会意识，还是落后的社会意识，<strong>都会对社会存在产生反作用</strong>，只不过反作用的性质不同而已</li>\n<li>社会意识的能动作用是通过指导人们的实践活动实现的。<strong>思想本身并不能实现什么，要实现思想就要诉诸实践</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>生产力与生产关系的矛盾运动及其规律 （第一社会基本矛盾）</p>\n</div>\n<ul>\n<li>\n<p>生产力</p>\n<ul>\n<li>含义：生产力是人类在生产实践中形成的改造和影响自然以使其适合社会需要的物质力量。生产力具有客观现实性【与人的主观意识相独立】和社会历史性【不同社会历史时期生产力不一样】</li>\n</ul>\n</li>\n<li>\n<p>结构：生产力具有复杂的系统结构。其基本要素包括：</p>\n<ul>\n<li>劳动资料，也称劳动手段：它是人们在劳动过程中所运用的物质资料或物质条件，是人和劳动对象之间的媒介。其中最重要的是生产工具。生产工具是生产力发展水平的客观尺度，是区分社会经济时代的客观依据（物质标志）</li>\n<li>劳动对象：一切自然物质都是可能的劳动对象，劳动资料和劳动对象合称生产资料</li>\n<li>劳动者：劳动者是具有一定生产经验、劳动技能和知识，能够运用一定劳动资料作用于劳动对象、从事生产实践活动的人。劳动者是生产力中最活跃的因素。生产资料和劳动者相结合，才能变为现实生产力</li>\n<li>科学技术是生产力中的重要因素，科学技术能够应用于生产过程，与生产力中的劳动资料、劳动对象和劳动者等因素相结合而转化为实际生产能力。科学技术是先进生产力的集中体现和主要标志，是第一生产力【科技在生产劳动中起决定性作用，社会历史发展中决定作用是社会基本矛盾】</li>\n</ul>\n</li>\n<li>\n<p>生产关系</p>\n<ul>\n<li>含义：生产关系是人们在物质生产过程中形成的不以人的意志为转移的经济关系，实质是人们的物质利益关系。生产关系是社会关系中最基本的关系。政治关系、家庭关系、宗教关系等其他社会关系，都受生产关系的支配和制约</li>\n<li>内容：生产关系包括生产资料所有制关系、生产中人与人的关系和产品分配关系。在生产关系中，生产资料所有制关系是最基本的、决定性的，它是人们进行物质资料生产的前提，构成全部生产关系的基础，是区分不同生产方式、判定社会经济结构性质的客观依据</li>\n<li>分析生产关系必须透过 “物” 看到 “ 物” 后面的人与人的关系，生产关系具有客观性\n<ul>\n<li>生产关系是一种客观的物质的社会关系。生产关系虽然是一种人和人的关系，但它是在物质生产过程中结成的关系，是不以人的意志为转移的。首先，生产关系具有客观性，本质上是生产力的社会存在形式，人们不能离开生产力的发展状况自由地选择生产关系，也不能任意改变生产关系。其次，生产关系是一种物质利益关系，它体现着人们之间的物质经济利益，不是人们的主观愿望和要求。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>生产关系一定要适合生产力状况的规律（人类社会发展的基本规律）</p>\n<ul>\n<li>\n<p>生产力与生产关系的相互关系：</p>\n<ul>\n<li>生产力和生产关系是社会生产不可分割的两个方面。在社会生产中，生产力是生产的物质内容，生产关系是生产的社会形式，二者的有机结合和统一构成社会的生产方式。生产力与生产关系的相互关系是：生产力决定生产关系，而生产关系又反作用于生产力。</li>\n<li>第一，生产力决定生产关系。在二者的矛盾运动中，生产力是居支配地位、起决定作用的方面。首先，生产力状况决定生产关系的性质。有什么样的生产力，就会产生什么样的生产关系。其次，生产力的发展决定生产关系的变化。生产关系是生产力发展需要的产物，只有当它为生产力提供足够的发展空间时才能够存在。</li>\n<li>第二，生产关系对生产力具有能动的反作用。主要表现为两种情形：当生产关系适合生产力发展的客观要求时，它对生产力的发展起推动作用；当生产关系不适合生产力发展的客观要求时，它就会阻碍生产力的发展。</li>\n<li>生产关系对生产力的反作用归根到底还是由生产力决定的，生产关系对生产力反作用的性质也是取决于它是否适合生产力的状况。因此，判断一种生产关系是否优越的标准，在于这种生产关系对生产力是适合的还是不适合的，是促进还是阻碍生产力发展。不能离开生产力的状况和要求，孤立地、抽象地行待生产关系。</li>\n</ul>\n</li>\n<li>\n<p>生产力与生产关系予盾运动规律</p>\n<ul>\n<li>生产力与生产关系的相互作用是一个过程，表现为二者的矛盾运动。这种矛盾运动中的内在的、本质的、必然的联系，就是生产关系一定要适合生产力状况的规律，亦称生产力与生产关系的矛盾运动规律。这是人类社会发展的基本规律。</li>\n<li>这一规律就内容看，包括两个方面：第一，生产力的状况决定一定的生产关系的产生及其变化发展的方向和形式；第二，生产关系反作用于生产力，当生产关系适合生产力的状况时对生产力发展起着促进作用，反之将起着阻碍作用。从过程上看，这一规律表现为生产关系对于生产力总是从基本适合到基本不适合，再到基本适合；与此相适应，生产关系也总是从相对稳定到新旧更替，再到相对稳定。生产力和生产关系的这种矛盾运动循环往复、不断推动社会生产发展，进而推动整个社会逐步走向更高阶段。生产关系一定要适合生产力状况的规律是社会形态发展的普遍规律</li>\n<li>第一，理论意义：这一原理在人类思想史上彻底否定了以 “道德说教” 作为评判历史功过是非的思想体系，第一次科学地确立了生产力发展是 “社会进步的最高标准” ，并且把生产力和生产关系矛盾运动的规律作为判断时代变革的客观依据。</li>\n<li>第二，现实意义：这一原理是马克思主义政党制定路线、方针、政策的重要依据</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ol>\n<li>生产方式是生产力与生产关系的总和。</li>\n<li>生产力是人类改造自然的物质力量</li>\n<li>生产关系是人们在物质生产过程中形成的不以人的意志为转移的经济关系</li>\n<li>物质资料的生产方式构成了人类社会存在和发展的基础，集中体现了人类社会的物质性</li>\n<li>生产力体现人与自然的关系，生产关系指人与人之间的经济关系</li>\n<li>劳动者是生产力中最活跃的因素</li>\n<li>判断社会性质的主要标准：生产关系的性质</li>\n</ol>\n<ul>\n<li>社会进步的根本内容：<span class=\"label\">生产力</span></li>\n<li>衡量社会进步的根本尺度：<span class=\"label\">生产力</span></li>\n</ul>\n</li>\n</ul>\n<div class=\"note primary\">\n<p>经济基础与上层建筑的矛盾运动及其规律 （第二对社会基本矛盾）</p>\n</div>\n<ul>\n<li>\n<p>经济基础的含义</p>\n<ul>\n<li>经济基础是指由社会一定发展阶段的生产力所决定的生产关系的总和。理解经济基础的内涵，要把握两点：</li>\n<li>第一，社会的一定发展阶段上往往存在多种生产关系，但决定一个社会性质的是其占支配地位的生产关系。</li>\n<li>第二，经济基础与经济体制具有内在联系</li>\n</ul>\n</li>\n<li>\n<p>上层建筑的含义</p>\n<ul>\n<li>\n<p>上层建筑是建立在一定经济基础之上的意识形态以及与之相适应的制度、组织和设施。自原始社会解体以来，上层建筑由意识形态以及政治法律制度及设施和政治组织两部分构成。意识形态又称为观念上层建筑，包括政治法律思想、道德、艺术、宗教、哲学等思想观点。政治法律制度及设施和政治组织又称为政治上层建筑，包括国家政治制度、立法司法制度和行政制度，以及国家政权机构、政党、军队、警察、法庭、监狱等政治组织形态和设施</p>\n</li>\n<li>\n<p>观念上层建筑和政治上层建筑的关系：</p>\n<ul>\n<li>首先，政治上层建筑是在一定意识形态指导下建立起来的，是统治阶级意志的体现。其次，政治上层建筑一旦形成，就成为一种现实的力员，影响并制约着人们的思想理论观点</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>经济基础与上层建筑的矛盾运动及其规律</p>\n<ul>\n<li>经济基础与上层建筑矛盾运动的规律，是人类社会发展的又一基本规律</li>\n</ul>\n</li>\n<li>\n<p>观念上层建筑和政治上层建筑的关系：</p>\n<ul>\n<li>首先，政治上层建筑是在一定意识形态指导下建立起来的，是统治阶级意志的体现。其次，政治上层建筑一旦形成，就成为一种现实的力员，影响并制约着人们的思想理论观点。</li>\n<li>在整个上层建筑中，政治上层建筑居主导地位，国家政权是核心。</li>\n<li><span class=\"rainbow\">国家的实质是一个阶级统治另一个阶级的工具</span>。</li>\n</ul>\n</li>\n<li>\n<p>经济基础和上层建筑的辩证关系：</p>\n<ul>\n<li>经济基础决定上层建筑</li>\n<li>上层建筑对经济基础具有反作用。</li>\n<li>经济基础与上层建筑的矛盾运动及其规律</li>\n<li>方法论的意义</li>\n</ul>\n</li>\n</ul>\n<div class=\"note warning no-icon\">\n<p>人类普遍交往与世界历史的形成和发展</p>\n</div>\n<ul>\n<li>\n<p>&quot;交往&quot; 是指：在一定历史条件下的显示的个人、群体、阶级、民族、国家之间在物质和精神上相互往来、相互作用、彼此联系的活动。</p>\n</li>\n<li>\n<p>&quot;交往&quot; 与 &quot;生产力&quot; 的关系：交往是生产力的发展相伴随的</p>\n</li>\n<li>\n<p>世界历史的形成和发展：</p>\n<ul>\n<li>生产方式的发展变革是世界历史形成和发展的基础。</li>\n<li>普通交往是世界历史的基本特征</li>\n<li>人类历史向世界历史的转变是资本主义生产方式出现和向世界扩张的结果。世界历史的形成又反过来促进了生产力的普遍发展和人类的普遍交往，推动了社会发展，为人的发展创造了条件。</li>\n</ul>\n</li>\n<li>\n<p>社会形态更替的一般规律及特殊形式</p>\n<ul>\n<li>社会形态的内涵\n<ul>\n<li>经济形态</li>\n<li>政治形态</li>\n<li>意识形态</li>\n</ul>\n</li>\n<li>社会形态更替的特点\n<ul>\n<li>统一性和多样性</li>\n<li>必然性与人们的历史选择性</li>\n<li>前进性和曲折性</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note warning no-icon\">\n<p>社会历史发展的动力</p>\n</div>\n<ul>\n<li>\n<p>社会基本矛盾是社会发展的根本动力 (第一动力)</p>\n<ul>\n<li>生产力和生产关系、经济基础和上层建筑的矛盾是社会基本矛盾</li>\n<li>社会基本矛盾作为历史发展的根本动力</li>\n</ul>\n</li>\n<li>\n<p>阶级斗争在阶级社会发展中的作用 (第二动力)</p>\n</li>\n<li>\n<p>社会革命在阶级社会发展中的作用 (第三动力)</p>\n</li>\n<li>\n<p>改革的性质 (第四动力)</p>\n</li>\n<li>\n<p>(第五动力)</p>\n</li>\n</ul>\n<h2 id=\"马克思政治经济学\"><a class=\"anchor\" href=\"#马克思政治经济学\">#</a> 马克思政治经济学</h2>\n<h3 id=\"资本主义的本质及规律\"><a class=\"anchor\" href=\"#资本主义的本质及规律\">#</a> 资本主义的本质及规律</h3>\n<h4 id=\"商品经济和价值规律\"><a class=\"anchor\" href=\"#商品经济和价值规律\">#</a> 商品经济和价值规律</h4>\n<ul>\n<li>\n<p>自然经济</p>\n<ul>\n<li>是一种以自给自足为特征的经济形式，以使用价值为生产目的。自然经济是原始社会、奴隶社会和封建社会的基本经济形式。</li>\n</ul>\n</li>\n<li>\n<p>商品经济产生的历史条件</p>\n<ul>\n<li>商品经济是以交换为目的而进行生产的经济形式，它不是从来就有的，而是一定社会历史条件下的产物【历史性】。商品经济得以产生的社会历史条件有两个：一是社会分工的存在，二是生产资料和劳动产品属于不同的所有者</li>\n</ul>\n</li>\n<li>\n<p>刷题总结</p>\n<ul>\n<li>自然经济以使用价值为生产目的， 商品经济以交换为生产目的。交换体现了商品经济的本质</li>\n</ul>\n</li>\n<li>\n<p>商品的二因素</p>\n<ul>\n<li>\n<p>商品的定义</p>\n<ul>\n<li>商品是用来交换的能满足人的某种需要的劳动产品，具有使用价值和价值两个因素，是使用价值和价值的矛盾统一体</li>\n</ul>\n</li>\n<li>\n<p>使用价值</p>\n<ul>\n<li>使用价值是指商品能满足人的某种需要的属性，即商品的有用性，反映的是人与自然之间的物质关系，是商品的自然属性。使用价值构成社会财富的物质内容。</li>\n</ul>\n</li>\n<li>\n<p>价值</p>\n<ul>\n<li>价值是凝结在商品中的无差别的一般人类劳动，即人类脑力和体力的耗费。价值是商品所特有的社会属性。【商品的价值是劳动创造的，其实体是凝结在商品中的无差别的人类劳动（抽象劳动），商品交换实际上是商品生产者之间相互交换劳动的关系，商品的价值在本质上体现了生产者之间的一定的社会关系】。任何有用物品都具有使用价值，但只有这种有用物品是劳动产品并作为商品时，它才具有价值。使用价值不同的商品之所以能按一定比例相交换，就是因为它们都具有价值。商品的价值在质的规定性上是相同的，因而它们可以相互比较</li>\n</ul>\n</li>\n<li>\n<p>交换价值</p>\n<ul>\n<li>交换价值首先表现为一种使用价值同另一种使用价值相交换的量的关系或比例。决定商品交换的比例的，不是商品的使用价值，而是价值。价值是交换价值的基础，交换价值是价值的表现形式\n<ul>\n<li>价值寓于使用价值之中</li>\n<li>劳动是使用价值的源泉之一，不是唯一源泉</li>\n<li>商品一定是劳动产品，但劳动产品不一定是商品</li>\n<li>使用价值是价值和交换价值的物质承担者，价值的存在要以使用价值的存在为前提</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>商品的价值和使用价值的对立统一关系</p>\n<ul>\n<li>其对立性表现在：商品的使用价值和价值是相互排斥的，二者不可兼得。要获得商品的价值，就必须放弃商品的使用价值；要得到商品的使用价值，就不能得到商品的价值。</li>\n<li>其统一性表现在：作为商品，必须<span class=\"rainbow\">同时</span>具有使用价值和价值两个因素。使用价值是价值的物质承担者，价值寓于使用价值之中。一种物品如果没有使用价值，就是无用之物，即使人们为它付出了大量的劳动，也没有价值。一种物品尽管具有使用价值，但如果不是劳动产品，也没有价值。</li>\n</ul>\n</li>\n<li>\n<p>生产商品的劳动二重性</p>\n<ul>\n<li>具体劳动的概念：生产一定使用价值的具体形式的劳动</li>\n<li>抽象劳动的概念：无差别的一般人类劳动，即人的体力和脑力的消耗</li>\n</ul>\n</li>\n<li>\n<p>💖 劳动二重性决定了商品的二因素</p>\n<ul>\n<li>: 具体劳动形成商品的使用价值，抽象劳动形成商品的价值实体</li>\n</ul>\n</li>\n<li>\n<p>具体劳动和抽象劳动的关系</p>\n<ul>\n<li>都是同一劳动的两种规定。</li>\n<li>一方面是特殊的具体劳动，另一方面是一般的抽象劳动</li>\n<li>具体劳动反映的是人与自然的关系，属于劳动的<span class=\"rainbow\">自然属性</span>，抽象劳动所反映的是商品生产者之间的社会关系，属于劳动的<span class=\"rainbow\">社会属性</span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"note warning no-icon\">\n<p>价值如何衡量</p>\n</div>\n<ul>\n<li>\n<p>商品价值量的决定</p>\n</li>\n<li>\n<p>商品价值量与劳动生产率的关系</p>\n</li>\n<li>\n<p>影响劳动生产率的因素主要包括</p>\n</li>\n<li>\n<p>简单劳动和复杂劳动</p>\n<ul>\n<li>简单劳动是指不需要经过专门训练和培养的一般劳动都能</li>\n<li>复杂劳动等于自乘的或多倍的简单劳动</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"资本主义的发展及其趋势\"><a class=\"anchor\" href=\"#资本主义的发展及其趋势\">#</a> 资本主义的发展及其趋势</h3>\n<h2 id=\"科学社会主义\"><a class=\"anchor\" href=\"#科学社会主义\">#</a> 科学社会主义</h2>\n<h3 id=\"社会主义的发展及其规律\"><a class=\"anchor\" href=\"#社会主义的发展及其规律\">#</a> 社会主义的发展及其规律</h3>\n<ul>\n<li></li>\n</ul>\n<h3 id=\"共产主义崇高理想及其最终实现\"><a class=\"anchor\" href=\"#共产主义崇高理想及其最终实现\">#</a> 共产主义崇高理想及其最终实现</h3>\n<h1 id=\"马原总结\"><a class=\"anchor\" href=\"#马原总结\">#</a> 马原总结</h1>\n<details class=\"primary\"><summary>运动和时空的关系</summary><div>\n<div class=\"note info\">\n<p>运动和时空的关系</p>\n</div>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">不同问法</th>\n<th style=\"text-align:center\">不同答案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">物质的共同属性</td>\n<td style=\"text-align:center\">客观实在性</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物质的根本属性 (固有属性)</td>\n<td style=\"text-align:center\">运动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物质的存在方式</td>\n<td style=\"text-align:center\">运动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">运动着的物质的存在形式</td>\n<td style=\"text-align:center\">时空</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">人的存在方式</td>\n<td style=\"text-align:center\">实践</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</div></details>\n<details class=\"primary\"><summary>意识的错误论断</summary><div>\n<div class=\"note info\">\n<p>意识的错误论断</p>\n</div>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">错误论断</th>\n<th style=\"text-align:center\">分析讲解</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">意识是人脑主观自生的</td>\n<td style=\"text-align:center\">意识是外部世界在人脑中的反映，光有人脑没有外部世界，意识不可能产生</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">意识是人脑的分泌物</td>\n<td style=\"text-align:center\">人脑的分泌物说到底还是物质，这句话混淆了物质和意识的界限，把意识当作某种物质来看待了</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">意识是某种特殊的物质</td>\n<td style=\"text-align:center\">意识不是物质，物质不是意识，二者不能混淆</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">意识就是人脑对外部世界的模仿</td>\n<td style=\"text-align:center\">模范只能说明了意识来源于外部世界，但是没有把能动的含义表达出来。意识不只是对外部世界的模仿，而应该说是 “能动反映”</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</div></details>\n<details class=\"primary\"><summary>物质与意识的辩证关系</summary><div>\n<div class=\"note info\">\n<p>物质与意识的辩证关系</p>\n</div>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">相互区别</th>\n<th style=\"text-align:center\">相互联系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">物质是本原，意识是派生</td>\n<td style=\"text-align:center\">物质可以转化为（变成）意识，意识可以转化为（变成）物质</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物质不是意识，意识不是物质</td>\n<td style=\"text-align:center\">意识对物质既有依赖性，又有相对独立性</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物质不能代替意识，意识不能代替物质</td>\n<td style=\"text-align:center\">物质决定意识，意识反作用于物质</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</div></details>\n<details class=\"primary\"><summary>马克思主义哲学于其他哲学派别的联系与区别</summary><div>\n<div class=\"note info\">\n<p>物质与意马克思主义哲学于其他哲学派别的联系与区别识的辩证关系</p>\n</div>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">联系</th>\n<th style=\"text-align:center\">区别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">马克思主义哲学与唯心主义哲学（唯心主义一元论）</td>\n<td style=\"text-align:center\">都是可知论</td>\n<td style=\"text-align:center\"><span class=\"label danger\">马克主义哲学认为物质是世界的本原，唯心主义认为意识是世界的本原</span>  <span class=\"label success\">马克主义哲学在认识论上坚持能动的反映论，唯心主义坚持先验论</span> <span class=\"label primary\">马克主义哲学彻底坚持辩证法，唯心主义部分坚持</span><span class=\"label info\">马克主义哲学在历史观上是唯物的，唯心主义在历史观上是唯心的</span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">马克思主义哲学与旧唯物主义哲学</td>\n<td style=\"text-align:center\">都是唯物主义，都认为物质是世界的本原</td>\n<td style=\"text-align:center\"><span class=\"label danger\">马克主义哲学在认识论上坚持能动的反映论，旧唯物主义坚持机械反映论</span><span class=\"label success\">马克主义哲学彻底坚持辩证法，旧唯物主义完全不认同辩证法，坚持形而上学</span> <span class=\"label primary\">马克主义哲学在历史观上是唯物的，旧唯物主义在历史观上是唯心的</span> <span class=\"label info\">马克主义哲学坚持实践的观点，旧唯物主义没有</span></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</div></details>\n",
            "tags": [
                "记录"
            ]
        },
        {
            "id": "https://hk2012.github.io/2022/10/21/doc/bigScreen/",
            "url": "https://hk2012.github.io/2022/10/21/doc/bigScreen/",
            "title": "主动标识数据大屏动态接口配置",
            "date_published": "2022-10-21T07:27:53.000Z",
            "content_html": "<h3 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h3>\n<pre><code>该文档只针对于 http://172.17.1.39:9000 数据大屏动态接口的数据配置介绍，不介绍特效组成和最终的展示的参数配置。\n</code></pre>\n<ul>\n<li>\n<p>主动标识数据大屏初步预览图<br />\n<img data-src=\"/img/%E4%B8%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E6%A0%87%E8%AF%86%E6%95%B0%E6%8D%AE%E5%A4%A7%E5%B1%8F%E9%A2%84%E8%A7%88%E5%9B%BE.png\" alt=\"主动数据标识数据大屏预览图\" /></p>\n</li>\n<li>\n<p>动态接口配置步骤图<br />\n<img data-src=\"/img/%E5%8A%A8%E6%80%81%E6%8E%A5%E5%8F%A3%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4.png\" alt=\"动态接口配置步骤图\" /><br />\n<img data-src=\"/img/%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%AD%A5%E9%AA%A4.png\" alt=\"接口数据处理步骤图\" /></p>\n</li>\n</ul>\n<h3 id=\"标识终端数量\"><a class=\"anchor\" href=\"#标识终端数量\">#</a> 标识终端数量</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>list</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string-property property\">\"pageNo\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string-property property\">\"pageSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span>data<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"设备统计\"><a class=\"anchor\" href=\"#设备统计\">#</a> 设备统计</h3>\n<h4 id=\"数采网关统计\"><a class=\"anchor\" href=\"#数采网关统计\">#</a> 数采网关统计</h4>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>list</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"GWINET607\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>label <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token number\">240</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"通讯模组统计\"><a class=\"anchor\" href=\"#通讯模组统计\">#</a> 通讯模组统计</h4>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>list</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D938INET8909\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>label <span class=\"token operator\">=</span> <span class=\"token string\">'通讯模组'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token number\">240</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"设备列表\"><a class=\"anchor\" href=\"#设备列表\">#</a> 设备列表</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>list</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string-property property\">\"pageNo\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string-property property\">\"pageSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> records <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> records<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        option<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        option<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>unionStatusName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        option<span class=\"token punctuation\">.</span>type  <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>thingTypeName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        dataResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> option<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"南京市地图\"><a class=\"anchor\" href=\"#南京市地图\">#</a> 南京市地图</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>geo<span class=\"token operator\">/</span>positions</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"onlineStatus\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string-property property\">\"thingTypeCode\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"inetdevice\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> record <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> record<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lng</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lat</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">zoom</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        option<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> record<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        option<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">var</span> position <span class=\"token operator\">=</span> record<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>propValue<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        option<span class=\"token punctuation\">.</span>lng <span class=\"token operator\">=</span> position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        option<span class=\"token punctuation\">.</span>lat <span class=\"token operator\">=</span> position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        option<span class=\"token punctuation\">.</span>zoom <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        dataResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> option<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"设备历史数据\"><a class=\"anchor\" href=\"#设备历史数据\">#</a> 设备历史数据</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>onoff<span class=\"token operator\">/</span>stat<span class=\"token operator\">/</span>day</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 当前时间戳</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> lastWeek <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 前 7 天的时间戳</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">padTo2Digits</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 格式化日期 yyyy-mm-dd HH:MM:DD</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">date</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token function\">padTo2Digits</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token function\">padTo2Digits</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">' '</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token function\">padTo2Digits</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token function\">padTo2Digits</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token function\">padTo2Digits</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token string-property property\">\"thingCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token string-property property\">\"thingTypeCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token string-property property\">\"startTime\"</span><span class=\"token operator\">:</span> <span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>lastWeek<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token string-property property\">\"endTime\"</span><span class=\"token operator\">:</span> <span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">let</span> seriesSub <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">let</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">categories</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">series</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> records <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> categories <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> deviceNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> records<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">let</span> category <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>statTime<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        categories<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> category<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        deviceNum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>categories <span class=\"token operator\">=</span> categories<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    seriesSub<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'在线数量'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    seriesSub<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> deviceNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    dataResult<span class=\"token punctuation\">.</span>series<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> seriesSub<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"温度top3\"><a class=\"anchor\" href=\"#温度top3\">#</a> 温度 TOP3</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>prop<span class=\"token operator\">/</span>topn</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"productCode\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"propCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"temperature\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string-property property\">\"num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> records <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> records<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        option<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>productName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        option<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">'在线'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        option<span class=\"token punctuation\">.</span>code  <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        option<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>propValue<span class=\"token operator\">+</span><span class=\"token string\">'°C'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        dataResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> option<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"湿度top3\"><a class=\"anchor\" href=\"#湿度top3\">#</a> 湿度 TOP3</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>prop<span class=\"token operator\">/</span>topn</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"productCode\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"propCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"humidity\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string-property property\">\"num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> records <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> records<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        option<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>productName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        option<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">'在线'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        option<span class=\"token punctuation\">.</span>code  <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        option<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>propValue<span class=\"token operator\">+</span><span class=\"token string\">'%rh'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        dataResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> option<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"震动top3\"><a class=\"anchor\" href=\"#震动top3\">#</a> 震动 TOP3</h3>\n<ul>\n<li>接口地址</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cloudtest<span class=\"token punctuation\">.</span>aivanlink<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>iotx<span class=\"token operator\">/</span>vandm<span class=\"token operator\">/</span>open<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>openapi<span class=\"token operator\">/</span>device<span class=\"token operator\">/</span>prop<span class=\"token operator\">/</span>topn</pre></td></tr></table></figure><ul>\n<li>请求方式</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post</pre></td></tr></table></figure><ul>\n<li>请求头</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span><span class=\"token string\">\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJMT0dJTl9VU0VSX0tFWSI6ImY0NjI3ODZjLTY3ZmEtNDIwMy05NWU0LTNlNzNkOTE3ZjQ4MSJ9.aN_5jkHdtsZhNPNplv1So5-F1qCtKVNhSwQ49r8N6VQ\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>请求参数</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"productCode\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"propCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string-property property\">\"num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>数据处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">,</span>refs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> dataResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> records <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> records<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        option<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>productName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        option<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">'在线'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        option<span class=\"token punctuation\">.</span>code  <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        option<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> records<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>propValue<span class=\"token operator\">+</span><span class=\"token string\">'mm'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        dataResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> option<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> dataResult</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "总结"
            ]
        }
    ]
}